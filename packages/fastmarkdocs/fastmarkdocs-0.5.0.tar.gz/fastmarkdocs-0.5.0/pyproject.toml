[tool.poetry]
name = "fastmarkdocs"
version = "0.5.0"
description = "A powerful library for enhancing FastAPI applications with rich markdown-based API documentation"
authors = ["Dan Vatca <dan.vatca@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/danvatca/fastmarkdocs"
repository = "https://github.com/danvatca/fastmarkdocs"
documentation = "https://github.com/danvatca/fastmarkdocs"
keywords = ["fastapi", "markdown", "documentation", "openapi", "api", "docs"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Documentation",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Framework :: FastAPI",
]
packages = [{include = "fastmarkdocs", from = "src"}]

[tool.poetry.scripts]
fmd-lint = "fastmarkdocs.linter_cli:main"
fmd-init = "fastmarkdocs.scaffolder_cli:main"

[tool.poetry.dependencies]
python = ">=3.9.2,<4.0"
fastapi = ">=0.68.0"
starlette = ">=0.40.0"
pydantic = ">=1.8.0"
mistune = ">=2.0.0"
pyyaml = ">=5.4.0"
pathvalidate = "^3.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.23.8"
pytest-cov = "^4.1.0"
black = "^24.3.0"
ruff = ">=0.11.13,<0.13.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"
requests = "^2.28.0"
uvicorn = ">=0.34.3,<0.36.0"
safety = "^3.5.2"
cryptography = "^44.0.1"
setuptools = "^78.1.1"
types-pyyaml = "^6.0.12.20250516"
bandit = "^1.8.5"



[tool.poetry.urls]
"Bug Tracker" = "https://github.com/danvatca/fastmarkdocs/issues"
"Changelog" = "https://github.com/danvatca/fastmarkdocs/blob/main/CHANGELOG.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

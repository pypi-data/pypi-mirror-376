Metadata-Version: 2.4
Name: ai-code-recorder-client
Version: 1.0.0
Summary: AI代码记录器 MCP 客户端 - 通过 MCP 协议记录 AI 生成的代码片段
Project-URL: Homepage, https://github.com/ai-code-team/ai-code-recorder
Project-URL: Repository, https://github.com/ai-code-team/ai-code-recorder
Project-URL: Issues, https://github.com/ai-code-team/ai-code-recorder/issues
Project-URL: Documentation, https://github.com/ai-code-team/ai-code-recorder/blob/main/README.md
Author-email: AI Code Recorder Team <contact@aicodeteam.com>
Maintainer-email: AI Code Recorder Team <contact@aicodeteam.com>
License: MIT
License-File: LICENSE
Keywords: ai,code,cursor,development,mcp,recorder
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Requires-Dist: fastmcp>=0.1.0
Requires-Dist: requests>=2.31.0
Description-Content-Type: text/markdown

# AI代码记录器客户端

AI代码记录器的客户端，运行在本地，获取Git信息并与远程服务器通信。

## 快速开始

### 1. 安装客户端

```bash
# 进入客户端目录
cd /Users/liuhe/workspace/learning/ai-code-recorder/client

# 安装
pip install -e .
```

### 2. 配置 Cursor

编辑 `~/.cursor/mcp.json`：

```json
{
  "mcpServers": {
    "ai-code-recorder": {
      "command": "uvx",
      "args": ["--from", "/Users/liuhe/workspace/learning/ai-code-recorder/client", "ai-code-recorder-client"]
    }
  }
}
```

### 3. 使用

1. 重启 Cursor
2. 在 Cursor 中输入：`ai-code-recorder init`
3. 开始使用 AI 生成代码，会自动记录

## 故障排除

- **uvx 未找到**：运行 `curl -LsSf https://astral.sh/uv/install.sh | sh`
- **连接失败**：检查服务器是否在 `http://10.111.200.14:9000` 运行
- **Git 错误**：确保在 Git 仓库目录中使用

就这么简单！
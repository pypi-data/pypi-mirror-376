name: Publish to PyPI

on:
  push:
    tags: ["v*.*.*"]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # [SEARCH] Sanity: ensure we're building in the directory that has pyproject.toml
      - name: Assert pyproject.toml is here
        run: |
          pwd
          ls -la
          test -f pyproject.toml || (echo "::error::pyproject.toml not found in $PWD. Set 'working-directory:' to the folder that contains it." && exit 1)

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Clean dist
        run: rm -rf dist

      # [BUILD] Build in isolated env using the pyproject's [build-system]
      - name: Build (PEP 517)
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
          python -m build

      # [INFO] Show the top of the wheel METADATA so we SEE Name/Version
      - name: Show wheel METADATA
        run: |
          python - <<'PY'
          import zipfile, glob, os, sys
          wheels = sorted(glob.glob("dist/*.whl"))
          if not wheels:
              print("No wheels in dist/"); sys.exit(1)
          wheel = wheels[-1]
          with zipfile.ZipFile(wheel) as zf:
              metas = [n for n in zf.namelist() if n.endswith(".dist-info/METADATA")]
              if not metas:
                  print("No .dist-info/METADATA in", wheel); sys.exit(1)
              data = zf.read(metas[0]).decode("utf-8", "replace").splitlines()
              print("===", os.path.basename(wheel), "===")
              for line in data[:20]:
                  print(line)
          PY

      # [+] Only check distributions (no stray folders)
      - name: Twine check
        run: |
          shopt -s nullglob
          files=(dist/*.whl dist/*.tar.gz)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::No distributions in dist/"; exit 1
          fi
          python -m twine check "${files[@]}"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

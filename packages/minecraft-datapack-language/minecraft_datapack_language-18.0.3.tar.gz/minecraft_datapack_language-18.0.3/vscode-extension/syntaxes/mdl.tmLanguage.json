
{
  "scopeName": "source.mdl",
  "patterns": [
    {
      "name": "keyword.control.mdl",
      "match": "\\b(pack|namespace|function|on_tick|on_load|tag|if|else|while|scheduledwhile|var|num|exec|with|recipe|loot_table|advancement|predicate|item_modifier|structure|pack_format|description)\\b"
    },
    {
      "name": "entity.name.section.mdl",
      "match": "^(\\s*)(pack|namespace|function|tag|recipe|loot_table|advancement|predicate|item_modifier|structure|on_tick|on_load)\\b"
    },
    {
      "name": "string.quoted.double.mdl",
      "match": "\"([^\"\\\\]|\\\\.)*\""
    },
    {
      "name": "string.quoted.single.mdl",
      "match": "'([^'\\\\]|\\\\.)*'"
    },
    {
      "name": "comment.line.mdl",
      "match": "//.*$"
    },
    {
      "name": "comment.block.mdl",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "name": "constant.numeric.mdl",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    {
      "name": "keyword.operator.comparison.mdl",
      "match": "(==|!=|<=|>=|<|>)"
    },
    {
      "name": "keyword.operator.logical.mdl",
      "match": "(&&|\\|\\||!)"
    },
    {
      "name": "keyword.operator.assignment.mdl",
      "match": "="
    },
    {
      "name": "keyword.operator.arithmetic.mdl",
      "match": "(\\+|\\-|\\*|/)"
    },
    {
      "name": "support.function.mdl",
      "match": "\\b(say|tellraw|effect|particle|execute|scoreboard|data|function|tag|tp|kill|summon|give|clear|enchant|gamemode|weather|time|difficulty|gamerule|title|playsound|stopsound|kick|ban|ban-ip|pardon|pardon-ip|whitelist|op|deop|save-all|save-off|save-on|list|me|msg|team|trigger|advancement|recipe|loot|schedule|return|run|fill|setblock|clone|teleport|spreadplayers|worldborder|xp|experience|replaceitem|testfor|testforblock|testforblocks|stats|blockdata|entitydata|setworldspawn|setidletimeout|stop|save|defaultgamemode|publish|spawnpoint|toggledownfall|bossbar|forceload|locate|seed|help|version|reload|debug|achievement|datapack|item|w|tell|broadcast)\\b"
    },
    {
      "name": "constant.other.range.mdl",
      "match": "\\.\\."
    },
    {
      "name": "punctuation.terminator.mdl",
      "match": ";"
    },
    {
      "name": "punctuation.section.block.mdl",
      "match": "[{}]"
    },
    {
      "name": "punctuation.section.parens.mdl",
      "match": "[()]"
    },
    {
      "name": "punctuation.section.brackets.mdl",
      "match": "[\\[\\]]"
    },
    {
      "name": "punctuation.angle.brackets.mdl",
      "match": "[<>]"
    },
    {
      "name": "punctuation.separator.mdl",
      "match": "[:]"
    },
    {
      "name": "variable.declaration.mdl",
      "begin": "\\b(var)\\s+(num)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)",
      "beginCaptures": {
        "1": { "name": "keyword.control.mdl" },
        "2": { "name": "keyword.type.mdl" },
        "3": { "name": "variable.other.mdl" },
        "4": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "entity.name.selector.tag.mdl",
          "match": "tag\\s*=\\s*[a-zA-Z0-9_\\-]+"
        },
        {
          "name": "constant.language.global.mdl",
          "match": "global"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "variable.assignment.mdl",
      "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)",
      "beginCaptures": {
        "1": { "name": "variable.other.mdl" },
        "2": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "entity.name.selector.tag.mdl",
          "match": "tag\\s*=\\s*[a-zA-Z0-9_\\-]+"
        },
        {
          "name": "constant.language.global.mdl",
          "match": "global"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "variable.substitution.mdl",
      "begin": "\\$([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)\\$",
      "beginCaptures": {
        "1": { "name": "variable.other.mdl" },
        "2": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" },
        "2": { "name": "keyword.operator.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "entity.name.selector.tag.mdl",
          "match": "tag\\s*=\\s*[a-zA-Z0-9_\\-]+"
        },
        {
          "name": "constant.language.global.mdl",
          "match": "global"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "variable.substitution.simple.mdl",
      "match": "\\$([a-zA-Z_][a-zA-Z0-9_]*)\\$",
      "captures": {
        "1": { "name": "variable.other.mdl" }
      }
    },
    {
      "name": "function.declaration.mdl",
      "begin": "\\b(function)\\s+([a-zA-Z_][a-zA-Z0-9_]*):([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)",
      "beginCaptures": {
        "1": { "name": "keyword.control.mdl" },
        "2": { "name": "entity.name.namespace.mdl" },
        "3": { "name": "entity.name.function.mdl" },
        "4": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "entity.name.selector.tag.mdl",
          "match": "tag\\s*=\\s*[a-zA-Z0-9_\\-]+"
        },
        {
          "name": "constant.language.global.mdl",
          "match": "global"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "function.call.mdl",
      "begin": "\\b(exec)\\s+([a-zA-Z_][a-zA-Z0-9_]*):([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)",
      "beginCaptures": {
        "1": { "name": "keyword.control.mdl" },
        "2": { "name": "entity.name.namespace.mdl" },
        "3": { "name": "entity.name.function.mdl" },
        "4": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "constant.language.global.mdl",
          "match": "global"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "hook.declaration.mdl",
      "begin": "\\b(on_(load|tick))\\s+([a-zA-Z_][a-zA-Z0-9_]*):([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
      "end": "(>)",
      "beginCaptures": {
        "1": { "name": "keyword.control.mdl" },
        "3": { "name": "entity.name.namespace.mdl" },
        "4": { "name": "entity.name.function.mdl" },
        "5": { "name": "punctuation.angle.brackets.mdl" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.angle.brackets.mdl" }
      },
      "patterns": [
        {
          "name": "entity.name.selector.mdl",
          "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
        },
        {
          "name": "entity.name.selector.arguments.mdl",
          "match": "\\[([^\\]]*)\\]"
        },
        {
          "name": "variable.other.mdl",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    {
      "name": "tag.declaration.mdl",
      "begin": "\\b(tag)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+\"([^\"]+)\"\\s+\"([^\"]+)\"",
      "beginCaptures": {
        "1": { "name": "keyword.control.mdl" },
        "2": { "name": "keyword.type.mdl" },
        "3": { "name": "string.quoted.double.mdl" },
        "4": { "name": "string.quoted.double.mdl" }
      }
    },
    {
      "name": "say.command.mdl",
      "begin": "\\b(say)\\s+\"",
      "end": "\"",
      "beginCaptures": {
        "1": { "name": "support.function.mdl" }
      },
      "endCaptures": {
        "0": { "name": "string.quoted.double.mdl" }
      },
      "patterns": [
        {
          "name": "variable.substitution.mdl",
          "begin": "\\$([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<)",
          "end": "(>)\\$",
          "beginCaptures": {
            "1": { "name": "variable.other.mdl" },
            "2": { "name": "punctuation.angle.brackets.mdl" }
          },
          "endCaptures": {
            "1": { "name": "punctuation.angle.brackets.mdl" },
            "2": { "name": "keyword.operator.mdl" }
          },
          "patterns": [
            {
              "name": "entity.name.selector.mdl",
              "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
            },
            {
              "name": "entity.name.selector.arguments.mdl",
              "match": "\\[([^\\]]*)\\]"
            },
            {
              "name": "variable.other.mdl",
              "match": "[a-zA-Z_][a-zA-Z0-9_]*"
            }
          ]
        }
      ]
    },
    {
      "name": "meta.macro.line.mdl",
      "match": "^\\s*\\$[^!].*$"
    },
    {
      "name": "entity.name.selector.mdl",
      "match": "(@p|@r|@a|@e|@s|@initiator|@c|@v|@d|@w)"
    },
    {
      "name": "entity.name.selector.arguments.mdl",
      "match": "\\[([^\\]]*)\\]"
    },
    {
      "name": "string.raw.mdl",
      "begin": "\\$!raw",
      "end": "raw!\\$",
      "beginCaptures": {
        "0": { "name": "keyword.raw.mdl" }
      },
      "endCaptures": {
        "0": { "name": "keyword.raw.end.mdl" }
      },
      "patterns": [
        {
          "name": "string.raw.content.mdl",
          "match": "."
        }
      ]
    },
    {
      "name": "keyword.control.with.mdl",
      "match": "\\b(with)\\b"
    },
    {
      "name": "constant.language.boolean.mdl",
      "match": "\\b(true|false)\\b"
    },
    {
      "name": "constant.language.null.mdl",
      "match": "\\b(null|undefined)\\b"
    }
  ]
}

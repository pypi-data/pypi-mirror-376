from pathib import Path
import tempfile, glob
from minecraft_datapack_language.mdl_parser import MDLParser
from minecraft_datapack_language.mdl_compiler import MDLCompiler

mdl_src = open('.tmp_bwe.mdl','w', encoding='utf-8')
mdl_src.write('''
pack "betterworldedit" "Generated by MDL CLI" 82;
namespace "betterworldedit";
var num _slice_h<@a> = 0; var num _base<@a> = 0; var num _slices<@a> = 0; var num _y_start<@a> = 0; var num _y_end<@a> = 0; var num _xs<@a> = 0; var num _xe<@a> = 0; var num _zs<@a> = 0; var num _ze<@a> = 0; var num _tile_x<@a> = 0; var num _tile_z<@a> = 0; var num _area_limit<@a> = 0; var num _temp<@a> = 0; var num bwe_dim_x<@a> = 0; var num bwe_dim_y<@a> = 0; var num bwe_dim_z<@a> = 0; var num bwe_min_x<@a> = 0; var num bwe_max_x<@a> = 10; var num bwe_min_z<@a> = 0; var num bwe_max_z<@a> = 10; var num bwe_max_y<@a> = 10; var num bwe_max_fill<@a> = 30000; var num bwe_volume<@a> = 40000;
function betterworldedit:_prepare_fill_ctx { }
function betterworldedit:_fill_slice_macro { }
function betterworldedit:set_stone {
    if $bwe_volume<@s>$ == 0 { } else {
        _base<@s> = $bwe_dim_x<@s>$ * $bwe_dim_z<@s>$;
        _slice_h<@s> = $bwe_max_fill<@s>$ / $_base<@s>$;
        if $_slice_h<@s>$ < 1 { _slice_h<@s> = 1; }
        if $_slice_h<@s>$ > $bwe_dim_y<@s>$ { _slice_h<@s> = $bwe_dim_y<@s>$; }
        _y_start<@s> = 0; _y_end<@s> = 0; _slices<@s> = 0;
        while $_y_start<@s>$ <= $bwe_max_y<@s>$ {
            _y_end<@s> = $_y_start<@s>$ + $_slice_h<@s>$ - 1;
            if $_y_end<@s>$ > $bwe_max_y<@s>$ { _y_end<@s> = $bwe_max_y<@s>$; }
            _area_limit<@s> = $bwe_max_fill<@s>$ / $_slice_h<@s>$;
            if $_area_limit<@s>$ < 1 { _area_limit<@s> = 1; }
            _tile_x<@s> = $_area_limit<@s>$ / $bwe_dim_z<@s>$; if $_tile_x<@s>$ < 1 { _tile_x<@s> = 1; } if $_tile_x<@s>$ > $bwe_dim_x<@s>$ { _tile_x<@s> = $bwe_dim_x<@s>$; }
            _tile_z<@s> = $_area_limit<@s>$ / $_tile_x<@s>$; if $_tile_z<@s>$ < 1 { _tile_z<@s> = 1; } if $_tile_z<@s>$ > $bwe_dim_z<@s>$ { _tile_z<@s> = $bwe_dim_z<@s>$; }
            _xs<@s> = $bwe_min_x<@s>$ + 0;
            while $_xs<@s>$ <= $bwe_max_x<@s>$ {
                _xe<@s> = $_xs<@s>$ + $_tile_x<@s>$ - 1; if $_xe<@s>$ > $bwe_max_x<@s>$ { _xe<@s> = $bwe_max_x<@s>$; }
                _zs<@s> = $bwe_min_z<@s>$ + 0;
                while $_zs<@s>$ <= $bwe_max_z<@s>$ {
                    _ze<@s> = $_zs<@s>$ + $_tile_z<@s>$ - 1; if $_ze<@s>$ > $bwe_max_z<@s>$ { _ze<@s> = $bwe_max_z<@s>$; }
                    exec betterworldedit:_prepare_fill_ctx; exec betterworldedit:_fill_slice_macro;
                    _slices<@s> = $_slices<@s>$ + 1;
                    _zs<@s> = $_ze<@s>$ + 1;
                }
                _xs<@s> = $_xe<@s>$ + 1;
            }
            _y_start<@s> = $_y_end<@s>$ + 1;
        }
    }
}
''')
mdl_src.close()

p = MDLParser()
ast = p.parse(Path('.tmp_bwe.mdl').read_text(encoding='utf-8'))

td = tempfile.TemporaryDirectory()
out = Path(td.name)
MDLCompiler().compile(ast, str(out))
func_dir = out / 'data' / 'betterworldedit' / 'function'

print('\n== set_stone.mcfunction ==\n')
print((func_dir/'set_stone.mcfunction').read_text())
for name in sorted(glob.glob(str(func_dir/'set_stone__else_*.mcfunction'))):
    print(f"\n== {Path(name).name} ==\n")
    print(Path(name).read_text())
for name in sorted(glob.glob(str(func_dir/'set_stone__while_*.mcfunction'))):
    print(f"\n== {Path(name).name} ==\n")
    print(Path(name).read_text())

bin_PROGRAMS = @nested_fit_target_ac@ @nested_fit_target_func_ac@

@AUTO_MAKE_INLINE_CODE_PRE@

@nested_fit_target_ac@_SOURCES = @SRC_SLATEC_AC@ @SRC_DIERCKX_AC@ @SRC_FILES_COMM_AC@ @SRC_FILES_DATA_AC@ @SRC_FILES_CXX_AC@

@nested_fit_target_func_ac@_SOURCES = @SRC_SLATEC_AC@ @SRC_DIERCKX_AC@ @SRC_FILES_COMM_AC@ @SRC_FILES_FUNC_AC@ @SRC_FILES_CXX_AC@

@nested_fit_target_func_ac@_CPPFLAGS = -DFUNC_TARGET
@nested_fit_target_func_ac@_FCFLAGS = -DFUNC_TARGET
@nested_fit_target_func_ac@_FFLAGS = -DFUNC_TARGET

if LTRACE
CPPFLAGS += -DLTRACE
FCFLAGS += -DLTRACE
FFLAGS += -DLTRACE
endif

# ST_PROF is not compatible with automake for now
CPPFLAGS += -DST_PROF -D'ST_PROF_NAMED(name)'
FCFLAGS += -D'PROFILED(x)'=''
FFLAGS += -D'PROFILED(x)'=''

if OPENMP
CPPFLAGS += -fopenmp
FCFLAGS += -fopenmp
FFLAGS += -fopenmp
endif

@AUTO_MAKE_INLINE_CODE@

if OPENMP
LIBS += -fopenmp
endif

# Build the nested_fit function cache
# src/helper/hash.f90
#     src/Mod_interpolate.f90
#     src/functions/internal_funcs.f90
#     src/Mod_logger.f90      # NOTE :(César) Required for logging from the shared lib
#     src/Mod_timestamp.f90   # NOTE :(César) Required for logging from the shared lib
#     src/functions/WOFZ.f

cache_files_f90 = @SRC_EXTERNAL_FUNCS_AC_F90@
cache_files_f77 = @SRC_EXTERNAL_FUNCS_AC_F77@

$(cache_files_f90): %.o: %.f90
	$(FC) -cpp -c @SRC_EXTERNAL_FUNCS_OBJ_FLAGS@ $< -o $@
	cp $@ $(nested_fit_cache_folder)$(notdir $@)

$(cache_files_f77): %.o: %.f
	$(F77) -cpp -c @SRC_EXTERNAL_FUNCS_OBJ_FLAGS@ $< -o $@
	cp $@ $(nested_fit_cache_folder)$(notdir $@)

cache-build: $(cache_files_f90) $(cache_files_f77)

all-local: cache-build

# Rename the executables to the right name
post-install:
	mv $(prefix)/bin/@nested_fit_target_ac@ $(prefix)/bin/@nested_fit_target@
	mv $(prefix)/bin/@nested_fit_target_func_ac@ $(prefix)/bin/@nested_fit_target_func@

install-exec-hook: post-install


[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "solubilityCCS"
dynamic = ["version"]
description = "A Python package for analyzing solubility and acid formation behavior in Carbon Capture and Storage (CCS) systems"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "SolubilityCCS Contributors"}
]
maintainers = [
    {name = "SolubilityCCS Contributors"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = [
    "carbon-capture",
    "ccs",
    "solubility",
    "acid-formation",
    "phase-behavior",
    "thermodynamics"
]
requires-python = ">=3.9"
dependencies = [
    "neqsim",
    "scipy",
    "matplotlib",
    "pandas",
    "numpy"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "black",
    "isort",
    "mypy",
    "pre-commit"
]
notebook = [
    "ipykernel",
    "jupyter",
    "notebook"
]

[project.urls]
Homepage = "https://github.com/your-username/SolubilityCCS"
Documentation = "https://github.com/your-username/SolubilityCCS#readme"
Repository = "https://github.com/your-username/SolubilityCCS"
"Bug Tracker" = "https://github.com/your-username/SolubilityCCS/issues"

[tool.setuptools_scm]
write_to = "solubilityccs/_version.py"

[tool.setuptools.packages.find]
where = ["."]
include = ["solubilityccs*"]

[tool.setuptools.package-data]
solubilityccs = ["Database/*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | htmlcov
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/venv/*", "*/env/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "matplotlib.*",
    "scipy.*",
    "pytest.*",
]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "numpy"
add-ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
]

[tool.bandit]
exclude_dirs = ["tests", "test_*.py"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_start

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    ".",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[project]
name = "teradata-mcp-server"
version = "0.1.5.post2"
description = "Model Context Protocol (MCP) server for Teradata, Community edition"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT"}
authors = [
    {name = "Teradata"}
]
requires-python = ">=3.11"
keywords = ["teradata", "mcp", "database", "sql", "model-context-protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pydantic>=2.8.0,<3.0.0",
    "fastmcp>=2.12.0,<3.0.0",
    "mcp[cli]>=1.0.0,<2.0.0",
    "teradatasqlalchemy>=20.0.0.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0.0",
    "sqlalchemy>=2.0.0,<3.0.0",
]

[project.optional-dependencies]
# Feature Store functionality
fs = [
    "teradataml>=20.0.0.5",
    "tdfs4ds>=0.2.4.0",
]
# Enterprise Vector Store functionality  
evs = [
    "teradatagenai>=20.0.0.0",
]
# Development dependencies 
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-PyYAML",
]

[project.scripts]
teradata-mcp-server = "teradata_mcp_server:main"

[project.urls]
Homepage = "https://github.com/Teradata/teradata-mcp-server"
Documentation = "https://github.com/Teradata/teradata-mcp-server#readme"
Repository = "https://github.com/Teradata/teradata-mcp-server.git"
"Bug Tracker" = "https://github.com/Teradata/teradata-mcp-server/issues"
"Source" = "https://github.com/Teradata/teradata-mcp-server"
"Discussions" = "https://github.com/Teradata/teradata-mcp-server/discussions"

[build-system]
requires = ["hatchling>=1.17.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/teradata_mcp_server"]
include = [
  "src/teradata_mcp_server/tools/**/*.yml",
  "src/teradata_mcp_server/config/**/*.yml",
]

[tool.uv]
package = true

[tool.ruff]
line-length = 120
target-version = "py311"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PIE", # flake8-pie
    "PL",  # pylint
]
ignore = [
    "F403",  # Wildcard imports (temporarily ignore for gradual refactoring)
    "F401",  # Unused imports in __init__.py files (common pattern for re-exports)
    "E402",  # Module level import not at top (some tools have conditional imports)
    "E501",  # strings over 120 characters
    "N816",  # Variable naming (existing legacy naming)
    "N802",  # Function naming (preserve existing naming conventions)
    "N803",  # Argument naming (preserve existing naming conventions)
    "B905",  # zip() without explicit strict parameter (backwards compatibility)
    "B008",  # Function call in default argument (existing pattern)
    "F841",  # Unused variable (may be intentional in some cases)
    "PLR0913", # Too many arguments (common in database tools)
    "PLR0912", # Too many branches (common in conditional logic)
    "PLR0915", # Too many statements (common in setup functions)
    "PLW0603", # Use of globals statements
    "PLC0415", # Import statements outside the module top level scope
]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F403", "F401"]  # Allow wildcard imports and unused imports in __init__.py
"tests/*" = ["F401", "F403", "PLR0913"]  # More lenient for test files

[tool.ruff.lint.isort]
known-first-party = ["teradata_mcp_server"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradually enable this
ignore_missing_imports = true
strict_optional = true

[dependency-groups]
dev = [
    "build>=1.3.0",
]




[tool.hatch.build.targets.sdist]
include = [
  "src/teradata_mcp_server",
  "README.md",
  "LICENSE",
]

# ───────────────────────────────────────────────────── imports ────────────────────────────────────────────────────── #
from typing import Any

from pydantic import BaseModel, Field

# Source imports
from rocket.dtos.library_dtos import LibraryInfo

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
#                           specifies all modules that shall be loaded and imported into the                           #
#                                current namespace when we use 'from package import *'                                 #
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #

__all__ = ["EvomlId", "BaseEvomlId", "EstimatorInfo", "EvomlModelInfo"]


# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
#                                                      DTO Models                                                      #
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #


class EvomlId(BaseModel):
    """Data that identifies an EvoML optimization model."""

    optimization_id: str = Field(..., description="Unique ID of a trial execution")
    model_id: str = Field(..., description="Unique ID a ML model created by an specific trial configuration")

    @property
    def data_id(self) -> "EvomlId":
        return EvomlId(**self.dict())


class BaseEvomlId(BaseModel):
    """Data model with EvomlId field"""

    evoml_id: EvomlId = Field(..., description="Data that identifies an EvoML optimization model")

    def __init__(self, **data: Any):
        if "evoml_id" not in data:
            data["evoml_id"] = EvomlId(**data)
        super().__init__(**data)


class EstimatorInfo(BaseModel):
    """Information about the file generated by the estimator and its dependencies"""

    file_id: str = Field(..., description="File Id of the fil generated by the estimator")
    library: LibraryInfo = Field(..., description="Information about the library used by the producer")


class EvomlModelInfo(BaseModel):
    """General information about the EvoML model"""

    ml_task: str = Field(..., description="Machine learning task type.")
    model_id: str = Field(..., description="EvoML model ID.")
    model_name: str = Field(..., description="EvoML model name.")
    model_type: str = Field(..., description="EvoML model type.")
    trial_id: str = Field(..., description="EvoML trial ID.")
    trial_name: str = Field(..., description="EvoML trial name.")
    train_target: str = Field(..., description="The outcome column name of the ML model.")

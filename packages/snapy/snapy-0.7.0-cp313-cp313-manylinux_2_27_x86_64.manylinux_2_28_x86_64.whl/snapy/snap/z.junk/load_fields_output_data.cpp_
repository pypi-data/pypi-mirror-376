
void OutputType::loadUserOutputData(MeshBlock *pmb) {
  // vector of cell-centered magnetic field
  if (ContainVariable(output_params.variable, "bcc") ||
      ContainVariable(output_params.variable, "prim") ||
      ContainVariable(output_params.variable, "cons")) {
    pod = new OutputData;
    pod->type = "VECTORS";
    pod->name = "Bcc";
    pod->data.InitWithShallowSlice(pfld->bcc, 4, IB1, 3);
    AppendOutputDataNode(pod);
    num_vars_ += 3;
    if (output_params.cartesian_vector) {
      AthenaArray<Real> src;
      src.InitWithShallowSlice(pfld->bcc, 4, IB1, 3);
      pod = new OutputData;
      pod->type = "VECTORS";
      pod->name = "Bcc_xyz";
      pod->data.NewAthenaArray(3, pfld->bcc.GetDim3(), pfld->bcc.GetDim2(),
                               pfld->bcc.GetDim1());
      CalculateCartesianVector(src, pod->data, pmb->pcoord);
      AppendOutputDataNode(pod);
      num_vars_ += 3;
    }
  }

  // each component of cell-centered magnetic field
  if (ContainVariable(output_params.variable, "bcc1")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "Bcc1";
    pod->data.InitWithShallowSlice(pfld->bcc, 4, IB1, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
  if (ContainVariable(output_params.variable, "bcc2")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "Bcc2";
    pod->data.InitWithShallowSlice(pfld->bcc, 4, IB2, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
  if (ContainVariable(output_params.variable, "bcc3")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "Bcc3";
    pod->data.InitWithShallowSlice(pfld->bcc, 4, IB3, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
  // each component of face-centered magnetic field
  if (ContainVariable(output_params.variable, "b1")
      || ContainVariable(output_params.variable, "b")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "B1";
    pod->data.InitWithShallowSlice(pfld->b.x1f, 4, 0, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
  if (ContainVariable(output_params.variable, "b2")
      || ContainVariable(output_params.variable, "b")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "B2";
    pod->data.InitWithShallowSlice(pfld->b.x2f, 4, 0, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
  if (ContainVariable(output_params.variable, "b3")
      || ContainVariable(output_params.variable, "b")) {
    pod = new OutputData;
    pod->type = "SCALARS";
    pod->name = "B3";
    pod->data.InitWithShallowSlice(pfld->b.x3f, 4, 0, 1);
    AppendOutputDataNode(pod);
    num_vars_++;
  }
}

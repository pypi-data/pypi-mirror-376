
void OutputType::loadOrbitalOutputData(MeshBlock pmb) {
  if (NON_BAROTROPIC_EOS) {
    if (ContainVariable(output_params.variable, "E") ||
        ContainVariable(output_params.variable, "cons")) {
      porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::cons);
      pod->data.InitWithSlice(porb->u_orb, 4, IEN, 1);
    }

    if (ContainVariable(output_params.variable, "m") ||
        ContainVariable(output_params.variable, "cons")) {
      porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::cons);
      pod->data.InitWithSlice(porb->u_orb, 4, IM1, 3);

      if (output_params.cartesian_vector) {
        AthenaArray<Real> src;
        src.InitWithSlice(porb->u_orb, 4, IM1, 3);
      }
    }

    if (ContainVariable(output_params.variable, "m1")) {
      porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::cons);
      pod->data.InitWithSlice(porb->u_orb, 4, IM2, 1);
    }

    if (ContainVariable(output_params.variable, "m3")) {
      if (porb->orbital_direction == 2) {
        porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::cons);
        pod->data.InitWithSlice(porb->u_orb, 4, IM3, 1);
      }
    }
  }

  if (ContainVariable(output_params.variable, "v") ||
      ContainVariable(output_params.variable, "prim")) {
    porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::prim);
    pod->data.InitWithShallowSlice(porb->w_orb, 4, IVX, 3);
  }

  if (ContainVariable(output_params.variable, "vx") ||
      ContainVariable(output_params.variable, "v1")) {
    if (porb->orbital_direction == 1) {
      porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::prim);
      pod->data.InitWithShallowSlice(porb->w_orb, 4, IVY, 1);
    }
  }

  if (ContainVariable(output_params.variable, "vz") ||
      ContainVariable(output_params.variable, "v3")) {
    if (porb->orbital_direction == 2) {
      porb->ConvertOrbitalSystem(pmb->hydro_w, pmb->hydro_u, OrbitalTransform::prim);
      pod->data.InitWithShallowSlice(porb->w_orb, 4, IVZ, 1);
    }
  }
}

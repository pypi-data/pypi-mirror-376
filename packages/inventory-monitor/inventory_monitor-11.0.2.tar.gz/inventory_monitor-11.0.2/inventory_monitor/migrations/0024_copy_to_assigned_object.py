# Generated by Django 5.1.5 on 2025-03-03 11:58

from django.db import migrations


def copy_to_assigned_object(apps, schema_editor):
    """
    Migrate data from site, device, and location to assigned_object
    """
    Asset = apps.get_model("inventory_monitor", "Asset")
    ContentType = apps.get_model("contenttypes", "ContentType")

    site_ct = ContentType.objects.get(app_label="dcim", model="site")
    device_ct = ContentType.objects.get(app_label="dcim", model="device")
    location_ct = ContentType.objects.get(app_label="dcim", model="location")

    # Migrate site assignments
    for asset in Asset.objects.filter(site__isnull=False):
        asset.assigned_object_type = site_ct
        asset.assigned_object_id = asset.site.id
        asset.save()

    # Migrate location assignments
    for asset in Asset.objects.filter(location__isnull=False):
        asset.assigned_object_type = location_ct
        asset.assigned_object_id = asset.location.id
        asset.save()

    # Migrate device assignments
    for asset in Asset.objects.filter(device__isnull=False):
        asset.assigned_object_type = device_ct
        asset.assigned_object_id = asset.device.id
        asset.save()


def reverse_migration(apps, schema_editor):
    """
    Reverse the migration by copying data from assigned_object back to individual fields
    """
    Asset = apps.get_model("inventory_monitor", "Asset")
    ContentType = apps.get_model("contenttypes", "ContentType")

    # Get content types for the models
    site_ct = ContentType.objects.get(app_label="dcim", model="site")
    device_ct = ContentType.objects.get(app_label="dcim", model="device")
    location_ct = ContentType.objects.get(app_label="dcim", model="location")

    # Restore site assignments
    for asset in Asset.objects.filter(assigned_object_type=site_ct):
        asset.site_id = asset.assigned_object_id
        asset.save()

    # Restore location assignments
    for asset in Asset.objects.filter(assigned_object_type=location_ct):
        asset.location_id = asset.assigned_object_id
        asset.save()

    # Restore device assignments
    for asset in Asset.objects.filter(assigned_object_type=device_ct):
        asset.device_id = asset.assigned_object_id
        asset.save()


class Migration(migrations.Migration):
    dependencies = [
        (
            "inventory_monitor",
            "0023_asset_assigned_object_id_asset_assigned_object_type",
        ),
    ]

    operations = [
        migrations.RunPython(copy_to_assigned_object, reverse_migration),
    ]

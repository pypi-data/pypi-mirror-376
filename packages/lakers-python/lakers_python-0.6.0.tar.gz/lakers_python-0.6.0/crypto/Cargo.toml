[package]
name = "lakers-crypto"
version.workspace = true
edition = "2021"
authors = ["Mališa Vučinić <malisa.vucinic@inria.fr>"]
license.workspace = true
description = "EDHOC crypto library dispatch crate"
repository.workspace = true
readme = "README.md"

[dependencies]
cfg-if = { version = "1.0", default-features = false }
lakers-shared = { package = "lakers-shared", path = "../shared", default-features = false }

# psa
lakers-crypto-psa = { workspace = true, default-features = false, optional = true }

# cryptocell for nrf52840
lakers-crypto-cryptocell310 = { workspace = true, optional = true }

# software implementations from rustcrypto
lakers-crypto-rustcrypto = { workspace = true, optional = true }
rand_core = { version = "0.6.4", optional = true, default-features = false }

[dev-dependencies]
hexlit = "0.5.3"
rstest = "0.11.0"

[features]
default = [  ]
psa = [ "lakers-crypto-psa" ]
psa-baremetal = [ "psa", "lakers-crypto-psa/baremetal" ]
cryptocell310 = [ "lakers-crypto-cryptocell310" ]
# This requires std because we need to conjure randomness from thin air;
# embedded systems can still use rustcrypto but need to provide a crypto from
# lakers-crypto-rustcrypto on their own, and combine it with an entropy choice
# of their avail.
rustcrypto = [ "lakers-crypto-rustcrypto", "rand_core/getrandom" ]

[workspace]

members = ["lakers-python"]

# reduced "default-members", should include only packages that can be built and
# tested on the host architecture
default-members = [
  "lib",
  "crypto",
  "crypto/lakers-crypto-rustcrypto",
  "examples/coap",
]

# according to https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html,
# this needs to be explicitly set if using virtual manifests (like this).
# We need this so dependency crates use it *in all cases*.
# Specifically, `psa-crypto` merges build-dependency and regular dependency
# features without this, causing forced "std" in downstream crate.
resolver = "2"

[workspace.package]
version = "0.8.0"
repository = "https://github.com/lake-rs/lakers/"
license = "BSD-3-Clause"
readme = "shared/README.md"
keywords = ["iot", "security", "protocol", "crypto", "edhoc"]
categories = [ "no-std::no-alloc", "network-programming", "embedded" ]

[workspace.dependencies]

lakers-shared = { package = "lakers-shared", path = "shared/", version = "^0.8.0" }

lakers-ead-authz = { package = "lakers-ead-authz", path = "ead/lakers-ead-authz/", version = "^0.8.0" }

lakers-crypto = { path = "crypto/" }
lakers-crypto-cryptocell310 = { path = "crypto/lakers-crypto-cryptocell310-sys/" }
lakers-crypto-psa = { path = "crypto/lakers-crypto-psa/" }
lakers-crypto-rustcrypto = { package = "lakers-crypto-rustcrypto", path = "crypto/lakers-crypto-rustcrypto/", version = "^0.8.0" }

lakers = { package = "lakers", path = "lib/", version = "^0.8.0", default-features = false }

# Beware that those two lines are mogrified in CI so that hax can find the proof-libs through the git path:
hax-lib = { version = "0.3.1", default-features = false, features = ["macros"] }
# to get proof-libs: hax-lib = { git = "https://github.com/cryspen/hax", default-features = false, features = ["macros"] }

[patch.crates-io]
psa-crypto = { git = "https://github.com/malishav/rust-psa-crypto", branch = "baremetal" }

[project]
name = "pytest-fixtures-fixtures"
version = "0.3.4"
description = "Handy fixtues to access your fixtures from your _pytest_ tests."
readme = "readme.md"
authors = [
    { name = "Antonio Feregrino", email = "antonio.feregrino@gmail.com" }
]
maintainers = [
    { name = "Antonio Feregrino", email = "antonio.feregrino@gmail.com" }
]
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = [
    "testing",
    "pytest",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "pytest>=8.4.1",
]

[project.urls]
Homepage = "https://github.com/fferegrino/pytest-fixtures-fixtures"
Repository = "https://github.com/fferegrino/pytest-fixtures-fixtures.git"
Issues = "https://github.com/fferegrino/pytest-fixtures-fixtures/issues"


[dependency-groups]
dev = [
    "bump-my-version>=1.2.1",
    "pytest>=8.4.1",
    "pyyaml>=6.0.2",
    "ruff>=0.12.11",
]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-autorefs>=1.2.0",
    "mkdocstrings[python]>=0.26.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
]

[project.entry-points.pytest11]
pytest_fixtures_fixtures = "pytest_fixtures_fixtures.pytest_plugin"

[tool.bumpversion]
current_version = "0.3.4"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
tag = true
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
commit = true
message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
pre_commit_hooks = [
    "uv sync",
    "git add uv.lock",
]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "src/pytest_fixtures_fixtures/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.ruff]
line-length = 120
exclude = [".git", ".venv"]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe (we are not ready)
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "FBT", # flake8-boolean-trap
    "I", # isort
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PL", # pylint
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "YTT", # flake8-2020
]
ignore = [
    "D203", # One blank line before class
    "D212", # Multiline summary second line
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
]

[tool.ruff.lint.isort]
known-first-party = ["pytest_fixtures_fixtures"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "B011", # Do not `assert False`
    "D401", # First line of docstring should be in imperative mood
    "D404", # First word of the docstring should not be "This"
    "F841", # Local variable is assigned to but never used
    "PLR2004", # Magic values
    "PLR0913", # Too many arguments in function definition
    "PLC0415", # `import` should be at the top-level of a file
    "SIM117", # Use a single `with` statement
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D203", # One blank line before class
    "D212", # Multiline summary second line
]
"*.ipynb" = [
    "ALL"
]

[build-system]
requires = ["uv_build>=0.8.6,<0.9.0"]
build-backend = "uv_build"

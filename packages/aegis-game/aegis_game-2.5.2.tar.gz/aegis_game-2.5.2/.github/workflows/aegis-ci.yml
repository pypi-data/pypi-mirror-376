name: Aegis CI

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'src/**' # only run if something in src/ changes

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install ruff
        run: pip install ruff

      - name: Run ruff lint
        run: ruff check src

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --dev

      - name: Run tests
        run: uv run pytest

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ !failure() && github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: ${{ hashFiles('.github/release-please-config.json') != '' && '.github/release-please-config.json' || '' }}
          manifest-file: ${{ hashFiles('.github/release-please-manifest.json') != '' && '.github/release-please-manifest.json' || hashFiles('.github/.release-please-manifest.json') != '' && '.github/.release-please-manifest.json' || '' }}

      - name: Debug release
        continue-on-error: true
        run: |
          echo "${{ toJSON(steps.release.outputs) }}"

      - name: Install uv
        # if: ${{ steps.release.outputs.releases_created == 'true' }}
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Install dependencies
        # if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: uv sync --dev

      - name: Build
        # if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: uv build

      - name: Publish to PyPI
        # if: ${{ steps.release.outputs.releases_created == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          # repository-url: https://test.pypi.org/legacy/
          # comment line above to publish to normal pypi

      - name: Tag stable versions
        # if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d aegis/stable || true
          git push origin :aegis/stable || true
          git tag -a aegis/stable -m "Last Stable Aegis Release"
          git push origin aegis/stable

name: Aegis CI

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'src/**' # only run if something in src/ changes

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install ruff
        run: pip install ruff

      - name: Run ruff lint
        run: ruff check src

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --dev

      - name: Run tests
        run: uv run pytest

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ !failure() && github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --dev

      - name: Check if release-branch was merged
        id: check-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MERGED=$(gh pr list --state merged --head release-branch --json number --jq '.[0].number' || echo "")
          if [ -n "$MERGED" ]; then
            echo "release_merged=true" >> $GITHUB_OUTPUT
            echo "Found merged PR #$MERGED"
          else
            echo "release_merged=false" >> $GITHUB_OUTPUT
            echo "No merged PR found for release-branch"
          fi

      - name: Build
        if: steps.check-pr.outputs.release_merged == 'true'
        run: uv build

      - name: Publish to PyPI
        if: steps.check-pr.outputs.release_merged == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

      - name: Tag release
        if: steps.check-pr.outputs.release_merged == 'true'
        run: |
          VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag aegis-v$VERSION
          git push origin aegis-v$VERSION 

      - name: Run custom release script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: uv run scripts/release.py

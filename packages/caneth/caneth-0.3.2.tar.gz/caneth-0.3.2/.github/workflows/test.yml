name: Tests

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    name: Python ${{ matrix.python-version }} â€¢ Ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required for tokenless Codecov upload (OIDC)
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install pytest pytest-asyncio pytest-cov

      - name: Test
        run: |
          pytest --maxfail=1 -q --cov=caneth --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml

      # Tokenless upload to Codecov via OIDC (public repos)
      # Upload once to reduce duplicate reports
      - name: Upload to Codecov
        if: ${{ !github.event.repository.private && matrix.python-version == '3.13' }}
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          name: coverage-${{ matrix.python-version }}
          flags: unittests
          fail_ci_if_error: false
          verbose: true

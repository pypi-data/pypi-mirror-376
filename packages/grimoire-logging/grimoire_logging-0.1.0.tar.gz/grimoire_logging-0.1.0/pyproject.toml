[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grimoire-logging"
dynamic = ["version"]
description = "Flexible logging utilities with dependency injection support for use in GRIMOIRE"
readme = "README.md"
license = "MIT"
authors = [
    { name = "The Wyrd One", email = "wyrdbound@proton.me" },
]
maintainers = [
    { name = "The Wyrd One", email = "wyrdbound@proton.me" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: Games/Entertainment :: Role-Playing",
    "Typing :: Typed",
]
keywords = [
    "logging",
    "dependency-injection",
    "grimoire",
    "tabletop",
    "rpg",
    "thread-safe",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/wyrdbound/grimoire-logging"
Documentation = "https://github.com/wyrdbound/grimoire-logging#readme"
Repository = "https://github.com/wyrdbound/grimoire-logging.git"
Issues = "https://github.com/wyrdbound/grimoire-logging/issues"
Changelog = "https://github.com/wyrdbound/grimoire-logging/releases"

[tool.hatch.version]
path = "src/grimoire_logging/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/grimoire_logging"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["grimoire_logging"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "FLY", # flynt
    "PERF", # perflint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
    "ARG001", # unused function argument
    "TID252", # prefer absolute imports over relative imports from parent modules
]

[tool.ruff.lint.isort]
known-first-party = ["grimoire_logging"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "FBT", "PLR2004", "S101"]
"src/grimoire_logging/__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
authors = []
requires-python = ">=3.9"
dependencies = [
    "langchain-core<1.0.0,>=0.3.76",
    "exa-py<2.0.0,>=1.0.8",
]
name = "langchain-exa"
version = "0.3.1"
description = "An integration package connecting Exa and LangChain"
readme = "README.md"

[project.license]
text = "MIT"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/exa"
"Release Notes" = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain-exa%3D%3D0%22&expanded=true"
repository = "https://github.com/langchain-ai/langchain"

[dependency-groups]
test = [
    "pytest<8.0.0,>=7.3.0",
    "freezegun<2.0.0,>=1.2.2",
    "pytest-mock<4.0.0,>=3.10.0",
    "syrupy<5.0.0,>=4.0.2",
    "pytest-watcher<1.0.0,>=0.3.4",
    "pytest-asyncio<1.0.0,>=0.21.1",
    "langchain-core",
]
codespell = [
    "codespell<3.0.0,>=2.2.0",
]
lint = [
    "ruff<0.13,>=0.12.2",
]
dev = [
    "langchain-core",
]
test_integration = []
typing = [
    "mypy<2.0,>=1.10",
    "langchain-core",
    "pydantic>2.0,<2.10",
]

[tool.uv.sources.langchain-core]
path = "../../core"
editable = true

[tool.mypy]
disallow_untyped_defs = "True"

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "A",
    "ASYNC",
    "C4",
    "COM",
    "D",
    "E",
    "EM",
    "F",
    "FA",
    "FBT",
    "FLY",
    "I",
    "ICN",
    "INT",
    "ISC",
    "PGH",
    "PIE",
    "PERF",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SLF",
    "SLOT",
    "SIM",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D203",
    "D213",
    "COM812",
    "ISC001",
    "PERF203",
    "S112",
    "RUF012",
    "SLF001",
    "UP007",
    "UP045",
]
unfixable = [
    "B028",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101",
    "S311",
]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
markers = [
    "requires: mark tests as requiring a specific library",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

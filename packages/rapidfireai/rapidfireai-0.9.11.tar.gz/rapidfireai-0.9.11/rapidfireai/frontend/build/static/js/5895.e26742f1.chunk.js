"use strict";(self.webpackChunk_mlflow_mlflow=self.webpackChunk_mlflow_mlflow||[]).push([[5895],{35895:function(e,t,o){o.d(t,{f:function(){return R},s:function(){return f}});var r=o(16892),i=o(6788),n=o(85991),s=o(75570),a=o(24242),p=o(33025),l=o(94189),d=o(42614),c=o(19837),u=o(25644),h=o(97998),g=o(7884),y=function(e,t,o,r){var i,n=arguments.length,s=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(n<3?i(s):n>3?i(t,o,s):i(t,o))||s);return n>3&&s&&Object.defineProperty(t,o,s),s};function f(e){var t=e;return null!=t&&null!=t.getFrameworkComponentInstance?t.getFrameworkComponentInstance():e}var R=function(){function e(){this.detailGridInfoMap={},this.destroyCalled=!1}return e.prototype.registerOverlayWrapperComp=function(e){this.overlayWrapperComp=e},e.prototype.registerSideBarComp=function(e){this.sideBarComp=e},e.prototype.init=function(){var e=this;switch(this.rowModel.getType()){case r.Y.ROW_MODEL_TYPE_CLIENT_SIDE:this.clientSideRowModel=this.rowModel;break;case r.Y.ROW_MODEL_TYPE_INFINITE:this.infiniteRowModel=this.rowModel;break;case r.Y.ROW_MODEL_TYPE_SERVER_SIDE:this.serverSideRowModel=this.rowModel}this.ctrlsService.whenReady((function(){e.gridBodyCtrl=e.ctrlsService.getGridBodyCtrl()}))},e.prototype.__getAlignedGridService=function(){return this.alignedGridsService},e.prototype.__getContext=function(){return this.context},e.prototype.addDetailGridInfo=function(e,t){this.detailGridInfoMap[e]=t},e.prototype.removeDetailGridInfo=function(e){this.detailGridInfoMap[e]=void 0},e.prototype.getDetailGridInfo=function(e){return this.detailGridInfoMap[e]},e.prototype.forEachDetailGridInfo=function(e){var t=0;(0,h.iterateObject)(this.detailGridInfoMap,(function(o,r){(0,u.exists)(r)&&(e(r,t),t++)}))},e.prototype.getDataAsCsv=function(e){if(d.s.assertRegistered(l.z.CsvExportModule,"api.getDataAsCsv"))return this.csvCreator.getDataAsCsv(e)},e.prototype.exportDataAsCsv=function(e){d.s.assertRegistered(l.z.CsvExportModule,"api.exportDataAsCSv")&&this.csvCreator.exportDataAsCsv(e)},e.prototype.getExcelExportMode=function(e){var t=this.gridOptionsWrapper.getDefaultExportParams("excel");return Object.assign({exportMode:"xlsx"},t,e).exportMode},e.prototype.getDataAsExcel=function(e){if(d.s.assertRegistered(l.z.ExcelExportModule,"api.getDataAsExcel")){var t=this.getExcelExportMode(e);if(this.excelCreator.getFactoryMode(t)!==p.F.MULTI_SHEET)return this.excelCreator.getDataAsExcel(e);console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`")}},e.prototype.exportDataAsExcel=function(e){if(d.s.assertRegistered(l.z.ExcelExportModule,"api.exportDataAsExcel")){var t=this.getExcelExportMode(e);this.excelCreator.getFactoryMode(t)!==p.F.MULTI_SHEET?this.excelCreator.exportDataAsExcel(e):console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`")}},e.prototype.getSheetDataForExcel=function(e){if(d.s.assertRegistered(l.z.ExcelExportModule,"api.getSheetDataForExcel")){var t=this.getExcelExportMode(e);return this.excelCreator.setFactoryMode(p.F.MULTI_SHEET,t),this.excelCreator.getSheetDataForExcel(e)}},e.prototype.getMultipleSheetsAsExcel=function(e){if(d.s.assertRegistered(l.z.ExcelExportModule,"api.getMultipleSheetsAsExcel"))return this.excelCreator.getMultipleSheetsAsExcel(e)},e.prototype.exportMultipleSheetsAsExcel=function(e){if(d.s.assertRegistered(l.z.ExcelExportModule,"api.exportMultipleSheetsAsExcel"))return this.excelCreator.exportMultipleSheetsAsExcel(e)},e.prototype.setEnterpriseDatasource=function(e){console.warn("AG Grid: since version 18.x, api.setEnterpriseDatasource() should be replaced with api.setServerSideDatasource()"),this.setServerSideDatasource(e)},e.prototype.setGridAriaProperty=function(e,t){if(e){var o=this.ctrlsService.getGridBodyCtrl().getGui(),r="aria-"+e;null===t?o.removeAttribute(r):o.setAttribute(r,t)}},e.prototype.setServerSideDatasource=function(e){this.serverSideRowModel?this.serverSideRowModel.setDatasource(e):console.warn("AG Grid: you can only use an enterprise datasource when gridOptions.rowModelType is '"+r.Y.ROW_MODEL_TYPE_SERVER_SIDE+"'")},e.prototype.setDatasource=function(e){this.gridOptionsWrapper.isRowModelInfinite()?this.rowModel.setDatasource(e):console.warn("AG Grid: you can only use a datasource when gridOptions.rowModelType is '"+r.Y.ROW_MODEL_TYPE_INFINITE+"'")},e.prototype.setViewportDatasource=function(e){this.gridOptionsWrapper.isRowModelViewport()?this.rowModel.setViewportDatasource(e):console.warn("AG Grid: you can only use a viewport datasource when gridOptions.rowModelType is '"+r.Y.ROW_MODEL_TYPE_VIEWPORT+"'")},e.prototype.setRowData=function(e){null==this.immutableService?console.warn("AG Grid: you can only set rowData when using the Client Side Row Model"):this.immutableService.isActive()?this.immutableService.setRowData(e):(this.selectionService.reset(),this.clientSideRowModel.setRowData(e))},e.prototype.setFloatingTopRowData=function(e){console.warn("AG Grid: since v12, api.setFloatingTopRowData() is now api.setPinnedTopRowData()"),this.setPinnedTopRowData(e)},e.prototype.setFloatingBottomRowData=function(e){console.warn("AG Grid: since v12, api.setFloatingBottomRowData() is now api.setPinnedBottomRowData()"),this.setPinnedBottomRowData(e)},e.prototype.getFloatingTopRowCount=function(){return console.warn("AG Grid: since v12, api.getFloatingTopRowCount() is now api.getPinnedTopRowCount()"),this.getPinnedTopRowCount()},e.prototype.getFloatingBottomRowCount=function(){return console.warn("AG Grid: since v12, api.getFloatingBottomRowCount() is now api.getPinnedBottomRowCount()"),this.getPinnedBottomRowCount()},e.prototype.getFloatingTopRow=function(e){return console.warn("AG Grid: since v12, api.getFloatingTopRow() is now api.getPinnedTopRow()"),this.getPinnedTopRow(e)},e.prototype.getFloatingBottomRow=function(e){return console.warn("AG Grid: since v12, api.getFloatingBottomRow() is now api.getPinnedBottomRow()"),this.getPinnedBottomRow(e)},e.prototype.setPinnedTopRowData=function(e){this.pinnedRowModel.setPinnedTopRowData(e)},e.prototype.setPinnedBottomRowData=function(e){this.pinnedRowModel.setPinnedBottomRowData(e)},e.prototype.getPinnedTopRowCount=function(){return this.pinnedRowModel.getPinnedTopRowCount()},e.prototype.getPinnedBottomRowCount=function(){return this.pinnedRowModel.getPinnedBottomRowCount()},e.prototype.getPinnedTopRow=function(e){return this.pinnedRowModel.getPinnedTopRow(e)},e.prototype.getPinnedBottomRow=function(e){return this.pinnedRowModel.getPinnedBottomRow(e)},e.prototype.setColumnDefs=function(e,t){void 0===t&&(t="api"),this.columnModel.setColumnDefs(e,t)},e.prototype.setAutoGroupColumnDef=function(e,t){void 0===t&&(t="api"),this.gridOptionsWrapper.setProperty("autoGroupColumnDef",e,!0)},e.prototype.setDefaultColDef=function(e,t){void 0===t&&(t="api"),this.gridOptionsWrapper.setProperty("defaultColDef",e,!0)},e.prototype.expireValueCache=function(){this.valueCache.expire()},e.prototype.getVerticalPixelRange=function(){return this.gridBodyCtrl.getScrollFeature().getVScrollPosition()},e.prototype.getHorizontalPixelRange=function(){return this.gridBodyCtrl.getScrollFeature().getHScrollPosition()},e.prototype.setAlwaysShowHorizontalScroll=function(e){this.gridOptionsWrapper.setProperty("alwaysShowHorizontalScroll",e)},e.prototype.setAlwaysShowVerticalScroll=function(e){this.gridOptionsWrapper.setProperty("alwaysShowVerticalScroll",e)},e.prototype.refreshToolPanel=function(){this.sideBarComp&&this.sideBarComp.refresh()},e.prototype.refreshCells=function(e){void 0===e&&(e={}),Array.isArray(e)?console.warn("since AG Grid v11.1, refreshCells() now takes parameters, please see the documentation."):this.rowRenderer.refreshCells(e)},e.prototype.flashCells=function(e){void 0===e&&(e={}),this.rowRenderer.flashCells(e)},e.prototype.redrawRows=function(e){void 0===e&&(e={});var t=e?e.rowNodes:void 0;this.rowRenderer.redrawRows(t)},e.prototype.setFunctionsReadOnly=function(e){this.gridOptionsWrapper.setProperty("functionsReadOnly",e)},e.prototype.refreshHeader=function(){this.ctrlsService.getHeaderRowContainerCtrls().forEach((function(e){return e.refresh()}))},e.prototype.isAnyFilterPresent=function(){return this.filterManager.isAnyFilterPresent()},e.prototype.isColumnFilterPresent=function(){return this.filterManager.isColumnFilterPresent()||this.filterManager.isAggregateFilterPresent()},e.prototype.isQuickFilterPresent=function(){return this.filterManager.isQuickFilterPresent()},e.prototype.getModel=function(){return this.rowModel},e.prototype.setRowNodeExpanded=function(e,t){e&&e.setExpanded(t)},e.prototype.onGroupExpandedOrCollapsed=function(e){(0,u.missing)(this.clientSideRowModel)&&console.warn("AG Grid: cannot call onGroupExpandedOrCollapsed unless using normal row model"),(0,u.exists)(e)&&console.warn("AG Grid: api.onGroupExpandedOrCollapsed - refreshFromIndex parameter is no longer used, the grid will refresh all rows"),this.clientSideRowModel.refreshModel({step:a.z.MAP})},e.prototype.refreshInMemoryRowModel=function(e){console.warn("ag-grid: since version 18.x, api.refreshInMemoryRowModel() should be replaced with api.refreshClientSideRowModel()"),this.refreshClientSideRowModel(e)},e.prototype.refreshClientSideRowModel=function(e){(0,u.missing)(this.clientSideRowModel)&&console.warn("cannot call refreshClientSideRowModel unless using normal row model");var t=a.z.EVERYTHING,o={group:a.z.EVERYTHING,filter:a.z.FILTER,map:a.z.MAP,aggregate:a.z.AGGREGATE,sort:a.z.SORT,pivot:a.z.PIVOT};if((0,u.exists)(e)&&(t=o[e]),(0,u.missing)(t))console.error("AG Grid: invalid step "+e+", available steps are "+Object.keys(o).join(", "));else{var r={step:t,keepRenderedRows:!0,keepEditingRows:!0,animate:!this.gridOptionsWrapper.isSuppressAnimationFrame()};this.clientSideRowModel.refreshModel(r)}},e.prototype.isAnimationFrameQueueEmpty=function(){return this.animationFrameService.isQueueEmpty()},e.prototype.flushAllAnimationFrames=function(){this.animationFrameService.flushAllFrames()},e.prototype.getRowNode=function(e){return this.rowModel.getRowNode(e)},e.prototype.getSizesForCurrentTheme=function(){return{rowHeight:this.gridOptionsWrapper.getRowHeightAsNumber(),headerHeight:this.gridOptionsWrapper.getHeaderHeight()}},e.prototype.expandAll=function(){this.clientSideRowModel?this.clientSideRowModel.expandOrCollapseAll(!0):this.serverSideRowModel?this.serverSideRowModel.expandAll(!0):console.warn("AG Grid: expandAll only works with Client Side Row Model and Server Side Row Model")},e.prototype.collapseAll=function(){this.clientSideRowModel?this.clientSideRowModel.expandOrCollapseAll(!1):this.serverSideRowModel?this.serverSideRowModel.expandAll(!1):console.warn("AG Grid: collapseAll only works with Client Side Row Model and Server Side Row Model")},e.prototype.getToolPanelInstance=function(e){if(this.sideBarComp)return f(this.sideBarComp.getToolPanelInstance(e));console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise")},e.prototype.addVirtualRowListener=function(e,t,o){"string"!==typeof e&&console.warn("AG Grid: addVirtualRowListener is deprecated, please use addRenderedRowListener."),this.addRenderedRowListener(e,t,o)},e.prototype.addRenderedRowListener=function(e,t,o){"virtualRowSelected"===e&&console.warn("AG Grid: event virtualRowSelected is deprecated, to register for individual row\n                selection events, add a listener directly to the row node."),this.rowRenderer.addRenderedRowListener(e,t,o)},e.prototype.setQuickFilter=function(e){this.filterManager.setQuickFilter(e)},e.prototype.selectIndex=function(e,t,o){console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"),o&&console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"),this.selectionService.selectIndex(e,t)},e.prototype.deselectIndex=function(e,t){void 0===t&&(t=!1),console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"),t&&console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"),this.selectionService.deselectIndex(e)},e.prototype.selectNode=function(e,t,o){void 0===t&&(t=!1),void 0===o&&(o=!1),console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"),o&&console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"),e.setSelectedParams({newValue:!0,clearSelection:!t})},e.prototype.deselectNode=function(e,t){void 0===t&&(t=!1),console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"),t&&console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"),e.setSelectedParams({newValue:!1})},e.prototype.selectAll=function(){this.selectionService.selectAllRowNodes()},e.prototype.deselectAll=function(){this.selectionService.deselectAllRowNodes()},e.prototype.selectAllFiltered=function(){this.selectionService.selectAllRowNodes(!0)},e.prototype.deselectAllFiltered=function(){this.selectionService.deselectAllRowNodes(!0)},e.prototype.recomputeAggregates=function(){(0,u.missing)(this.clientSideRowModel)&&console.warn("cannot call recomputeAggregates unless using normal row model"),console.warn("recomputeAggregates is deprecated, please call api.refreshClientSideRowModel('aggregate') instead"),this.clientSideRowModel.refreshModel({step:a.z.AGGREGATE})},e.prototype.sizeColumnsToFit=function(){this.gridBodyCtrl.sizeColumnsToFit()},e.prototype.showLoadingOverlay=function(){this.overlayWrapperComp.showLoadingOverlay()},e.prototype.showNoRowsOverlay=function(){this.overlayWrapperComp.showNoRowsOverlay()},e.prototype.hideOverlay=function(){this.overlayWrapperComp.hideOverlay()},e.prototype.isNodeSelected=function(e){return console.warn("AG Grid: no need to call api.isNodeSelected(), just call node.isSelected() instead"),e.isSelected()},e.prototype.getSelectedNodesById=function(){return console.error("AG Grid: since version 3.4, getSelectedNodesById no longer exists, use getSelectedNodes() instead"),null},e.prototype.getSelectedNodes=function(){return this.selectionService.getSelectedNodes()},e.prototype.getSelectedRows=function(){return this.selectionService.getSelectedRows()},e.prototype.getBestCostNodeSelection=function(){return this.selectionService.getBestCostNodeSelection()},e.prototype.getRenderedNodes=function(){return this.rowRenderer.getRenderedNodes()},e.prototype.ensureColIndexVisible=function(e){console.warn("AG Grid: ensureColIndexVisible(index) no longer supported, use ensureColumnVisible(colKey) instead.")},e.prototype.ensureColumnVisible=function(e,t){void 0===t&&(t="auto"),this.gridBodyCtrl.getScrollFeature().ensureColumnVisible(e,t)},e.prototype.ensureIndexVisible=function(e,t){this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(e,t)},e.prototype.ensureNodeVisible=function(e,t){void 0===t&&(t=null),this.gridBodyCtrl.getScrollFeature().ensureNodeVisible(e,t)},e.prototype.forEachLeafNode=function(e){(0,u.missing)(this.clientSideRowModel)&&console.warn("cannot call forEachNode unless using normal row model"),this.clientSideRowModel.forEachLeafNode(e)},e.prototype.forEachNode=function(e){this.rowModel.forEachNode(e)},e.prototype.forEachNodeAfterFilter=function(e){(0,u.missing)(this.clientSideRowModel)&&console.warn("cannot call forEachNodeAfterFilter unless using normal row model"),this.clientSideRowModel.forEachNodeAfterFilter(e)},e.prototype.forEachNodeAfterFilterAndSort=function(e){(0,u.missing)(this.clientSideRowModel)&&console.warn("cannot call forEachNodeAfterFilterAndSort unless using normal row model"),this.clientSideRowModel.forEachNodeAfterFilterAndSort(e)},e.prototype.getFilterInstance=function(e,t){var o=this.getFilterInstanceImpl(e,(function(e){if(t){var o=f(e);t(o)}}));return f(o)},e.prototype.getFilterInstanceImpl=function(e,t){var o=this.columnModel.getPrimaryColumn(e);if(o){var r=this.filterManager.getFilterComponent(o,"NO_UI"),i=r&&r.resolveNow(null,(function(e){return e}));return i?setTimeout(t,0,i):r&&r.then((function(e){t(e)})),i}},e.prototype.destroyFilter=function(e){var t=this.columnModel.getPrimaryColumn(e);if(t)return this.filterManager.destroyFilter(t,"filterDestroyed")},e.prototype.getStatusPanel=function(e){if(this.statusBarService)return f(this.statusBarService.getStatusPanel(e))},e.prototype.getColumnDef=function(e){var t=this.columnModel.getPrimaryColumn(e);return t?t.getColDef():null},e.prototype.getColumnDefs=function(){return this.columnModel.getColumnDefs()},e.prototype.onFilterChanged=function(){this.filterManager.onFilterChanged()},e.prototype.onSortChanged=function(){this.sortController.onSortChanged("api")},e.prototype.setFilterModel=function(e){this.filterManager.setFilterModel(e)},e.prototype.getFilterModel=function(){return this.filterManager.getFilterModel()},e.prototype.getFocusedCell=function(){return this.focusService.getFocusedCell()},e.prototype.clearFocusedCell=function(){return this.focusService.clearFocusedCell()},e.prototype.setFocusedCell=function(e,t,o){this.focusService.setFocusedCell(e,t,o,!0)},e.prototype.setSuppressRowDrag=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_SUPPRESS_ROW_DRAG,e)},e.prototype.setSuppressMoveWhenRowDragging=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG,e)},e.prototype.setSuppressRowClickSelection=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_SUPPRESS_ROW_CLICK_SELECTION,e)},e.prototype.addRowDropZone=function(e){this.gridBodyCtrl.getRowDragFeature().addRowDropZone(e)},e.prototype.removeRowDropZone=function(e){var t=this.dragAndDropService.findExternalZone(e);t&&this.dragAndDropService.removeDropTarget(t)},e.prototype.getRowDropZoneParams=function(e){return this.gridBodyCtrl.getRowDragFeature().getRowDropZone(e)},e.prototype.setHeaderHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_HEADER_HEIGHT,e)},e.prototype.setDomLayout=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_DOM_LAYOUT,e)},e.prototype.setEnableCellTextSelection=function(e){this.gridBodyCtrl.setCellTextSelection(e)},e.prototype.setFillHandleDirection=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_FILL_HANDLE_DIRECTION,e)},e.prototype.setGroupHeaderHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GROUP_HEADER_HEIGHT,e)},e.prototype.setFloatingFiltersHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_FLOATING_FILTERS_HEIGHT,e)},e.prototype.setPivotHeaderHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PIVOT_HEADER_HEIGHT,e)},e.prototype.setPivotGroupHeaderHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PIVOT_GROUP_HEADER_HEIGHT,e)},e.prototype.setIsExternalFilterPresent=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_EXTERNAL_FILTER_PRESENT,e)},e.prototype.setDoesExternalFilterPass=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_DOES_EXTERNAL_FILTER_PASS,e)},e.prototype.setNavigateToNextCell=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_NAVIGATE_TO_NEXT_CELL,e)},e.prototype.setTabToNextCell=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_TAB_TO_NEXT_CELL,e)},e.prototype.setTabToNextHeader=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_TAB_TO_NEXT_HEADER,e)},e.prototype.setNavigateToNextHeader=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_NAVIGATE_TO_NEXT_HEADER,e)},e.prototype.setGroupRowAggNodes=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GROUP_ROW_AGG_NODES,e)},e.prototype.setGetGroupRowAgg=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_GROUP_ROW_AGG,e)},e.prototype.setGetBusinessKeyForNode=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_BUSINESS_KEY_FOR_NODE,e)},e.prototype.setGetChildCount=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_CHILD_COUNT,e)},e.prototype.setProcessRowPostCreate=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PROCESS_ROW_POST_CREATE,e)},e.prototype.setGetRowNodeId=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_ROW_NODE_ID,e)},e.prototype.setGetRowId=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_ROW_ID,e)},e.prototype.setGetRowClass=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_ROW_CLASS,e)},e.prototype.setIsFullWidthCell=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_FULL_WIDTH_CELL,e)},e.prototype.setIsFullWidthRow=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_FULL_WIDTH_ROW,e)},e.prototype.setIsRowSelectable=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_ROW_SELECTABLE,e)},e.prototype.setIsRowMaster=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_ROW_MASTER,e)},e.prototype.setPostSort=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_POST_SORT,e)},e.prototype.setPostSortRows=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_POST_SORT_ROWS,e)},e.prototype.setGetDocument=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_DOCUMENT,e)},e.prototype.setGetContextMenuItems=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_CONTEXT_MENU_ITEMS,e)},e.prototype.setGetMainMenuItems=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_MAIN_MENU_ITEMS,e)},e.prototype.setProcessCellForClipboard=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PROCESS_CELL_FOR_CLIPBOARD,e)},e.prototype.setSendToClipboard=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_SEND_TO_CLIPBOARD,e)},e.prototype.setProcessCellFromClipboard=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PROCESS_CELL_FROM_CLIPBOARD,e)},e.prototype.setProcessSecondaryColDef=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PROCESS_TO_SECONDARY_COLDEF,e)},e.prototype.setProcessSecondaryColGroupDef=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PROCESS_SECONDARY_COL_GROUP_DEF,e)},e.prototype.setPostProcessPopup=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_POST_PROCESS_POPUP,e)},e.prototype.setDefaultGroupOrderComparator=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_DEFAULT_GROUP_ORDER_COMPARATOR,e)},e.prototype.setInitialGroupOrderComparator=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_INITIAL_GROUP_ORDER_COMPARATOR,e)},e.prototype.setGetChartToolbarItems=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_CHART_TOOLBAR_ITEMS,e)},e.prototype.setPaginationNumberFormatter=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_PAGINATION_NUMBER_FORMATTER,e)},e.prototype.setGetServerSideStoreParams=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_SERVER_SIDE_STORE_PARAMS,e)},e.prototype.setIsServerSideGroupOpenByDefault=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_SERVER_SIDE_GROUPS_OPEN_BY_DEFAULT,e)},e.prototype.setIsApplyServerSideTransaction=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_APPLY_SERVER_SIDE_TRANSACTION,e)},e.prototype.setIsServerSideGroup=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_IS_SERVER_SIDE_GROUP,e)},e.prototype.setGetServerSideGroupKey=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_SERVER_SIDE_GROUP_KEY,e)},e.prototype.setGetRowStyle=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_ROW_STYLE,e)},e.prototype.setGetRowHeight=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GET_ROW_HEIGHT,e)},e.prototype.isSideBarVisible=function(){return!!this.sideBarComp&&this.sideBarComp.isDisplayed()},e.prototype.setSideBarVisible=function(e){this.sideBarComp?this.sideBarComp.setDisplayed(e):e&&console.warn("AG Grid: sideBar is not loaded")},e.prototype.setSideBarPosition=function(e){this.sideBarComp?this.sideBarComp.setSideBarPosition(e):console.warn("AG Grid: sideBar is not loaded")},e.prototype.openToolPanel=function(e){this.sideBarComp?this.sideBarComp.openToolPanel(e):console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise")},e.prototype.closeToolPanel=function(){this.sideBarComp?this.sideBarComp.close():console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise")},e.prototype.getOpenedToolPanel=function(){return this.sideBarComp?this.sideBarComp.openedItem():null},e.prototype.getSideBar=function(){return this.gridOptionsWrapper.getSideBar()},e.prototype.setSideBar=function(e){this.gridOptionsWrapper.setProperty("sideBar",n.l.parse(e))},e.prototype.setSuppressClipboardPaste=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_SUPPRESS_CLIPBOARD_PASTE,e)},e.prototype.isToolPanelShowing=function(){return this.sideBarComp.isToolPanelShowing()},e.prototype.doLayout=function(){(0,c.doOnce)((function(){return console.warn("AG Grid - since version 25.1, doLayout was taken out, as it's not needed. The grid responds to grid size changes automatically")}),"doLayoutDeprecated")},e.prototype.resetRowHeights=function(){if((0,u.exists)(this.clientSideRowModel)){if(this.columnModel.isAutoRowHeightActive())return void console.warn("AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.");this.clientSideRowModel.resetRowHeights()}},e.prototype.setGroupRemoveSingleChildren=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GROUP_REMOVE_SINGLE_CHILDREN,e)},e.prototype.setGroupRemoveLowestSingleChildren=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN,e)},e.prototype.onRowHeightChanged=function(){this.clientSideRowModel?this.clientSideRowModel.onRowHeightChanged():this.serverSideRowModel&&this.serverSideRowModel.onRowHeightChanged()},e.prototype.getValue=function(e,t){var o=this.columnModel.getPrimaryColumn(e);return(0,u.missing)(o)&&(o=this.columnModel.getGridColumn(e)),(0,u.missing)(o)?null:this.valueService.getValue(o,t)},e.prototype.addEventListener=function(e,t){var o=this.gridOptionsWrapper.useAsyncEvents();this.eventService.addEventListener(e,t,o)},e.prototype.addGlobalListener=function(e){var t=this.gridOptionsWrapper.useAsyncEvents();this.eventService.addGlobalListener(e,t)},e.prototype.removeEventListener=function(e,t){var o=this.gridOptionsWrapper.useAsyncEvents();this.eventService.removeEventListener(e,t,o)},e.prototype.removeGlobalListener=function(e){var t=this.gridOptionsWrapper.useAsyncEvents();this.eventService.removeGlobalListener(e,t)},e.prototype.dispatchEvent=function(e){this.eventService.dispatchEvent(e)},e.prototype.destroy=function(){if(!this.destroyCalled){this.destroyCalled=!0;var e=this.ctrlsService.getGridCtrl();e&&e.destroyGridUi(),this.context.destroy()}},e.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid=function(){setTimeout(h.removeAllReferences.bind(window,this,"Grid API"),100)},e.prototype.warnIfDestroyed=function(e){return this.destroyCalled&&console.warn("AG Grid: Grid API method "+e+" was called on a grid that was destroyed."),this.destroyCalled},e.prototype.resetQuickFilter=function(){this.warnIfDestroyed("resetQuickFilter")||this.rowModel.forEachNode((function(e){return e.quickFilterAggregateText=null}))},e.prototype.getRangeSelections=function(){return console.warn("AG Grid: in v20.1.x, api.getRangeSelections() is gone, please use getCellRanges() instead.\n        We had to change how cell selections works a small bit to allow charting to integrate. The return type of\n        getCellRanges() is a bit different, please check the AG Grid documentation."),null},e.prototype.getCellRanges=function(){return this.rangeService?this.rangeService.getCellRanges():(console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"),null)},e.prototype.camelCaseToHumanReadable=function(e){return(0,g.camelCaseToHumanText)(e)},e.prototype.addRangeSelection=function(e){console.warn("AG Grid: As of version 21.x, range selection changed slightly to allow charting integration. Please call api.addCellRange() instead of api.addRangeSelection()")},e.prototype.addCellRange=function(e){this.rangeService||console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"),this.rangeService.addCellRange(e)},e.prototype.clearRangeSelection=function(){this.rangeService||console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"),this.rangeService.removeAllCellRanges()},e.prototype.undoCellEditing=function(){this.undoRedoService.undo()},e.prototype.redoCellEditing=function(){this.undoRedoService.redo()},e.prototype.getCurrentUndoSize=function(){return this.undoRedoService.getCurrentUndoStackSize()},e.prototype.getCurrentRedoSize=function(){return this.undoRedoService.getCurrentRedoStackSize()},e.prototype.getChartModels=function(){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.getChartModels")&&d.s.assertRegistered(l.z.GridChartsModule,"api.getChartModels"))return this.chartService.getChartModels()},e.prototype.getChartRef=function(e){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.getChartRef")&&d.s.assertRegistered(l.z.GridChartsModule,"api.getChartRef"))return this.chartService.getChartRef(e)},e.prototype.getChartImageDataURL=function(e){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.getChartImageDataURL")&&d.s.assertRegistered(l.z.GridChartsModule,"api.getChartImageDataURL"))return this.chartService.getChartImageDataURL(e)},e.prototype.createRangeChart=function(e){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.createRangeChart")&&d.s.assertRegistered(l.z.GridChartsModule,"api.createRangeChart"))return this.chartService.createRangeChart(e)},e.prototype.createCrossFilterChart=function(e){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.createCrossFilterChart")&&d.s.assertRegistered(l.z.GridChartsModule,"api.createCrossFilterChart"))return this.chartService.createCrossFilterChart(e)},e.prototype.restoreChart=function(e,t){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.restoreChart")&&d.s.assertRegistered(l.z.GridChartsModule,"api.restoreChart"))return this.chartService.restoreChart(e,t)},e.prototype.createPivotChart=function(e){if(d.s.assertRegistered(l.z.RangeSelectionModule,"api.createPivotChart")&&d.s.assertRegistered(l.z.GridChartsModule,"api.createPivotChart"))return this.chartService.createPivotChart(e)},e.prototype.copySelectedRowsToClipboard=function(e){this.clipboardService||console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"),this.clipboardService.copySelectedRowsToClipboard(e)},e.prototype.copySelectedRangeToClipboard=function(e){this.clipboardService||console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"),this.clipboardService.copySelectedRangeToClipboard(e)},e.prototype.copySelectedRangeDown=function(){this.clipboardService||console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"),this.clipboardService.copyRangeDown()},e.prototype.showColumnMenuAfterButtonClick=function(e,t){var o=this.columnModel.getGridColumn(e);this.menuFactory.showMenuAfterButtonClick(o,t,"columnMenu")},e.prototype.showColumnMenuAfterMouseClick=function(e,t){var o=this.columnModel.getGridColumn(e);o||(o=this.columnModel.getPrimaryColumn(e)),o?this.menuFactory.showMenuAfterMouseEvent(o,t):console.error("AG Grid: column '"+e+"' not found")},e.prototype.hidePopupMenu=function(){this.contextMenuFactory&&this.contextMenuFactory.hideActiveMenu(),this.menuFactory.hideActiveMenu()},e.prototype.setPopupParent=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_POPUP_PARENT,e)},e.prototype.tabToNextCell=function(e){return this.navigationService.tabToNextCell(!1,e)},e.prototype.tabToPreviousCell=function(e){return this.navigationService.tabToNextCell(!0,e)},e.prototype.getCellRendererInstances=function(e){return void 0===e&&(e={}),this.rowRenderer.getCellRendererInstances(e).map(f)},e.prototype.getCellEditorInstances=function(e){return void 0===e&&(e={}),this.rowRenderer.getCellEditorInstances(e).map(f)},e.prototype.getEditingCells=function(){return this.rowRenderer.getEditingCells()},e.prototype.stopEditing=function(e){void 0===e&&(e=!1),this.rowRenderer.stopEditing(e)},e.prototype.startEditingCell=function(e){var t=this.columnModel.getGridColumn(e.colKey);if(t){var o={rowIndex:e.rowIndex,rowPinned:e.rowPinned||null,column:t};null==e.rowPinned&&this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(e.rowIndex);var r=this.navigationService.getCellByPosition(o);r&&r.startRowOrCellEdit(e.key,e.charPress)}else console.warn("AG Grid: no column found for "+e.colKey)},e.prototype.addAggFunc=function(e,t){this.aggFuncService&&this.aggFuncService.addAggFunc(e,t)},e.prototype.addAggFuncs=function(e){this.aggFuncService&&this.aggFuncService.addAggFuncs(e)},e.prototype.clearAggFuncs=function(){this.aggFuncService&&this.aggFuncService.clear()},e.prototype.applyServerSideTransaction=function(e){if(this.serverSideTransactionManager)return this.serverSideTransactionManager.applyTransaction(e);console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.")},e.prototype.applyServerSideTransactionAsync=function(e,t){if(this.serverSideTransactionManager)return this.serverSideTransactionManager.applyTransactionAsync(e,t);console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.")},e.prototype.retryServerSideLoads=function(){this.serverSideRowModel?this.serverSideRowModel.retryLoads():console.warn("AG Grid: API retryServerSideLoads() can only be used when using Server-Side Row Model.")},e.prototype.flushServerSideAsyncTransactions=function(){if(this.serverSideTransactionManager)return this.serverSideTransactionManager.flushAsyncTransactions();console.warn("AG Grid: Cannot flush Server Side Transaction if not using the Server Side Row Model.")},e.prototype.applyTransaction=function(e){if(this.clientSideRowModel){var t=this.clientSideRowModel.updateRowData(e);return this.rowRenderer.refreshFullWidthRows(t.update),this.gridOptionsWrapper.isSuppressChangeDetection()||this.rowRenderer.refreshCells(),t}console.error("AG Grid: updateRowData() only works with ClientSideRowModel. Working with InfiniteRowModel was deprecated in v23.1 and removed in v24.1")},e.prototype.setDeltaSort=function(e){this.gridOptionsWrapper.setProperty("deltaSort",e)},e.prototype.updateRowData=function(e){return(0,c.doOnce)((function(){return console.warn("AG Grid: as of v23.1, grid API updateRowData(transaction) is now called applyTransaction(transaction). updateRowData is deprecated and will be removed in a future major release.")}),"updateRowData deprecated"),this.applyTransaction(e)},e.prototype.applyTransactionAsync=function(e,t){this.clientSideRowModel?this.clientSideRowModel.batchUpdateRowData(e,t):console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.")},e.prototype.flushAsyncTransactions=function(){this.clientSideRowModel?this.clientSideRowModel.flushAsyncTransactions():console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.")},e.prototype.batchUpdateRowData=function(e,t){(0,c.doOnce)((function(){return console.warn("AG Grid: as of v23.1, grid API batchUpdateRowData(transaction, callback) is now called applyTransactionAsync(transaction, callback). batchUpdateRowData is deprecated and will be removed in a future major release.")}),"batchUpdateRowData deprecated"),this.applyTransactionAsync(e,t)},e.prototype.insertItemsAtIndex=function(e,t,o){void 0===o&&(o=!1),console.warn("AG Grid: insertItemsAtIndex() is deprecated, use updateRowData(transaction) instead."),this.updateRowData({add:t,addIndex:e,update:null,remove:null})},e.prototype.removeItems=function(e,t){void 0===t&&(t=!1),console.warn("AG Grid: removeItems() is deprecated, use updateRowData(transaction) instead.");var o=e.map((function(e){return e.data}));this.updateRowData({add:null,addIndex:null,update:null,remove:o})},e.prototype.addItems=function(e,t){void 0===t&&(t=!1),console.warn("AG Grid: addItems() is deprecated, use updateRowData(transaction) instead."),this.updateRowData({add:e,addIndex:null,update:null,remove:null})},e.prototype.refreshVirtualPageCache=function(){console.warn("AG Grid: refreshVirtualPageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"),this.refreshInfiniteCache()},e.prototype.refreshInfinitePageCache=function(){console.warn("AG Grid: refreshInfinitePageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"),this.refreshInfiniteCache()},e.prototype.refreshInfiniteCache=function(){this.infiniteRowModel?this.infiniteRowModel.refreshCache():console.warn("AG Grid: api.refreshInfiniteCache is only available when rowModelType='infinite'.")},e.prototype.purgeVirtualPageCache=function(){console.warn("AG Grid: purgeVirtualPageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"),this.purgeInfinitePageCache()},e.prototype.purgeInfinitePageCache=function(){console.warn("AG Grid: purgeInfinitePageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"),this.purgeInfiniteCache()},e.prototype.purgeInfiniteCache=function(){this.infiniteRowModel?this.infiniteRowModel.purgeCache():console.warn("AG Grid: api.purgeInfiniteCache is only available when rowModelType='infinite'.")},e.prototype.purgeEnterpriseCache=function(e){console.warn("ag-grid: since version 18.x, api.purgeEnterpriseCache() should be replaced with api.purgeServerSideCache()"),this.purgeServerSideCache(e)},e.prototype.purgeServerSideCache=function(e){void 0===e&&(e=[]),this.serverSideRowModel?(console.warn("AG Grid: since v25.0, api.purgeServerSideCache is deprecated. Please use api.refreshServerSideStore({purge: true}) instead."),this.refreshServerSideStore({route:e,purge:!0})):console.warn("AG Grid: api.purgeServerSideCache is only available when rowModelType='serverSide'.")},e.prototype.refreshServerSideStore=function(e){this.serverSideRowModel?this.serverSideRowModel.refreshStore(e):console.warn("AG Grid: api.refreshServerSideStore is only available when rowModelType='serverSide'.")},e.prototype.getServerSideStoreState=function(){return this.serverSideRowModel?this.serverSideRowModel.getStoreState():(console.warn("AG Grid: api.getServerSideStoreState is only available when rowModelType='serverSide'."),[])},e.prototype.getVirtualRowCount=function(){return console.warn("AG Grid: getVirtualRowCount() is now called getInfiniteRowCount(), please call getInfiniteRowCount() instead"),this.getInfiniteRowCount()},e.prototype.getInfiniteRowCount=function(){if(this.infiniteRowModel)return this.infiniteRowModel.getRowCount();console.warn("AG Grid: api.getVirtualRowCount is only available when rowModelType='virtual'.")},e.prototype.isMaxRowFound=function(){return console.warn("AG Grid: api.isLastRowIndexKnown is deprecated, please use api.isLastRowIndexKnown()"),this.isLastRowIndexKnown()},e.prototype.isLastRowIndexKnown=function(){if(this.infiniteRowModel)return this.infiniteRowModel.isLastRowIndexKnown();console.warn("AG Grid: api.isMaxRowFound is only available when rowModelType='virtual'.")},e.prototype.setVirtualRowCount=function(e,t){console.warn("AG Grid: setVirtualRowCount() is now called setInfiniteRowCount(), please call setInfiniteRowCount() instead"),this.setRowCount(e,t)},e.prototype.setInfiniteRowCount=function(e,t){console.warn("AG Grid: setInfiniteRowCount() is now called setRowCount(), please call setRowCount() instead"),this.setRowCount(e,t)},e.prototype.setRowCount=function(e,t){this.infiniteRowModel?this.infiniteRowModel.setRowCount(e,t):console.warn("AG Grid: api.setRowCount is only available for Infinite Row Model.")},e.prototype.getVirtualPageState=function(){return console.warn("AG Grid: getVirtualPageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"),this.getCacheBlockState()},e.prototype.getInfinitePageState=function(){return console.warn("AG Grid: getInfinitePageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"),this.getCacheBlockState()},e.prototype.getCacheBlockState=function(){return this.rowNodeBlockLoader.getBlockState()},e.prototype.checkGridSize=function(){console.warn("in AG Grid v25.2.0, checkGridSize() was removed, as it was legacy and didn't do anything uesful.")},e.prototype.getFirstRenderedRow=function(){return console.warn("in AG Grid v12, getFirstRenderedRow() was renamed to getFirstDisplayedRow()"),this.getFirstDisplayedRow()},e.prototype.getFirstDisplayedRow=function(){return this.rowRenderer.getFirstVirtualRenderedRow()},e.prototype.getLastRenderedRow=function(){return console.warn("in AG Grid v12, getLastRenderedRow() was renamed to getLastDisplayedRow()"),this.getLastDisplayedRow()},e.prototype.getLastDisplayedRow=function(){return this.rowRenderer.getLastVirtualRenderedRow()},e.prototype.getDisplayedRowAtIndex=function(e){return this.rowModel.getRow(e)},e.prototype.getDisplayedRowCount=function(){return this.rowModel.getRowCount()},e.prototype.paginationIsLastPageFound=function(){return this.paginationProxy.isLastPageFound()},e.prototype.paginationGetPageSize=function(){return this.paginationProxy.getPageSize()},e.prototype.paginationSetPageSize=function(e){this.gridOptionsWrapper.setProperty("paginationPageSize",e)},e.prototype.paginationGetCurrentPage=function(){return this.paginationProxy.getCurrentPage()},e.prototype.paginationGetTotalPages=function(){return this.paginationProxy.getTotalPages()},e.prototype.paginationGetRowCount=function(){return this.paginationProxy.getMasterRowCount()},e.prototype.paginationGoToNextPage=function(){this.paginationProxy.goToNextPage()},e.prototype.paginationGoToPreviousPage=function(){this.paginationProxy.goToPreviousPage()},e.prototype.paginationGoToFirstPage=function(){this.paginationProxy.goToFirstPage()},e.prototype.paginationGoToLastPage=function(){this.paginationProxy.goToLastPage()},e.prototype.paginationGoToPage=function(e){this.paginationProxy.goToPage(e)},e.prototype.setRowClass=function(e){this.gridOptionsWrapper.setProperty(s.a.PROP_ROW_CLASS,e)},y([(0,i.Xx)("immutableService")],e.prototype,"immutableService",void 0),y([(0,i.Xx)("csvCreator")],e.prototype,"csvCreator",void 0),y([(0,i.Xx)("excelCreator")],e.prototype,"excelCreator",void 0),y([(0,i.ds)("rowRenderer")],e.prototype,"rowRenderer",void 0),y([(0,i.ds)("navigationService")],e.prototype,"navigationService",void 0),y([(0,i.ds)("filterManager")],e.prototype,"filterManager",void 0),y([(0,i.ds)("columnModel")],e.prototype,"columnModel",void 0),y([(0,i.ds)("selectionService")],e.prototype,"selectionService",void 0),y([(0,i.ds)("gridOptionsWrapper")],e.prototype,"gridOptionsWrapper",void 0),y([(0,i.ds)("valueService")],e.prototype,"valueService",void 0),y([(0,i.ds)("alignedGridsService")],e.prototype,"alignedGridsService",void 0),y([(0,i.ds)("eventService")],e.prototype,"eventService",void 0),y([(0,i.ds)("pinnedRowModel")],e.prototype,"pinnedRowModel",void 0),y([(0,i.ds)("context")],e.prototype,"context",void 0),y([(0,i.ds)("rowModel")],e.prototype,"rowModel",void 0),y([(0,i.ds)("sortController")],e.prototype,"sortController",void 0),y([(0,i.ds)("paginationProxy")],e.prototype,"paginationProxy",void 0),y([(0,i.ds)("focusService")],e.prototype,"focusService",void 0),y([(0,i.ds)("dragAndDropService")],e.prototype,"dragAndDropService",void 0),y([(0,i.Xx)("rangeService")],e.prototype,"rangeService",void 0),y([(0,i.Xx)("clipboardService")],e.prototype,"clipboardService",void 0),y([(0,i.Xx)("aggFuncService")],e.prototype,"aggFuncService",void 0),y([(0,i.ds)("menuFactory")],e.prototype,"menuFactory",void 0),y([(0,i.Xx)("contextMenuFactory")],e.prototype,"contextMenuFactory",void 0),y([(0,i.ds)("valueCache")],e.prototype,"valueCache",void 0),y([(0,i.ds)("animationFrameService")],e.prototype,"animationFrameService",void 0),y([(0,i.Xx)("statusBarService")],e.prototype,"statusBarService",void 0),y([(0,i.Xx)("chartService")],e.prototype,"chartService",void 0),y([(0,i.Xx)("undoRedoService")],e.prototype,"undoRedoService",void 0),y([(0,i.Xx)("rowNodeBlockLoader")],e.prototype,"rowNodeBlockLoader",void 0),y([(0,i.Xx)("ssrmTransactionManager")],e.prototype,"serverSideTransactionManager",void 0),y([(0,i.ds)("ctrlsService")],e.prototype,"ctrlsService",void 0),y([(0,i.Xx)("frameworkComponentWrapper")],e.prototype,"frameworkComponentWrapper",void 0),y([i.o7],e.prototype,"init",null),y([i.y],e.prototype,"cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid",null),e=y([(0,i.dR)("gridApi")],e)}()}}]);
name: Integration Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
      - 'pyproject.toml'
  workflow_dispatch:
    inputs:
      filter:
        description: the arg you want to pass to pytest filter (-k)
        type: string

jobs:
  run-integration-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          activate-environment: true

      - name: Install dependencies
        run: |
          uv sync --group tests --extra all

      - env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python scripts/wake_up_hf_endpoint.py --retry=5

      - name: Run Integration tests (parallel with xdist)
        env:
          # When you add a new key, also add the provider name to the EXPECTED_PROVIDERS environment variable
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          AWS_BEARER_TOKEN_BEDROCK: ${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}
          FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          LLAMA_API_KEY: ${{ secrets.LLAMA_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          NEBIUS_API_KEY: ${{ secrets.NEBIUS_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
          WATSONX_API_KEY: ${{ secrets.WATSONX_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          CEREBRAS_API_KEY: ${{ secrets.CEREBRAS_API_KEY }}
          EXPECTED_PROVIDERS: "anthropic,bedrock,fireworks,gemini,huggingface,llama,mistral,nebius,openai,voyage,watsonx,xai,openrouter,cerebras"
          INCLUDE_LOCAL_PROVIDERS: "false"
        run: |
          if [ -n "${{ inputs.filter }}" ]; then
            pytest tests/integration -v -n auto --cov --cov-report=xml -k "${{ inputs.filter }}"
          else
            pytest tests/integration -v -n auto --cov --cov-report=xml
          fi

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

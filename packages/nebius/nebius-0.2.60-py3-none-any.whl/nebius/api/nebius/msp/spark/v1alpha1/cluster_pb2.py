# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nebius/msp/spark/v1alpha1/cluster.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from nebius.api.buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from nebius.api.nebius.common.v1 import metadata_pb2 as nebius_dot_common_dot_v1_dot_metadata__pb2
from nebius.api.nebius import annotations_pb2 as nebius_dot_annotations__pb2
from nebius.api.nebius.msp.v1alpha1 import cluster_pb2 as nebius_dot_msp_dot_v1alpha1_dot_cluster__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'nebius/msp/spark/v1alpha1/cluster.proto\x12\x19nebius.msp.spark.v1alpha1\x1a\x1b\x62uf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\x1a!nebius/msp/v1alpha1/cluster.proto\"\xdd\x01\n\x07\x43luster\x12\x46\n\x08metadata\x18\x01 \x01(\x0b\x32\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\x08metadata\x12\x42\n\x04spec\x18\x02 \x01(\x0b\x32&.nebius.msp.spark.v1alpha1.ClusterSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12\x46\n\x06status\x18\x03 \x01(\x0b\x32(.nebius.msp.spark.v1alpha1.ClusterStatusB\x04\xbaJ\x01\x05R\x06status\"\xc3\x02\n\x0b\x43lusterSpec\x12%\n\x0b\x64\x65scription\x18\x01 \x01(\tH\x00R\x0b\x64\x65scription\x88\x01\x01\x12\x41\n\x06limits\x18\x03 \x01(\x0b\x32!.nebius.msp.spark.v1alpha1.LimitsB\x06\xbaH\x03\xc8\x01\x01R\x06limits\x12O\n\rauthorization\x18\x04 \x01(\x0b\x32#.nebius.msp.spark.v1alpha1.PasswordB\x04\xbaJ\x01\x04R\rauthorization\x12\x38\n\x12service_account_id\x18\x05 \x01(\tB\n\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x10serviceAccountId\x12)\n\nnetwork_id\x18\x06 \x01(\tB\n\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\tnetworkIdB\x0e\n\x0c_descriptionJ\x04\x08\x02\x10\x03\"\xe8\x01\n\rClusterStatus\x12>\n\x05phase\x18\x01 \x01(\x0e\x32(.nebius.msp.v1alpha1.ClusterStatus.PhaseR\x05phase\x12>\n\x05state\x18\x02 \x01(\x0e\x32(.nebius.msp.v1alpha1.ClusterStatus.StateR\x05state\x12;\n\x17history_server_endpoint\x18\x03 \x01(\tH\x00R\x15historyServerEndpoint\x88\x01\x01\x42\x1a\n\x18_history_server_endpoint\"c\n\x06Limits\x12\x1f\n\x03\x63pu\x18\x01 \x01(\x03\x42\r\xbaH\n\xc8\x01\x01\"\x05\x18\x80\n \x00R\x03\x63pu\x12\x38\n\x10memory_gibibytes\x18\x02 \x01(\x03\x42\r\xbaH\n\xc8\x01\x01\"\x05\x18\x80P \x00R\x0fmemoryGibibytes\"\xaa\x06\n\x08Password\x12\x9d\x06\n\x08password\x18\x01 \x01(\tB\x80\x06\xbaH\xf9\x05\xba\x01X\n\x13password.min_length\x12\x30The password must be at least 8 characters long.\x1a\x0fsize(this) >= 8\xba\x01T\n\x13password.max_length\x12+The password must not exceed 64 characters.\x1a\x10size(this) <= 64\xba\x01j\n\x13password.ascii_only\x12\x38The password must contain only visible ASCII characters.\x1a\x19matches(this, \'^[!-~]+$\')\xba\x01j\n\x17password.min_lower_case\x12\x38The password must include at least one lowercase letter.\x1a\x15this.matches(\'[a-z]\')\xba\x01j\n\x17password.min_upper_case\x12\x38The password must include at least one uppercase letter.\x1a\x15this.matches(\'[A-Z]\')\xba\x01[\n\x13password.min_digits\x12-The password must include at least one digit.\x1a\x15this.matches(\'[0-9]\')\xba\x01\x9b\x01\n\x14password.min_special\x12ZThe password must include at least one special character: !@#$%^&*()_+-=[]{}<>;:\'\"\\|,./?`~\x1a\'this.matches(\'[!-/]|[:-@]|[[-`]|[{-~]\')\xc8\x01\x01\xc0J\x01R\x08passwordBk\n ai.nebius.pub.msp.spark.v1alpha1B\x0c\x43lusterProtoP\x01Z7github.com/nebius/gosdk/proto/nebius/msp/spark/v1alpha1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nebius.msp.spark.v1alpha1.cluster_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n ai.nebius.pub.msp.spark.v1alpha1B\014ClusterProtoP\001Z7github.com/nebius/gosdk/proto/nebius/msp/spark/v1alpha1'
  _CLUSTER.fields_by_name['metadata']._options = None
  _CLUSTER.fields_by_name['metadata']._serialized_options = b'\272H\003\310\001\001'
  _CLUSTER.fields_by_name['spec']._options = None
  _CLUSTER.fields_by_name['spec']._serialized_options = b'\272H\003\310\001\001'
  _CLUSTER.fields_by_name['status']._options = None
  _CLUSTER.fields_by_name['status']._serialized_options = b'\272J\001\005'
  _CLUSTERSPEC.fields_by_name['limits']._options = None
  _CLUSTERSPEC.fields_by_name['limits']._serialized_options = b'\272H\003\310\001\001'
  _CLUSTERSPEC.fields_by_name['authorization']._options = None
  _CLUSTERSPEC.fields_by_name['authorization']._serialized_options = b'\272J\001\004'
  _CLUSTERSPEC.fields_by_name['service_account_id']._options = None
  _CLUSTERSPEC.fields_by_name['service_account_id']._serialized_options = b'\272H\003\310\001\001\272J\001\002'
  _CLUSTERSPEC.fields_by_name['network_id']._options = None
  _CLUSTERSPEC.fields_by_name['network_id']._serialized_options = b'\272H\003\310\001\001\272J\001\002'
  _LIMITS.fields_by_name['cpu']._options = None
  _LIMITS.fields_by_name['cpu']._serialized_options = b'\272H\n\310\001\001\"\005\030\200\n \000'
  _LIMITS.fields_by_name['memory_gibibytes']._options = None
  _LIMITS.fields_by_name['memory_gibibytes']._serialized_options = b'\272H\n\310\001\001\"\005\030\200P \000'
  _PASSWORD.fields_by_name['password']._options = None
  _PASSWORD.fields_by_name['password']._serialized_options = b'\272H\371\005\272\001X\n\023password.min_length\0220The password must be at least 8 characters long.\032\017size(this) >= 8\272\001T\n\023password.max_length\022+The password must not exceed 64 characters.\032\020size(this) <= 64\272\001j\n\023password.ascii_only\0228The password must contain only visible ASCII characters.\032\031matches(this, \'^[!-~]+$\')\272\001j\n\027password.min_lower_case\0228The password must include at least one lowercase letter.\032\025this.matches(\'[a-z]\')\272\001j\n\027password.min_upper_case\0228The password must include at least one uppercase letter.\032\025this.matches(\'[A-Z]\')\272\001[\n\023password.min_digits\022-The password must include at least one digit.\032\025this.matches(\'[0-9]\')\272\001\233\001\n\024password.min_special\022ZThe password must include at least one special character: !@#$%^&*()_+-=[]{}<>;:\'\"\\|,./?`~\032\'this.matches(\'[!-/]|[:-@]|[[-`]|[{-~]\')\310\001\001\300J\001'
  _globals['_CLUSTER']._serialized_start=194
  _globals['_CLUSTER']._serialized_end=415
  _globals['_CLUSTERSPEC']._serialized_start=418
  _globals['_CLUSTERSPEC']._serialized_end=741
  _globals['_CLUSTERSTATUS']._serialized_start=744
  _globals['_CLUSTERSTATUS']._serialized_end=976
  _globals['_LIMITS']._serialized_start=978
  _globals['_LIMITS']._serialized_end=1077
  _globals['_PASSWORD']._serialized_start=1080
  _globals['_PASSWORD']._serialized_end=1890
# @@protoc_insertion_point(module_scope)

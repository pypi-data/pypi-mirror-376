Metadata-Version: 2.4
Name: cyclic_crop_rotation
Version: 2025.0.1
Summary: Cyclic crop rotations labeling for crop sequences
Project-URL: Homepage, https://github.com/hsizek/cyclic-crop-rotation
Project-URL: Issues, https://github.com/hsizek/cyclic-crop-rotation/issues
Author-email: Herbert Sizek <sizek.herbert@gmail.com>
Maintainer-email: Herbert Sizek <sizek.herbert@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: crop rotation,crop sequence,crop transition,cyclic rotation
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown

Cyclic Crop Rotation
====================
Description
-----------
This package implements a method to calculate crop rotation labels from any given sequence.

Installation
------------
```pip install cyclic-crop-rotation```

Simple usage
------------
See example folder for more complex use cases.  

```python
from cyclic_crop_rotation import *

# Crop Sequence
seq = (1,  5,  1,  5,  5,  1,  5,  1)

# Valid blocks
blocks = get_valid_blocks(seq,repeat=False,max_rot_size=3)

# Select out of the valid blocks the ones to use
gr = post_selection(greedy_set_cover(blocks)) 
fo = post_selection(first_observed_cover(blocks)) 
lr = post_selection(longest_repetition_cover(blocks)) 

# Get rotation tokens
gr_tok = block2token(seq,gr)
fo_tok = block2token(seq,fo)
lr_tok = block2token(seq,lr)

print(seq)
# Print reordered tokens
print(f'Greedy:{[token2standardtoken(i) for i in gr_tok]}')
print(f'1st Obs:{[token2standardtoken(i) for i in fo_tok]}')
print(f'Long Rep:{[token2standardtoken(i) for i in lr_tok]}')
```

# coding: utf-8

# flake8: noqa

"""
    VRt.Packer [PC]

    Veeroute Packer API.  # Description  The service is designed to calculate the placement of goods inside given packages.  ## Types of packages  ### Pallet  ![pallet](../images/packer_pallet.svg)  *Mono-pallet*  If the pallet is fully equipped with the same product, then such a pallet is called **mono-pallet**, such a pallet has the following loading rules:  1. The maximum allowable height of the pallet with the goods laid on it is taken into account. 1. The maximum allowable weight of the loaded pallet is taken into account. 1. Goods packages can only be stacked parallel to the walls of the pallet. 1. It is allowed to rotate packages around the vertical Z-axis and only at a right angle. 1. In order to equalize the height between the positions (to place another pallet on top), empty spaces can be added to the stacking by layers.  *Zone tray*  After the formation of mono-pallets, the remaining part of the goods of the same article is placed on the next pallet, which is divided into zones by means of a cardboard partition in such a way that only one item of goods is placed in each zone, while the zones have the following restrictions:  1. The zones are rectangular. 1. The ratio between the sides of the zones can be any. 1. One of the sides of any zone is always in contact with the edge of the pallet. 1. Permissible number of zones on a pallet: from 2 to 6. 1. Each zone is filled according to the rules for filling a mono-pallet. 1. The stacking height of all goods does not exceed 50 mm, so that another pallet can be placed on top of such a pallet. 1. It is allowed to form pallets with different stacking heights for different positions (height difference is more than 50 mm), if these are the top pallets in the stack.  ### Mixbox  ![mixbox](../images/packer_mixbox.svg)  If the above steps fail to place the item in this way, so that the pallet is of the required height or weight, mixboxes are used:  1. Mixbox can only be placed in one layer. 1. Different goods can be placed in one mixbox, in this case it is divided by partitions similarly to a pallet (the only difference is that the height of the packed goods is not aligned). 1. Mixboxes can be mixed with items on the same pallet. 1. One product can be packed in different mixboxes.  ### Slot  ![slot](../images/packer_slot.svg)  The loaded pallets are stacked on top of each other, the slot is where the stack of pallets is placed. The slot has no physical body - so the dimensions of the `body` of the slot are zero.  ## Coordinate system  ![coordinates](../images/packer_coordinates.svg)  To indicate the location of packages and goods, a local coordinate system is used, in which the coordinates of a particular object are indicated relative to the near left lower corner of the parent object, while:  * Horizontal plane - axes **X**, **Y** * Vertical - **Z** axis  The ratio of the axes of goods and packages:  * Width - **X** * Length - **Y** * Height - **Z**  ## Entity diagram  ![erd](../uml/packer.svg)

    The version of the OpenAPI document: 7.23.2926
    Contact: servicedesk@veeroute.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "7.23.2926"

# Define package exports
__all__ = [
    "PackApi",
    "SystemApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "Attribute",
    "CalculationAsyncResult",
    "CalculationInfo",
    "CalculationSettings",
    "CalculationState",
    "CalculationStatus",
    "CheckResult",
    "Coordinates",
    "Custom400WithErrorsAndWarnings",
    "Dimensions",
    "EntityError",
    "EntityErrorType",
    "EntityPath",
    "EntityType",
    "EntityWarning",
    "EntityWarningType",
    "General402",
    "General404",
    "General404Detail",
    "General429",
    "General500",
    "PackResult",
    "PackSettings",
    "PackStatistics",
    "PackTask",
    "Package",
    "PackageLayout",
    "PackageStatistics",
    "PackageType",
    "Product",
    "ProductGroupLayout",
    "ProductLayout",
    "SchemaError",
    "Service",
    "Tracedata",
    "UnpackedItems",
    "ValidateResult",
    "VersionResult",
]

if __import__("typing").TYPE_CHECKING:
    # import apis into sdk package
    from vrt_lss_packer.api.pack_api import PackApi as PackApi
    from vrt_lss_packer.api.system_api import SystemApi as SystemApi
    
    # import ApiClient
    from vrt_lss_packer.api_response import ApiResponse as ApiResponse
    from vrt_lss_packer.api_client import ApiClient as ApiClient
    from vrt_lss_packer.configuration import Configuration as Configuration
    from vrt_lss_packer.exceptions import OpenApiException as OpenApiException
    from vrt_lss_packer.exceptions import ApiTypeError as ApiTypeError
    from vrt_lss_packer.exceptions import ApiValueError as ApiValueError
    from vrt_lss_packer.exceptions import ApiKeyError as ApiKeyError
    from vrt_lss_packer.exceptions import ApiAttributeError as ApiAttributeError
    from vrt_lss_packer.exceptions import ApiException as ApiException
    
    # import models into sdk package
    from vrt_lss_packer.models.attribute import Attribute as Attribute
    from vrt_lss_packer.models.calculation_async_result import CalculationAsyncResult as CalculationAsyncResult
    from vrt_lss_packer.models.calculation_info import CalculationInfo as CalculationInfo
    from vrt_lss_packer.models.calculation_settings import CalculationSettings as CalculationSettings
    from vrt_lss_packer.models.calculation_state import CalculationState as CalculationState
    from vrt_lss_packer.models.calculation_status import CalculationStatus as CalculationStatus
    from vrt_lss_packer.models.check_result import CheckResult as CheckResult
    from vrt_lss_packer.models.coordinates import Coordinates as Coordinates
    from vrt_lss_packer.models.custom400_with_errors_and_warnings import Custom400WithErrorsAndWarnings as Custom400WithErrorsAndWarnings
    from vrt_lss_packer.models.dimensions import Dimensions as Dimensions
    from vrt_lss_packer.models.entity_error import EntityError as EntityError
    from vrt_lss_packer.models.entity_error_type import EntityErrorType as EntityErrorType
    from vrt_lss_packer.models.entity_path import EntityPath as EntityPath
    from vrt_lss_packer.models.entity_type import EntityType as EntityType
    from vrt_lss_packer.models.entity_warning import EntityWarning as EntityWarning
    from vrt_lss_packer.models.entity_warning_type import EntityWarningType as EntityWarningType
    from vrt_lss_packer.models.general402 import General402 as General402
    from vrt_lss_packer.models.general404 import General404 as General404
    from vrt_lss_packer.models.general404_detail import General404Detail as General404Detail
    from vrt_lss_packer.models.general429 import General429 as General429
    from vrt_lss_packer.models.general500 import General500 as General500
    from vrt_lss_packer.models.pack_result import PackResult as PackResult
    from vrt_lss_packer.models.pack_settings import PackSettings as PackSettings
    from vrt_lss_packer.models.pack_statistics import PackStatistics as PackStatistics
    from vrt_lss_packer.models.pack_task import PackTask as PackTask
    from vrt_lss_packer.models.package import Package as Package
    from vrt_lss_packer.models.package_layout import PackageLayout as PackageLayout
    from vrt_lss_packer.models.package_statistics import PackageStatistics as PackageStatistics
    from vrt_lss_packer.models.package_type import PackageType as PackageType
    from vrt_lss_packer.models.product import Product as Product
    from vrt_lss_packer.models.product_group_layout import ProductGroupLayout as ProductGroupLayout
    from vrt_lss_packer.models.product_layout import ProductLayout as ProductLayout
    from vrt_lss_packer.models.schema_error import SchemaError as SchemaError
    from vrt_lss_packer.models.service import Service as Service
    from vrt_lss_packer.models.tracedata import Tracedata as Tracedata
    from vrt_lss_packer.models.unpacked_items import UnpackedItems as UnpackedItems
    from vrt_lss_packer.models.validate_result import ValidateResult as ValidateResult
    from vrt_lss_packer.models.version_result import VersionResult as VersionResult
    
else:
    from lazy_imports import LazyModule, as_package, load

    load(
        LazyModule(
            *as_package(__file__),
            ("__version__", __version__),
            ("__all__", __all__),
            """# import apis into sdk package
from vrt_lss_packer.api.pack_api import PackApi as PackApi
from vrt_lss_packer.api.system_api import SystemApi as SystemApi

# import ApiClient
from vrt_lss_packer.api_response import ApiResponse as ApiResponse
from vrt_lss_packer.api_client import ApiClient as ApiClient
from vrt_lss_packer.configuration import Configuration as Configuration
from vrt_lss_packer.exceptions import OpenApiException as OpenApiException
from vrt_lss_packer.exceptions import ApiTypeError as ApiTypeError
from vrt_lss_packer.exceptions import ApiValueError as ApiValueError
from vrt_lss_packer.exceptions import ApiKeyError as ApiKeyError
from vrt_lss_packer.exceptions import ApiAttributeError as ApiAttributeError
from vrt_lss_packer.exceptions import ApiException as ApiException

# import models into sdk package
from vrt_lss_packer.models.attribute import Attribute as Attribute
from vrt_lss_packer.models.calculation_async_result import CalculationAsyncResult as CalculationAsyncResult
from vrt_lss_packer.models.calculation_info import CalculationInfo as CalculationInfo
from vrt_lss_packer.models.calculation_settings import CalculationSettings as CalculationSettings
from vrt_lss_packer.models.calculation_state import CalculationState as CalculationState
from vrt_lss_packer.models.calculation_status import CalculationStatus as CalculationStatus
from vrt_lss_packer.models.check_result import CheckResult as CheckResult
from vrt_lss_packer.models.coordinates import Coordinates as Coordinates
from vrt_lss_packer.models.custom400_with_errors_and_warnings import Custom400WithErrorsAndWarnings as Custom400WithErrorsAndWarnings
from vrt_lss_packer.models.dimensions import Dimensions as Dimensions
from vrt_lss_packer.models.entity_error import EntityError as EntityError
from vrt_lss_packer.models.entity_error_type import EntityErrorType as EntityErrorType
from vrt_lss_packer.models.entity_path import EntityPath as EntityPath
from vrt_lss_packer.models.entity_type import EntityType as EntityType
from vrt_lss_packer.models.entity_warning import EntityWarning as EntityWarning
from vrt_lss_packer.models.entity_warning_type import EntityWarningType as EntityWarningType
from vrt_lss_packer.models.general402 import General402 as General402
from vrt_lss_packer.models.general404 import General404 as General404
from vrt_lss_packer.models.general404_detail import General404Detail as General404Detail
from vrt_lss_packer.models.general429 import General429 as General429
from vrt_lss_packer.models.general500 import General500 as General500
from vrt_lss_packer.models.pack_result import PackResult as PackResult
from vrt_lss_packer.models.pack_settings import PackSettings as PackSettings
from vrt_lss_packer.models.pack_statistics import PackStatistics as PackStatistics
from vrt_lss_packer.models.pack_task import PackTask as PackTask
from vrt_lss_packer.models.package import Package as Package
from vrt_lss_packer.models.package_layout import PackageLayout as PackageLayout
from vrt_lss_packer.models.package_statistics import PackageStatistics as PackageStatistics
from vrt_lss_packer.models.package_type import PackageType as PackageType
from vrt_lss_packer.models.product import Product as Product
from vrt_lss_packer.models.product_group_layout import ProductGroupLayout as ProductGroupLayout
from vrt_lss_packer.models.product_layout import ProductLayout as ProductLayout
from vrt_lss_packer.models.schema_error import SchemaError as SchemaError
from vrt_lss_packer.models.service import Service as Service
from vrt_lss_packer.models.tracedata import Tracedata as Tracedata
from vrt_lss_packer.models.unpacked_items import UnpackedItems as UnpackedItems
from vrt_lss_packer.models.validate_result import ValidateResult as ValidateResult
from vrt_lss_packer.models.version_result import VersionResult as VersionResult

""",
            name=__name__,
            doc=__doc__,
        )
    )

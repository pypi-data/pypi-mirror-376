Metadata-Version: 2.1
Name: vrt-lss-packer
Version: 7.23.2926
Summary: VRt.Packer [PC]
Home-page: 
Author: Veeroute Support Team
Author-email: Veeroute Support Team <servicedesk@veeroute.com>
License: Proprietary
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Keywords: OpenAPI,VRt.Packer [PC]
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: lazy-imports <2,>=1
Requires-Dist: pydantic >=2
Requires-Dist: python-dateutil >=2.8.2
Requires-Dist: typing-extensions >=4.7.1
Requires-Dist: urllib3 <3.0.0,>=2.1.0

# vrt_lss_packer
Veeroute Packer API.

# Description

The service is designed to calculate the placement of goods inside given packages.

## Types of packages

### Pallet

![pallet](../images/packer_pallet.svg)

*Mono-pallet*

If the pallet is fully equipped with the same product, then such a pallet is called **mono-pallet**,
such a pallet has the following loading rules:

1. The maximum allowable height of the pallet with the goods laid on it is taken into account.
1. The maximum allowable weight of the loaded pallet is taken into account.
1. Goods packages can only be stacked parallel to the walls of the pallet.
1. It is allowed to rotate packages around the vertical Z-axis and only at a right angle.
1. In order to equalize the height between the positions (to place another pallet on top), empty spaces can be added to the stacking by layers.

*Zone tray*

After the formation of mono-pallets, the remaining part of the goods of the same article is placed on the next pallet,
which is divided into zones by means of a cardboard partition in such a way that only one item of goods is placed in each zone,
while the zones have the following restrictions:

1. The zones are rectangular.
1. The ratio between the sides of the zones can be any.
1. One of the sides of any zone is always in contact with the edge of the pallet.
1. Permissible number of zones on a pallet: from 2 to 6.
1. Each zone is filled according to the rules for filling a mono-pallet.
1. The stacking height of all goods does not exceed 50 mm, so that another pallet can be placed on top of such a pallet.
1. It is allowed to form pallets with different stacking heights for different positions (height difference is more than 50 mm), if these are the top pallets in the stack.

### Mixbox

![mixbox](../images/packer_mixbox.svg)

If the above steps fail to place the item in this way,
so that the pallet is of the required height or weight, mixboxes are used:

1. Mixbox can only be placed in one layer.
1. Different goods can be placed in one mixbox, in this case it is divided by partitions similarly to a pallet (the only difference is that the height of the packed goods is not aligned).
1. Mixboxes can be mixed with items on the same pallet.
1. One product can be packed in different mixboxes.

### Slot

![slot](../images/packer_slot.svg)

The loaded pallets are stacked on top of each other, the slot is where the stack of pallets is placed.
The slot has no physical body - so the dimensions of the `body` of the slot are zero.

## Coordinate system

![coordinates](../images/packer_coordinates.svg)

To indicate the location of packages and goods, a local coordinate system is used,
in which the coordinates of a particular object are indicated relative to the near left lower corner of the parent object, while:

* Horizontal plane - axes **X**, **Y**
* Vertical - **Z** axis

The ratio of the axes of goods and packages:

* Width - **X**
* Length - **Y**
* Height - **Z**

## Entity diagram

![erd](../uml/packer.svg)

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 7.23.2926
- Package version: 7.23.2926
- Generator version: 7.15.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import vrt_lss_packer
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import vrt_lss_packer
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import vrt_lss_packer
from vrt_lss_packer.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://api.edge7.veeroute.cloud
# See configuration.py for a list of all supported configuration parameters.
configuration = vrt_lss_packer.Configuration(
    host = "https://api.edge7.veeroute.cloud"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure Bearer authorization (JWT): ApiKeyAuth
configuration = vrt_lss_packer.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)


# Enter a context with an instance of the API client
with vrt_lss_packer.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = vrt_lss_packer.PackApi(api_client)
    process_code = 'process_code_example' # str | Unique process identifier.

    try:
        # Cancel calculation
        api_instance.cancel_pack_calculation(process_code)
    except ApiException as e:
        print("Exception when calling PackApi->cancel_pack_calculation: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.edge7.veeroute.cloud*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*PackApi* | [**cancel_pack_calculation**](docs/PackApi.md#cancel_pack_calculation) | **DELETE** /packer/pack/calculation-async/{process_code} | Cancel calculation
*PackApi* | [**delete_pack_result**](docs/PackApi.md#delete_pack_result) | **DELETE** /packer/pack/result/{process_code} | Result removal
*PackApi* | [**read_pack_result**](docs/PackApi.md#read_pack_result) | **GET** /packer/pack/result/{process_code} | Getting the result
*PackApi* | [**read_pack_state**](docs/PackApi.md#read_pack_state) | **GET** /packer/pack/state/{process_code} | Calculation state
*PackApi* | [**run_pack_calculation**](docs/PackApi.md#run_pack_calculation) | **POST** /packer/pack/calculation | Packing (SYNC)
*PackApi* | [**run_pack_calculation_async**](docs/PackApi.md#run_pack_calculation_async) | **POST** /packer/pack/calculation-async | Packing (ASYNC)
*PackApi* | [**run_pack_validation**](docs/PackApi.md#run_pack_validation) | **POST** /packer/pack/validation | Data validation
*SystemApi* | [**check**](docs/SystemApi.md#check) | **GET** /packer/system/check | Checking the availability
*SystemApi* | [**file**](docs/SystemApi.md#file) | **GET** /packer/file/{filename} | Getting the documentation
*SystemApi* | [**version**](docs/SystemApi.md#version) | **GET** /packer/system/version | Getting the service version


## Documentation For Models

 - [Attribute](docs/Attribute.md)
 - [CalculationAsyncResult](docs/CalculationAsyncResult.md)
 - [CalculationInfo](docs/CalculationInfo.md)
 - [CalculationSettings](docs/CalculationSettings.md)
 - [CalculationState](docs/CalculationState.md)
 - [CalculationStatus](docs/CalculationStatus.md)
 - [CheckResult](docs/CheckResult.md)
 - [Coordinates](docs/Coordinates.md)
 - [Custom400WithErrorsAndWarnings](docs/Custom400WithErrorsAndWarnings.md)
 - [Dimensions](docs/Dimensions.md)
 - [EntityError](docs/EntityError.md)
 - [EntityErrorType](docs/EntityErrorType.md)
 - [EntityPath](docs/EntityPath.md)
 - [EntityType](docs/EntityType.md)
 - [EntityWarning](docs/EntityWarning.md)
 - [EntityWarningType](docs/EntityWarningType.md)
 - [General402](docs/General402.md)
 - [General404](docs/General404.md)
 - [General404Detail](docs/General404Detail.md)
 - [General429](docs/General429.md)
 - [General500](docs/General500.md)
 - [PackResult](docs/PackResult.md)
 - [PackSettings](docs/PackSettings.md)
 - [PackStatistics](docs/PackStatistics.md)
 - [PackTask](docs/PackTask.md)
 - [Package](docs/Package.md)
 - [PackageLayout](docs/PackageLayout.md)
 - [PackageStatistics](docs/PackageStatistics.md)
 - [PackageType](docs/PackageType.md)
 - [Product](docs/Product.md)
 - [ProductGroupLayout](docs/ProductGroupLayout.md)
 - [ProductLayout](docs/ProductLayout.md)
 - [SchemaError](docs/SchemaError.md)
 - [Service](docs/Service.md)
 - [Tracedata](docs/Tracedata.md)
 - [UnpackedItems](docs/UnpackedItems.md)
 - [ValidateResult](docs/ValidateResult.md)
 - [VersionResult](docs/VersionResult.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="ApiKeyAuth"></a>
### ApiKeyAuth

- **Type**: Bearer authentication (JWT)


## Author

servicedesk@veeroute.com



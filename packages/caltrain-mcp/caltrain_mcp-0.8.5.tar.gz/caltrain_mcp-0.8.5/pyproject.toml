[project]
name = "caltrain-mcp"
dynamic = ["version"]
description = "Model Context Protocol server for Caltrain schedules"
readme = "README.md"
authors = [
    { name = "David Yen", email = "davidyen1124@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "mcp>=1.9.1",
    "pandas>=2.2.3",
]

[project.scripts]
caltrain-mcp = "caltrain_mcp.server:main"
caltrain-lint = "scripts.lint:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pandas-stubs>=2.2.0",
    "python-semantic-release>=9.0.0",
    "build>=1.2.2.post1",
]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.build.targets.wheel]
packages = ["src/caltrain_mcp"]

[tool.hatch.build.targets.sdist]
include = [
  "src/**",
  "README.md",
  "LICENSE.md",
]

[tool.semantic_release]
version_source = "tag_only"
branch = "main"
upload_to_pypi = false
upload_to_vcs_release = true
commit_version_number = false
tag_without_push = true

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs", "chore"]

[tool.semantic_release.remote.token]
env = "GITHUB_TOKEN"

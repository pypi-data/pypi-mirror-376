[project]
name="trame-annotations"
version="0.5.0"
description="Trame widgets for image/video annotations"
authors = [
  {name = "Alessandro Genova", email = "alessandro.genova@kitware.com"},
  {name = "Vicente Adolfo Bolea Sanchez", email = "vicente.bolea@kitware.com"},
  {name = "Paul Elliott", email = "paul.elliott@kitware.com"},
]
readme = "README.md"
keywords = [
    "Python",
    "trame",
    "widget",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: JavaScript",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "trame-client",
]

[project.optional-dependencies]
dev = [
  "black",
  "flake8",
  "pytest",
  "trame",
  "trame-vuetify",
]

package = [
  "build",
  "python-semantic-release",
  "setuptools",
  "wheel",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/trame", "src/trame_annotations"]

[tool.hatch.build.hooks.custom]

[tool.black]
line-length = 99
target-version = ['py39', 'py310']
include = '''
    \.pyi?$
'''
extend-exclude = '''
/(
    \.git
  | bundles/
  | examples/
)/
'''

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = [
    "src/trame_annotations/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:project.version",
]
build_command = """
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  nvm install 20
  node -v
  npm -v
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip
  python -m pip install build python-semantic-release setuptools wheel
  python -m build .
"""

[tool.semantic_release.branches.main]
match = "(main)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

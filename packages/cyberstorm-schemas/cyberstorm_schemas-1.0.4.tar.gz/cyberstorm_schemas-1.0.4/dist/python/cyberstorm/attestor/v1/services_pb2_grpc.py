# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cyberstorm.attestor.v1 import services_pb2 as cyberstorm_dot_attestor_dot_v1_dot_services__pb2


class AttestServiceStub(object):
    """Generic attestation service - schema-driven EAS operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAttestation = channel.unary_unary(
                '/cyberstorm.attestor.v1.AttestService/CreateAttestation',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationResponse.FromString,
                _registered_method=True)
        self.GetSchemas = channel.unary_unary(
                '/cyberstorm.attestor.v1.AttestService/GetSchemas',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasResponse.FromString,
                _registered_method=True)
        self.GetSchema = channel.unary_unary(
                '/cyberstorm.attestor.v1.AttestService/GetSchema',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaResponse.FromString,
                _registered_method=True)


class AttestServiceServicer(object):
    """Generic attestation service - schema-driven EAS operations
    """

    def CreateAttestation(self, request, context):
        """Create attestation using dynamic schema encoding
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchemas(self, request, context):
        """Get schema information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Get specific schema definition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AttestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAttestation,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationResponse.SerializeToString,
            ),
            'GetSchemas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchemas,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasResponse.SerializeToString,
            ),
            'GetSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchema,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cyberstorm.attestor.v1.AttestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cyberstorm.attestor.v1.AttestService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AttestService(object):
    """Generic attestation service - schema-driven EAS operations
    """

    @staticmethod
    def CreateAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.AttestService/CreateAttestation',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.CreateAttestationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSchemas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.AttestService/GetSchemas',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.AttestService/GetSchema',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SignServiceStub(object):
    """Server-side signing service for automated operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServerSignAttestation = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/ServerSignAttestation',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationResponse.FromString,
                _registered_method=True)
        self.SignMessage = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/SignMessage',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageResponse.FromString,
                _registered_method=True)
        self.VerifySignature = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/VerifySignature',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureResponse.FromString,
                _registered_method=True)
        self.GenerateWebhookSecret = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/GenerateWebhookSecret',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretResponse.FromString,
                _registered_method=True)
        self.VerifyWebhookSignature = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/VerifyWebhookSignature',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureResponse.FromString,
                _registered_method=True)
        self.GetServerAddress = channel.unary_unary(
                '/cyberstorm.attestor.v1.SignService/GetServerAddress',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressResponse.FromString,
                _registered_method=True)


class SignServiceServicer(object):
    """Server-side signing service for automated operations
    """

    def ServerSignAttestation(self, request, context):
        """Server signs attestation using validator private key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignMessage(self, request, context):
        """Sign a message using server's private key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifySignature(self, request, context):
        """Verify signatures
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateWebhookSecret(self, request, context):
        """Generate deterministic webhook secret for repository
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyWebhookSignature(self, request, context):
        """Verify GitHub webhook signature (gRPC only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerAddress(self, request, context):
        """Get server's public address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SignServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ServerSignAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerSignAttestation,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationResponse.SerializeToString,
            ),
            'SignMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SignMessage,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageResponse.SerializeToString,
            ),
            'VerifySignature': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifySignature,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureResponse.SerializeToString,
            ),
            'GenerateWebhookSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateWebhookSecret,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretResponse.SerializeToString,
            ),
            'VerifyWebhookSignature': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyWebhookSignature,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureResponse.SerializeToString,
            ),
            'GetServerAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerAddress,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cyberstorm.attestor.v1.SignService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cyberstorm.attestor.v1.SignService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SignService(object):
    """Server-side signing service for automated operations
    """

    @staticmethod
    def ServerSignAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/ServerSignAttestation',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ServerSignAttestationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SignMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/SignMessage',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.SignMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifySignature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/VerifySignature',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifySignatureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateWebhookSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/GenerateWebhookSecret',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateWebhookSecretResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyWebhookSignature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/VerifyWebhookSignature',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.VerifyWebhookSignatureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServerAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.SignService/GetServerAddress',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetServerAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ContributionServiceStub(object):
    """Business logic service for contribution workflows
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterRepository = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/RegisterRepository',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryResponse.FromString,
                _registered_method=True)
        self.GetWebhookSecret = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GetWebhookSecret',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretResponse.FromString,
                _registered_method=True)
        self.ListRepositories = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/ListRepositories',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesResponse.FromString,
                _registered_method=True)
        self.LookupRepository = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/LookupRepository',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryResponse.FromString,
                _registered_method=True)
        self.RegisterIdentity = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/RegisterIdentity',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityResponse.FromString,
                _registered_method=True)
        self.ValidateIdentity = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/ValidateIdentity',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityResponse.FromString,
                _registered_method=True)
        self.ListIdentities = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/ListIdentities',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesResponse.FromString,
                _registered_method=True)
        self.LookupIdentity = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/LookupIdentity',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityResponse.FromString,
                _registered_method=True)
        self.ProcessWebhook = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/ProcessWebhook',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookResponse.FromString,
                _registered_method=True)
        self.GetContributions = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GetContributions',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsResponse.FromString,
                _registered_method=True)
        self.GetContributionsByIdentity = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GetContributionsByIdentity',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityResponse.FromString,
                _registered_method=True)
        self.GetContributionsByRepository = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GetContributionsByRepository',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryResponse.FromString,
                _registered_method=True)
        self.GetContributionsByUid = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GetContributionsByUid',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidResponse.FromString,
                _registered_method=True)
        self.GenerateRepositoryBranchName = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/GenerateRepositoryBranchName',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameResponse.FromString,
                _registered_method=True)
        self.ValidateRepositoryBranch = channel.unary_unary(
                '/cyberstorm.attestor.v1.ContributionService/ValidateRepositoryBranch',
                request_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchRequest.SerializeToString,
                response_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchResponse.FromString,
                _registered_method=True)


class ContributionServiceServicer(object):
    """Business logic service for contribution workflows
    """

    def RegisterRepository(self, request, context):
        """Repository management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWebhookSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRepositories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupRepository(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterIdentity(self, request, context):
        """Identity management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIdentities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessWebhook(self, request, context):
        """Webhook processing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContributions(self, request, context):
        """Contribution queries
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContributionsByIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContributionsByRepository(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContributionsByUid(self, request, context):
        """Referential lookups by UID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateRepositoryBranchName(self, request, context):
        """Repository registration workflow methods (gRPC only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateRepositoryBranch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContributionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterRepository': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterRepository,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryResponse.SerializeToString,
            ),
            'GetWebhookSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWebhookSecret,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretResponse.SerializeToString,
            ),
            'ListRepositories': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRepositories,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesResponse.SerializeToString,
            ),
            'LookupRepository': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupRepository,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryResponse.SerializeToString,
            ),
            'RegisterIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterIdentity,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityResponse.SerializeToString,
            ),
            'ValidateIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateIdentity,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityResponse.SerializeToString,
            ),
            'ListIdentities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIdentities,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesResponse.SerializeToString,
            ),
            'LookupIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupIdentity,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityResponse.SerializeToString,
            ),
            'ProcessWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessWebhook,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookResponse.SerializeToString,
            ),
            'GetContributions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContributions,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsResponse.SerializeToString,
            ),
            'GetContributionsByIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContributionsByIdentity,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityResponse.SerializeToString,
            ),
            'GetContributionsByRepository': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContributionsByRepository,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryResponse.SerializeToString,
            ),
            'GetContributionsByUid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContributionsByUid,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidResponse.SerializeToString,
            ),
            'GenerateRepositoryBranchName': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateRepositoryBranchName,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameResponse.SerializeToString,
            ),
            'ValidateRepositoryBranch': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateRepositoryBranch,
                    request_deserializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchRequest.FromString,
                    response_serializer=cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cyberstorm.attestor.v1.ContributionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cyberstorm.attestor.v1.ContributionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ContributionService(object):
    """Business logic service for contribution workflows
    """

    @staticmethod
    def RegisterRepository(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/RegisterRepository',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterRepositoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWebhookSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GetWebhookSecret',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetWebhookSecretResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRepositories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/ListRepositories',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListRepositoriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupRepository(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/LookupRepository',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupRepositoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/RegisterIdentity',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.RegisterIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/ValidateIdentity',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListIdentities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/ListIdentities',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ListIdentitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/LookupIdentity',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.LookupIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/ProcessWebhook',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ProcessWebhookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContributions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GetContributions',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContributionsByIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GetContributionsByIdentity',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContributionsByRepository(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GetContributionsByRepository',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByRepositoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContributionsByUid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GetContributionsByUid',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GetContributionsByUidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateRepositoryBranchName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/GenerateRepositoryBranchName',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.GenerateRepositoryBranchNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateRepositoryBranch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cyberstorm.attestor.v1.ContributionService/ValidateRepositoryBranch',
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchRequest.SerializeToString,
            cyberstorm_dot_attestor_dot_v1_dot_services__pb2.ValidateRepositoryBranchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

# coding: utf-8

"""
    SatNOGS DB

    SatNOGS DB is a crowdsourced database of details about orbital                     satellites and data collected from them.

    The version of the OpenAPI document: 1.1
    Contact: dev@satnogs.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from satnogsdbapiclient.models.satellite import Satellite

class TestSatellite(unittest.TestCase):
    """Satellite unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Satellite:
        """Test Satellite
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Satellite`
        """
        model = Satellite()
        if include_optional:
            return Satellite(
                sat_id = '',
                norad_cat_id = 56,
                norad_follow_id = 56,
                name = '',
                names = '',
                image = '',
                status = '',
                decayed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                launched = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deployed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                website = '',
                operator = '',
                countries = '',
                telemetries = {
                    'key' : null
                    },
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                citation = '',
                is_frequency_violator = True,
                associated_satellites = {
                    'key' : null
                    }
            )
        else:
            return Satellite(
                sat_id = '',
                norad_cat_id = 56,
                norad_follow_id = 56,
                name = '',
                names = '',
                image = '',
                status = '',
                decayed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                launched = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deployed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                website = '',
                operator = '',
                countries = '',
                telemetries = {
                    'key' : null
                    },
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                citation = '',
                is_frequency_violator = True,
                associated_satellites = {
                    'key' : null
                    },
        )
        """

    def testSatellite(self):
        """Test Satellite"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

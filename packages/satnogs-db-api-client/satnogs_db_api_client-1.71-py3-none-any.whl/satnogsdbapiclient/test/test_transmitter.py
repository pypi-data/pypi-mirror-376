# coding: utf-8

"""
    SatNOGS DB

    SatNOGS DB is a crowdsourced database of details about orbital                     satellites and data collected from them.

    The version of the OpenAPI document: 1.1
    Contact: dev@satnogs.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from satnogsdbapiclient.models.transmitter import Transmitter

class TestTransmitter(unittest.TestCase):
    """Transmitter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transmitter:
        """Test Transmitter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transmitter`
        """
        model = Transmitter()
        if include_optional:
            return Transmitter(
                uuid = '',
                description = '',
                alive = True,
                type = 'Transmitter',
                uplink_low = 0,
                uplink_high = 0,
                uplink_drift = -99999,
                downlink_low = 0,
                downlink_high = 0,
                downlink_drift = -99999,
                mode = 56,
                mode_id = 56,
                uplink_mode = 56,
                invert = True,
                baud = 0,
                sat_id = '',
                norad_cat_id = 56,
                norad_follow_id = 56,
                status = 'active',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                citation = '',
                service = 'Aeronautical',
                iaru_coordination = 'IARU Coordinated',
                iaru_coordination_url = '',
                itu_notification = None,
                frequency_violation = True,
                unconfirmed = True
            )
        else:
            return Transmitter(
                uuid = '',
                description = '',
                alive = True,
                mode = 56,
                mode_id = 56,
                uplink_mode = 56,
                sat_id = '',
                norad_cat_id = 56,
                norad_follow_id = 56,
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                frequency_violation = True,
                unconfirmed = True,
        )
        """

    def testTransmitter(self):
        """Test Transmitter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

name: Leakage Buster CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test (py${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -e .[dev] || pip install -e .
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest -q --cov=leakage_buster --cov-report=xml

      - name: Upload coverage to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

  leakage-audit:
    name: leakage-audit
    needs: [test]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && needs.test.result == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "placeholder for additional audits"
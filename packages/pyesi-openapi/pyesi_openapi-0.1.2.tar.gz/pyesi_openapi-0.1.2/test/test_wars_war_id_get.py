# coding: utf-8

"""
    EVE Stable Infrastructure (ESI) - tranquility

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyesi_openapi.models.wars_war_id_get import WarsWarIdGet

class TestWarsWarIdGet(unittest.TestCase):
    """WarsWarIdGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WarsWarIdGet:
        """Test WarsWarIdGet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WarsWarIdGet`
        """
        model = WarsWarIdGet()
        if include_optional:
            return WarsWarIdGet(
                aggressor = pyesi_openapi.models.wars_war_id_get_aggressor.WarsWarIdGet_aggressor(
                    alliance_id = 56, 
                    corporation_id = 56, 
                    isk_destroyed = 1.337, 
                    ships_killed = 56, ),
                allies = [
                    pyesi_openapi.models.wars_war_id_get_allies_inner.WarsWarIdGet_allies_inner(
                        alliance_id = 56, 
                        corporation_id = 56, )
                    ],
                declared = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                defender = pyesi_openapi.models.wars_war_id_get_defender.WarsWarIdGet_defender(
                    alliance_id = 56, 
                    corporation_id = 56, 
                    isk_destroyed = 1.337, 
                    ships_killed = 56, ),
                finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = 56,
                mutual = True,
                open_for_allies = True,
                retracted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return WarsWarIdGet(
                aggressor = pyesi_openapi.models.wars_war_id_get_aggressor.WarsWarIdGet_aggressor(
                    alliance_id = 56, 
                    corporation_id = 56, 
                    isk_destroyed = 1.337, 
                    ships_killed = 56, ),
                declared = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                defender = pyesi_openapi.models.wars_war_id_get_defender.WarsWarIdGet_defender(
                    alliance_id = 56, 
                    corporation_id = 56, 
                    isk_destroyed = 1.337, 
                    ships_killed = 56, ),
                id = 56,
                mutual = True,
                open_for_allies = True,
        )
        """

    def testWarsWarIdGet(self):
        """Test WarsWarIdGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    EVE Stable Infrastructure (ESI) - tranquility

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyesi_openapi.models.fw_leaderboards_characters_get import FwLeaderboardsCharactersGet

class TestFwLeaderboardsCharactersGet(unittest.TestCase):
    """FwLeaderboardsCharactersGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FwLeaderboardsCharactersGet:
        """Test FwLeaderboardsCharactersGet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FwLeaderboardsCharactersGet`
        """
        model = FwLeaderboardsCharactersGet()
        if include_optional:
            return FwLeaderboardsCharactersGet(
                kills = pyesi_openapi.models.fw_leaderboards_characters_get_kills.FwLeaderboardsCharactersGet_kills(
                    active_total = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_active_total_inner.FwLeaderboardsCharactersGet_kills_active_total_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    last_week = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_last_week_inner.FwLeaderboardsCharactersGet_kills_last_week_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    yesterday = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_yesterday_inner.FwLeaderboardsCharactersGet_kills_yesterday_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], ),
                victory_points = pyesi_openapi.models.fw_leaderboards_characters_get_victory_points.FwLeaderboardsCharactersGet_victory_points(
                    active_total = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_active_total_inner.FwLeaderboardsCharactersGet_victory_points_active_total_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    last_week = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_last_week_inner.FwLeaderboardsCharactersGet_victory_points_last_week_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    yesterday = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_yesterday_inner.FwLeaderboardsCharactersGet_victory_points_yesterday_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], )
            )
        else:
            return FwLeaderboardsCharactersGet(
                kills = pyesi_openapi.models.fw_leaderboards_characters_get_kills.FwLeaderboardsCharactersGet_kills(
                    active_total = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_active_total_inner.FwLeaderboardsCharactersGet_kills_active_total_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    last_week = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_last_week_inner.FwLeaderboardsCharactersGet_kills_last_week_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    yesterday = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_kills_yesterday_inner.FwLeaderboardsCharactersGet_kills_yesterday_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], ),
                victory_points = pyesi_openapi.models.fw_leaderboards_characters_get_victory_points.FwLeaderboardsCharactersGet_victory_points(
                    active_total = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_active_total_inner.FwLeaderboardsCharactersGet_victory_points_active_total_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    last_week = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_last_week_inner.FwLeaderboardsCharactersGet_victory_points_last_week_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], 
                    yesterday = [
                        pyesi_openapi.models.fw_leaderboards_characters_get_victory_points_yesterday_inner.FwLeaderboardsCharactersGet_victory_points_yesterday_inner(
                            amount = 56, 
                            character_id = 56, )
                        ], ),
        )
        """

    def testFwLeaderboardsCharactersGet(self):
        """Test FwLeaderboardsCharactersGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

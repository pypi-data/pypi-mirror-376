# coding: utf-8

"""
    EVE Stable Infrastructure (ESI) - tranquility

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyesi_openapi.models.dogma_effects_effect_id_get import DogmaEffectsEffectIdGet

class TestDogmaEffectsEffectIdGet(unittest.TestCase):
    """DogmaEffectsEffectIdGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DogmaEffectsEffectIdGet:
        """Test DogmaEffectsEffectIdGet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DogmaEffectsEffectIdGet`
        """
        model = DogmaEffectsEffectIdGet()
        if include_optional:
            return DogmaEffectsEffectIdGet(
                description = '',
                disallow_auto_repeat = True,
                discharge_attribute_id = 56,
                display_name = '',
                duration_attribute_id = 56,
                effect_category = 56,
                effect_id = 56,
                electronic_chance = True,
                falloff_attribute_id = 56,
                icon_id = 56,
                is_assistance = True,
                is_offensive = True,
                is_warp_safe = True,
                modifiers = [
                    pyesi_openapi.models.dogma_effects_effect_id_get_modifiers_inner.DogmaEffectsEffectIdGet_modifiers_inner(
                        domain = '', 
                        effect_id = 56, 
                        func = '', 
                        modified_attribute_id = 56, 
                        modifying_attribute_id = 56, 
                        operator = 56, )
                    ],
                name = '',
                post_expression = 56,
                pre_expression = 56,
                published = True,
                range_attribute_id = 56,
                range_chance = True,
                tracking_speed_attribute_id = 56
            )
        else:
            return DogmaEffectsEffectIdGet(
                effect_id = 56,
        )
        """

    def testDogmaEffectsEffectIdGet(self):
        """Test DogmaEffectsEffectIdGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    EVE Stable Infrastructure (ESI) - tranquility

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyesi_openapi.models.corporations_corporation_id_contracts_get_inner import CorporationsCorporationIdContractsGetInner

class TestCorporationsCorporationIdContractsGetInner(unittest.TestCase):
    """CorporationsCorporationIdContractsGetInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CorporationsCorporationIdContractsGetInner:
        """Test CorporationsCorporationIdContractsGetInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CorporationsCorporationIdContractsGetInner`
        """
        model = CorporationsCorporationIdContractsGetInner()
        if include_optional:
            return CorporationsCorporationIdContractsGetInner(
                acceptor_id = 56,
                assignee_id = 56,
                availability = 'public',
                buyout = 1.337,
                collateral = 1.337,
                contract_id = 56,
                date_accepted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_expired = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_issued = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                days_to_complete = 56,
                end_location_id = 56,
                for_corporation = True,
                issuer_corporation_id = 56,
                issuer_id = 56,
                price = 1.337,
                reward = 1.337,
                start_location_id = 56,
                status = 'outstanding',
                title = '',
                type = 'unknown',
                volume = 1.337
            )
        else:
            return CorporationsCorporationIdContractsGetInner(
                acceptor_id = 56,
                assignee_id = 56,
                availability = 'public',
                contract_id = 56,
                date_expired = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_issued = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                for_corporation = True,
                issuer_corporation_id = 56,
                issuer_id = 56,
                status = 'outstanding',
                type = 'unknown',
        )
        """

    def testCorporationsCorporationIdContractsGetInner(self):
        """Test CorporationsCorporationIdContractsGetInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

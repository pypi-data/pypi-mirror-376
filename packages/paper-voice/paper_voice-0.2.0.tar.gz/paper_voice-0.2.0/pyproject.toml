[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "paper_voice"
version = "0.2.0"
description = "Convert academic papers to high-quality audio with precise mathematical explanations and intelligent content processing"
readme = "README.md"
requires-python = ">=3.9,!=3.9.7"
authors = [
    {name = "Gaurav Sood", email = "gsood07@gmail.com"}
]
dependencies = [
    "streamlit>=1.30.0",
    "PyPDF2>=3.0.1",
    "pyttsx3>=2.90",
    "regex>=2024.2.2",
    "pydub>=0.25.1",
    "openai>=1.0.0",
    "PyMuPDF>=1.23.0",
    "requests>=2.31.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[project.urls]
homepage = "https://github.com/gojiplus/paper_voice"
repository = "https://github.com/gojiplus/paper_voice"
documentation = "https://gojiplus.github.io/paper_voice"

[project.scripts]
paper_voice = "paper_voice.cli:cli_entry_point"

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["paper_voice"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
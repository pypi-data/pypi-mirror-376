name: Run Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test] coverage codecov
      
      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover -s tests -v
          coverage xml
          coverage html
          coverage report > coverage-${{ matrix.os }}-${{ matrix.python-version }}.txt
        shell: bash
      
      - name: Store coverage percentage
        run: |
          COVERAGE=$(grep 'TOTAL' coverage-${{ matrix.os }}-${{ matrix.python-version }}.txt | awk '{print $NF}' | sed 's/%//')
          echo "COVERAGE_${{ matrix.os }}_${{ matrix.python-version }}=$COVERAGE" >> $GITHUB_ENV
        shell: bash
      
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage-${{ matrix.os }}-${{ matrix.python-version }}.txt

  generate-badge:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          path: coverage-data
          merge-multiple: true

      - name: Calculate average coverage
        run: |
          TOTAL=0
          COUNT=0
          for file in coverage-data/coverage-*.txt; do
            if [ -f "$file" ]; then
              # Extract the coverage percentage, ensuring only the numeric part is captured
              COVERAGE=$(grep 'TOTAL' "$file" | awk '{print $NF}' | sed 's/%//' | tr -d '\r\n' | grep -E '^[0-9]+$')
              if [ -n "$COVERAGE" ]; then
                echo "Processing $file: $COVERAGE%"
                TOTAL=$((TOTAL + COVERAGE))
                COUNT=$((COUNT + 1))
              else
                echo "Warning: Invalid coverage value in $file"
              fi
            fi
          done
          if [ $COUNT -gt 0 ]; then
            AVG=$(( (TOTAL + COUNT - 1) / COUNT )) # Round up to avoid truncation
            echo "Average coverage: $AVG%"
            echo "AVERAGE_COVERAGE=$AVG" >> $GITHUB_ENV
          else
            echo "Error: No valid coverage files found"
            exit 1
          fi
        shell: bash

      - name: Generate shields.io badge SVG
        run: |
          COVERAGE=${{ env.AVERAGE_COVERAGE }}
          COLOR="red"
          if [ "$COVERAGE" -ge 90 ]; then COLOR="brightgreen"; fi
          if [ "$COVERAGE" -ge 80 ] && [ "$COVERAGE" -lt 90 ]; then COLOR="green"; fi
          if [ "$COVERAGE" -ge 70 ] && [ "$COVERAGE" -lt 80 ]; then COLOR="yellowgreen"; fi
          if [ "$COVERAGE" -ge 60 ] && [ "$COVERAGE" -lt 70 ]; then COLOR="yellow"; fi
          if [ "$COVERAGE" -ge 50 ] && [ "$COVERAGE" -lt 60 ]; then COLOR="orange"; fi
          mkdir -p badges
          curl "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR.svg" -o badges/coverage.svg
      
      - name: Commit badge SVG
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add badges/coverage.svg
          git commit -m "Update coverage badge SVG [ci skip]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: badges/coverage.svg
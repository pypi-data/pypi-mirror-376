# coding: utf-8

KEY = 0x53


def decrypt_string(encrypted_string: bytes) -> bytes:
    """
    The function decrypts a string using the LOBSHOT custom decryption algorithm.

    :param encrypted_string: The encrypted string as a byte sequence to decrypt.
    :return: The decrypted string as a UTF-8 encoded byte sequence.
    """

    decrypted_string = bytearray((0 for _ in range(len(encrypted_string))))

    y = 0
    z = 0
    flag = False
    for i in range(0, len(encrypted_string), 2):
        first_byte = encrypted_string[i]
        second_byte = encrypted_string[i + 1]

        y = second_byte - 0x61
        if flag:
            decrypted_string[i] = KEY ^ z ^ (y | ((16 * first_byte - 16) & 0xFF))
        else:
            z = y | ((16 * (first_byte - 1)) & 0xFF)
            flag = True

    return decrypted_string.decode("utf-16").encode("utf-8")[1:]

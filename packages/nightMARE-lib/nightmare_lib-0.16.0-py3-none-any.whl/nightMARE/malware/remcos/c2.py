# coding: utf-8

from nightMARE.core import cast

MAGIC = 0xFF0424
SEPARATOR = b"|\x1e\x1e\x1f|"


def build_command_packet(command_id: int, command_data: bytes) -> bytes:
    """
    Build a command packet with a command ID and associated data.

    :param command_id: The command identifier as an integer.
    :param command_data: The command data as a byte sequence.
    :return: The fully constructed command packet as a byte sequence.
    """

    return build_packet(cast.p32(command_id) + command_data)


def build_packet(data: bytes) -> bytes:
    """
    Build a packet with a magic number, length, and data.

    :param data: The payload data as a byte sequence to include in the packet.
    :return: The constructed packet as a byte sequence, including magic and length headers.
    """

    packet = cast.p32(MAGIC)
    packet += cast.p32(len(data))
    packet += data
    return packet

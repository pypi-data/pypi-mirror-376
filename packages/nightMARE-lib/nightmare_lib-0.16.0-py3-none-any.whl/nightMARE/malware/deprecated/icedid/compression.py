# coding: utf-8

import typing
import ctypes

from nightMARE.malware.deprecated.icedid import windows


def __decompress_lznt1(
    compressed_data: bytes, decompressed_size: int
) -> typing.Optional[bytes]:
    """
    Decompresses data using the LZNT1 algorithm via Windows RtlDecompressBuffer.

    :param compressed_data: The compressed data to decompress
    :param decompressed_size: The expected size of the decompressed data
    :return: The decompressed data as bytes if successful, None otherwise
    """

    decompressed_data = ctypes.c_buffer(decompressed_size)
    n_bytes = ctypes.c_uint32(0)

    result = ctypes.c_uint32(
        windows.RtlDecompressBuffer(
            windows.COMPRESSION_FORMAT_LZNT1,
            decompressed_data,
            decompressed_size,
            compressed_data,
            len(compressed_data),
            ctypes.byref(n_bytes),
        )
    ).value

    return None if windows.STATUS_SUCCESS != result else decompressed_data.raw


def decompress(data: bytes) -> typing.Optional[bytes]:
    """
    Decompresses ICEDID's compressed data using the LZNT1 algorithm.

    :param data: ICEDID's compressed data, with the first 4 bytes indicating decompressed size
    :return: The decompressed data as bytes if successful, None otherwise
    """

    return __decompress_lznt1(data[4:], int.from_bytes(data[:4], "little"))

# .github/workflows/release.yml

name: Build and Publish arm64 macOS Wheels to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build_macos_wheels:
    name: Build arm64 wheels on macOS
    runs-on: macos-latest

    steps:
      - name: Check out the repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install C++ dependencies with vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: ${{ env.VCPKG_ROOT }}
          runVcpkgInstall: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          # Set the VCPKG triplet for the arm64 architecture
          CIBW_ENVIRONMENT: 'VCPKG_TARGET_TRIPLET=arm64-osx'
          # Pass the vcpkg toolchain file to CMake
          CIBW_CMAKE_ARGS: -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
          # Specify Python versions to build for
          CIBW_BUILD: "cp310-* cp311-* cp312-*"
          # Explicitly build only for arm64 on macOS
          CIBW_ARCHS_MACOS: arm64

      - name: Store wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels-macos-arm64
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels to PyPI
    needs: [build_macos_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: python-wheels-*
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

[project]
name = "crewmaster"
version = "0.1.21"
description = "A powerful and flexible framework for building, orchestrating, and deploying multi-agent systems."
authors = [
    {name = "Imolko", email = "info@imolko.com"},
    {name = "Roberto Matute", email = "info@imolko.com"},
    {name = "Carlos N", email = "machinery.e@gmail.com"}
]
readme = "README.md"
homepage = "https://gitlab.com/imolko/crewmaster"
repository = "https://gitlab.com/imolko/crewmaster"
keywords = ["ai", "llm", "agent"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Framework :: FastAPI",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Se requiere que python este en este rango para instalar: deepeval
requires-python = ">=3.12.3,<3.14"
packages = [
    { include = "core", from = "project"  },
    { include = "crewmaster", from = "project" },
]
dependencies = [
    "langchain (>=0.3.18,<0.4.0)",
    "langgraph (>=0.2.71,<0.3.0)",
    "langserve (>=0.3.1,<0.4.0)",
    "langchain-community (>=0.3.17,<0.4.0)",
    "langchain-postgres (>=0.0.13,<0.0.14)",
    "langchain-openai (>=0.3.5,<0.4.0)",
    "langchain-cli (>=0.0.35,<0.0.36)",
    "langchain-core (>=0.3.35,<0.4.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "pydantic-settings (>=2.7.1,<3.0.0)",
    "python-dotenv (>=1.0.1,<2.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "pytest (>=8.3.4,<9.0.0)",
    "pytest-watcher (>=0.4.3,<0.5.0)",
    "pytest-mock (>=3.14.0,<4.0.0)",
    "pytest-asyncio (>=0.25.3,<0.26.0)",
    "structlog (>=25.1.0,<26.0.0)",
    "setuptools (>=75.8.0,<76.0.0)",
    "fastapi (>=0.115.8,<0.116.0)",
    "google (>=3.0.0,<4.0.0)",
    "google-api-python-client (>=2.161.0,<3.0.0)",
    "google-auth-httplib2 (>=0.2.0,<0.3.0)",
    "google-auth-oauthlib (>=1.2.1,<2.0.0)",
    "deepeval (>=2.3.8,<3.0.0)",
    "toml (>=0.10.2,<0.11.0)",
    "mkdocs-mermaid2-plugin (>=1.2.2,<2.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.scripts]
clean_pycache = "scripts.wrapper:clean_pycache"
clean_root = "scripts.wrapper:clean_root"
clean_all = "scripts.wrapper:clean_all"
restart = "scripts.wrapper:restart_project"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"  # Or "class", "module", "package", or "session" as needed
markers = [
    "only: marca un test para que sea de los Ãºnicos ejecutados",
    "llm_evaluation: marca para indicar que el test utiliza un llm externo"
]
filterwarnings = [
    "ignore::DeprecationWarning"
]

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.30.0"}
mkdocs-material = "^9.6.18"
mkdocs-git-revision-date-localized-plugin = "^1.4.7"


name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build wheels with maturin (non-macOS)
        if: runner.os != 'macOS'
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --sdist
          sccache: true
          manylinux: manylinux2014

      - name: Build wheels with maturin (macOS universal2)
        if: runner.os == 'macOS'
        uses: PyO3/maturin-action@v1
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.9"
          MACOSX_ARCHITECTURES: "x86_64;arm64"
        with:
          command: build
          args: --release -o dist --sdist
          sccache: true

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}
          path: dist/*

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten downloaded artifacts into dist root
        run: |
          shopt -s globstar nullglob
          mkdir -p flat
          for f in dist/**/*.{whl,tar.gz}; do
            cp "$f" flat/
          done
          ls -la flat | cat

      - name: Publish wheels to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: flat/* --skip-existing
          manylinux: manylinux2014 
###############################
# Minimal pyproject.toml for uv
###############################

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.uv]
cache-dir = ".uv-cache"
python-downloads = "auto"
resolution = "highest"
prerelease = "disallow"
index-url = "https://pypi.org/simple"
compile-bytecode = true
no-build-isolation = false

[project]
name = "bank-statement-separator"
version = "0.4.0"
description = "AI-powered tool for separating multi-statement PDF files using LangChain and LangGraph"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Stephen Eaton", email = "seaton@strobotics.com.au" }
]
maintainers = [
    { name = "Stephen Eaton", email = "seaton@strobotics.com.au" }
]
keywords = [
    "pdf",
    "ai",
    "langchain",
    "bank-statement",
    "document-processing",
    "automation",
    "financial",
    "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities"
]
dependencies = [
    "langgraph>=0.2.0",
    "langchain>=0.3.0",
    "langchain-openai>=0.2.0",
    "pymupdf>=1.23.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "faker>=37.6.0",
    "reportlab>=4.4.3",
    "httpx>=0.28.1",
    "mkdocs-material>=9.6.18",
    "mkdocs-mermaid2-plugin>=1.2.2",
    "langchain-ollama>=0.3.7",
    "mike>=2.1.3",
]
[project.urls]
Homepage = "https://github.com/madeinoz67/bank-statement-separator"
Documentation = "https://madeinoz67.github.io/bank-statement-separator/"
Repository = "https://github.com/madeinoz67/bank-statement-separator"
Issues = "https://github.com/madeinoz67/bank-statement-separator/issues"
Changelog = "https://github.com/madeinoz67/bank-statement-separator/blob/main/docs/release_notes/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[project.scripts]
bank-statement-separator = "bank_statement_separator.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-xdist>=3.8.0",
    "ruff>=0.1.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
    "pip-licenses>=4.0.0",
    "twine>=5.0.0",
    "build>=1.0.0",
    "pre-commit>=4.3.0",
    "detect-secrets>=1.5.0",
]

[tool.pytest.ini_options]
markers = [
    "unit: Unit tests - fast, isolated tests for individual components",
    "integration: Integration tests - verify component interactions",
    "slow: Slow running tests - tests that take more than 5 seconds",
    "requires_api: Tests that require OpenAI API keys",
    "requires_ollama: Tests that require Ollama to be running",
    "requires_paperless: Tests that require Paperless-ngx to be running",
    "api_integration: Tests that require real paperless-ngx API access (disabled by default)",
    "edge_case: Edge case scenario tests",
    "smoke: Smoke tests - critical functionality that should always work",
    "performance: Performance and scalability tests",
    "mock_heavy: Tests that use extensive mocking",
    "pdf_processing: Tests involving PDF file operations",
    "llm: Tests involving LLM providers and operations",
    "validation: Tests for validation and error handling",
    "manual: Manual execution tests (excluded from automated runs)",
    "e2e: End-to-end tests with complete workflow validation",
]
addopts = "--ignore=tests/manual --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
# Enable essential rules for code quality
select = ["E", "F", "W", "I"]
ignore = ["E501"]  # Ignore line length warnings

[tool.ruff.lint.per-file-ignores]
# Manual test scripts can be more relaxed
"tests/manual/*.py" = ["E", "F", "W", "I"]

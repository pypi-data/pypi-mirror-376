[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "claude-setup"
version = "1.0.0"
description = "Intelligent scaffolding system for Claude Code configurations - Generate optimal .claude setups for any project"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Claude Setup Contributors", email = "hello@claude-setup.dev" },
]
maintainers = [
    { name = "Claude Setup Maintainers", email = "hello@claude-setup.dev" },
]
keywords = [
    "claude",
    "claude-code", 
    "ai",
    "llm",
    "cli",
    "scaffolding",
    "configuration",
    "development-tools",
    "automation",
    "developer-experience"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
    "Typing :: Typed"
]

dependencies = [
    "click>=8.1.7",
    "rich>=13.7.1",
    "questionary>=2.0.1",
    "jinja2>=3.1.4",
    "pydantic>=2.8.0",
    "gitpython>=3.1.43",
    "httpx>=0.27.0",
    "pyyaml>=6.0.2",
    "toml>=0.10.2",
    "typing-extensions>=4.12.0;python_version<'3.11'"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "types-pyyaml>=6.0.12",
    "types-toml>=0.10.8",
    "types-click"
]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.25.0"
]

[project.urls]
Homepage = "https://github.com/claude-setup/claude-setup"
Documentation = "https://docs.claude-setup.dev"
Repository = "https://github.com/claude-setup/claude-setup.git"
Issues = "https://github.com/claude-setup/claude-setup/issues"
Changelog = "https://github.com/claude-setup/claude-setup/blob/main/CHANGELOG.md"

[project.scripts]
claude-setup = "claude_setup.__main__:main"
cs = "claude_setup.__main__:main"  # Short alias

[tool.hatch.version]
path = "src/claude_setup/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/templates",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md"
]

[tool.hatch.build.targets.wheel]
packages = ["src/claude_setup"]
include = [
    "/templates"
]

[tool.hatch.build.targets.wheel.shared-data]
"templates" = "share/claude-setup/templates"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=claude_setup",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]

[tool.coverage.run]
source = ["src/claude_setup"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
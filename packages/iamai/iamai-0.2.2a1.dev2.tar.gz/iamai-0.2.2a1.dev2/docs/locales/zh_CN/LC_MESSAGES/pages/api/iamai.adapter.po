# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023-PRESENT, Retrofor Wut?
# This file is distributed under the same license as the iamai package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: iamai \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-18 11:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/pages/api/iamai.adapter.rst:2 aef68a9230d54074b751ade128e4f443
msgid "iamai.adapter package"
msgstr ""

#: ../../source/pages/api/iamai.adapter.rst:5 11de98a4319f4f7bbfc7cc4561ca8481
msgid "Subpackages"
msgstr ""

#: ../../source/pages/api/iamai.adapter.rst:20 ffa3467607f1477bb19dbeb9c2c8b1a2
msgid "Submodules"
msgstr ""

#: ../../source/pages/api/iamai.adapter.rst:28 22b18c69bf0742eb8b08c3944e144efc
msgid "Module contents"
msgstr ""

#~ msgid "iamai 协议适配器。"
#~ msgstr ""

#~ msgid "所有协议适配器都必须继承自 `Adapter` 基类。"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.Generic`\\ "
#~ "[:py:obj:`~iamai.typing.EventT`, "
#~ ":py:obj:`~iamai.typing.ConfigT`], :py:class:`~abc.ABC`"
#~ msgstr ""

#~ msgid "协议适配器基类。"
#~ msgstr ""

#~ msgid "适配器的名称。"
#~ msgstr ""

#~ msgid "type"
#~ msgstr ""

#~ msgid "str"
#~ msgstr ""

#~ msgid "当前的机器人对象。"
#~ msgstr ""

#~ msgid "Bot"
#~ msgstr ""

#~ msgid "适配器配置。"
#~ msgstr ""

#~ msgid "获取满足指定条件的的事件，协程会等待直到适配器接收到满足条件的事件、超过最大事件数或超时。"
#~ msgstr ""

#~ msgid ""
#~ "类似 `Bot` 类的 `get()` 方法，但是隐含了判断产生事件的适配器是本适配器。"
#~ " 等效于 `Bot` 类的 `get()` 方法传入 "
#~ "adapter_type 为本适配器类型。"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid ""
#~ "协程或者函数，函数会被自动包装为协程执行。 要求接受一个事件作为参数，返回布尔值。 当协程返回 "
#~ "`True` 时返回当前事件。 当为 `None` "
#~ "时相当于输入对于任何事件均返回真的协程，即返回适配器接收到的下一个事件。"
#~ msgstr ""

#~ msgid "当指定时，只接受指定类型的事件，先于 func 条件生效。默认为 `None`。"
#~ msgstr ""

#~ msgid "最大事件数。"
#~ msgstr ""

#~ msgid "超时时间。"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "返回满足 func 条件的事件。"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid "超过最大事件数或超时。"
#~ msgstr ""

#~ msgid "适配器运行方法，适配器开发者必须实现该方法。"
#~ msgstr ""

#~ msgid "适配器运行过程中保持保持运行，当此方法结束后， AliceBot 不会自动重新启动适配器。"
#~ msgstr ""

#~ msgid "附带有异常处理地安全运行适配器。"
#~ msgstr ""

#~ msgid "在适配器结束运行时运行的方法，用于安全地关闭适配器。"
#~ msgstr ""

#~ msgid "AliceBot 在接收到系统的结束信号后依次运行并等待所有适配器的 `shutdown()` 方法。 当强制退出时此方法可能未被执行。"
#~ msgstr ""

#~ msgid "在适配器开始运行前运行的方法，用于初始化适配器。"
#~ msgstr ""

#~ msgid "AliceBot 依次运行并等待所有适配器的 `startup()` 方法，待运行完毕后再创建 `run()` 任务。"
#~ msgstr ""


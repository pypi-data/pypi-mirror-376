name: PR Checks

on:
  pull_request:
    branches: [ master, main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/**'

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python 3.11
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync

    - name: Check code formatting with Black
      run: |
        echo "üé® Checking code formatting..."
        uv run black --check --diff src/ tests/
        
    - name: Lint with flake8
      run: |
        echo "üîç Running flake8 linting..."
        uv run flake8 src/ --statistics

  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync

    - name: Run tests with coverage
      run: |
        echo "üß™ Running test suite with coverage..."
        uv run pytest tests/ \
          --cov=src/promptbin \
          --cov-report=term-missing \
          --cov-report=xml \
          --cov-fail-under=18 \
          -v \
          --tb=short

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        flags: core
        name: core-coverage
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
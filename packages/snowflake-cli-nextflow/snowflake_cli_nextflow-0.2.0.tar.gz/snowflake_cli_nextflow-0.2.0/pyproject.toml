[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "snowflake-cli-nextflow"
version = "0.2.0"
description = "A Snowflake CLI plugin that enables running Nextflow workflows directly in Snowpark Container Services"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "Haowei Yu", email = "haowei.yu@snowflake.com"}
]
keywords = [
    "snowflake",
    "cli",
    "plugin",
    "nextflow",
    "workflow",
    "bioinformatics",
    "snowpark",
    "container-services"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: System :: Distributed Computing"
]
dependencies = [
    "snowflake-cli>=3.10.0",
    "pyyaml",
    "websockets",
    "docker",
    "groovy-parser",
]

[project.urls]
Homepage = "https://github.com/Snowflake-Labs/snowflake-cli-nextflow"
Repository = "https://github.com/Snowflake-Labs/snowflake-cli-nextflow"
Documentation = "https://github.com/Snowflake-Labs/snowflake-cli-nextflow"
Issues = "https://github.com/Snowflake-Labs/snowflake-cli-nextflow/issues"

[project.entry-points."snowflake.cli.plugin.command"]
nextflow = "snowflakecli.nextflow.plugin_spec"

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
fixable = ["ALL"]
select = ["E", "W", "F"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]

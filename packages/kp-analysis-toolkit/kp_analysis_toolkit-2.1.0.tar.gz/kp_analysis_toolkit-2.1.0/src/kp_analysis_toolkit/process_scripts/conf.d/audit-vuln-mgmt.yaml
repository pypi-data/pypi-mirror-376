---
# Vulnerability Management configurations
# Migrated from OS-specific files: audit-linux-system.yaml, audit-windows-system.yaml, audit-macos-system.yaml

global:
  topic: Vulnerability Management & Patch Status

# Linux Package Management and Updates
package_history_deb:
  regex: 'System_PackageInstalledSoftware-dpkg::/var/log/dpkg.log.*?::(?P<install_date>[0-9/-]{4,}).*status installed\s(?P<pkg_name>.*)'
  excel_sheet_name: 02-Update History (DPKG)
  only_matching: True
  field_list:                                                                    # Print the package name first (G2), followed by the date (G1)
    - 'pkg_name'
    - 'install_date'
  sys_filter:
    - attr: os_family
      comp: eq
      value: Linux
    - attr: distro_family
      comp: eq
      value: deb
  show_missing: True
  comment: |-
    For KPNIXAudit >= 0.6.19

    Unlike RPM-based distros (see comment in "installed_packages_rpm"), Debian systems keep a log of all package manager activity.  By default, this log is retained on-system for 12 months.  Reference: https://linuxhint.com/see-dpkg-apt-history/

    This list shows the time-and-date of each package installation action.  Since "updating packages" means "installing the new version", this also can be used to show patching history.  However, know that "installing new packages" and "patching existing packages" look the same in these logs, so it's not 100% fool-proof.

installed_hotfixes_windows:
  regex: '(System_InstalledHotfixes::(?P<hfDescription>.*Update)\s+(?P<hfKbNum>KB\d+)\s+(?P<hfDate>\d{1,4}[-/]\d{1,4}[-/]\d{1,4}))|(System_WindowsUpdateHistory::Installation\s+(?P<wuDate>\d{1,4}[-/]\d{1,4}[-/]\d{1,4})\s[\d:\s]+\s+(AM|PM)\s+(?P<wuDescription>.*(Cumulative|Security)\sUpdate.*)\((?P<wuKbNum>KB\d+))'
  excel_sheet_name: 02-Update History
  field_list:
    - hfDate
    - hfDescription
    - hfKbNum
    - wuDate
    - wuDescription
    - wuKbNum
  merge_fields:
    - source_columns: [hfDate, wuDate]
      dest_column: date
    - source_columns: [hfDescription, wuDescription]
      dest_column: description
    - source_columns: [hfKbNum, wuKbNum]
      dest_column: kbNum
  show_missing: True
  sys_filter:
    - attr: os_family
      comp: eq
      value: Windows
  comment: |-
    HINT: To force Excel to recognize the date format, you may need to search for "-" and replace it with "-".  This will force Excel to recognize the date format as a date instead of text.
    
    This list combines both Windows Update History with Hotfix History into one list.  Look at the 'Pending Updates' tab for a list of updates that still need to be installed.

    Two methods are used to collect this information because Windows tracks the hotfix installation differntly depending on how it was installed.

    The results are merged into a single list with the following fields:
      - date: The date the update was installed (YYYY-MM-DD)
      - description: A description of the update
      - kbNum: The KB number of the update

pending_updates_deb:
  regex: 'System_PackageManagerUpdates-apt::\s+(?P<pkg_name>((.*389-ds[-\w.]*)|(.*aide[-\w.]*)|(.*ansible[-\w.]*)|(.*apache2[-\w.]*)|(.*apacheds[-\w.]*)|(.*apparmor[-\w.]*)|(.*bind[-\w.]*)|(.*cassandra[-\w.]*)|(.*chef[-\w.]*)|(.*chrony[-\w.]*)|(.*clamav[-\w.]*)|(.*containerd[-\w.]*)|(.*dnsmasq[-\w.]*)|(.*docker[-\w.]*)|(.*dovecot[-\w.]*)|(.*elastic[-\w.]*)|(.*etcd[-\w.]*)|(.*exim4[-\w.]*)|(.*ftpd[-\w.]*)|(.*gdm[-\w.]*)|(.*java[-\w.]*)|(.*jenkins[-\w.]*)|(.*jetty[-\w.]*)|(.*jq[-\w.]*)|(.*kubectl[-\w.]*)|(.*kubernetes[-\w.]*)|(.*libc[-\w.]*)|(.*lighttpd[-\w.]*)|(.*linux-headers[-\w.]*)|(.*linux-image[-\w.]*)|(.*linux-modules[-\w.]*)|(.*maradns[-\w.]*)|(.*mysql[-\w.]*)|(.*nginx[-\w.]*)|(.*nodejs[-\w.]*)|(.*nsd[-\w.]*)|(.*ntpd[-\w.]*)|(.*openjdk[-\w.]*)|(.*openldap[-\w.]*)|(.*openssh[-\w.]*)|(.*openvpn[-\w.]*)|(.*postfix[-\w.]*)|(.*postgres[-\w.]*)|(.*puppet[-\w.]*)|(.*qmail[-\w.]*)|(.*samba[-\w.]*)|(.*selinux[-\w.]*)|(.*sendmail[-\w.]*)|(.*snapd[-\w.]*)|(.*snort[-\w.]*)|(.*squid[-\w.]*)|(.*sssd[-\w.]*)|(.*timesyncd[-\w.]*)|(.*tomcat[-\w.]*)|(.*tripwire[-\w.]*)|(.*xserver[-\w.]*)|(.*yadifa[-\w.]*)))\s+[(](?P<cur_version>.+)\s=>\s+(?P<pend_version>.+)[)]'
  excel_sheet_name: 02-Pending Updates (APT)
  only_matching: True
  field_list:
    - 'pkg_name'
    - 'cur_version'
    - 'pend_version'
  sys_filter:
    - attr: os_family
      comp: eq
      value: Linux
    - attr: distro_family
      comp: eq
      value: deb
  comment: |-
    For KPNIXAudit >= 0.6.19

    This list uses an Debian-based distro's operating system tools to query its package manager repos for pending updates.  It's exactly the same function as Windows Update.  It reflects the current status of outstanding updates as of the moment the script was run on the system.
    
    The list has been pared down to critical software and has filtered out packages that don't usually contribute to the overall security of the system.  You can search the Internet for these package names and versions to see if critical CVEs have been resolved.

pending_updates_rpm:
  regex: 'System_PackageManagerUpdates-dnf::(?!Last meta)(?!Available Upgrades)(?!Loaded plugins)(?!Loading mirror)(?!Updated Packages)(?!Get:)(?!Hit:)((?P<pkg_name>(.*389-ds[-\w.]*)|(.*aide[-\w.]*)|(.*ansible[-\w.]*)|(.*apache2[-\w.]*)|(.*apacheds[-\w.]*)|(.*apparmor[-\w.]*)|(.*bind[-\w.]*)|(.*cassandra[-\w.]*)|(.*chef[-\w.]*)|(.*chrony[-\w.]*)|(.*clamav[-\w.]*)|(.*containerd[-\w.]*)|(.*dnsmasq[-\w.]*)|(.*docker[-\w.]*)|(.*dovecot[-\w.]*)|(.*elastic[-\w.]*)|(.*etcd[-\w.]*)|(.*exim4[-\w.]*)|(.*ftpd[-\w.]*)|(.*gdm[-\w.]*)|(.*java[-\w.]*)|(.*jenkins[-\w.]*)|(.*jetty[-\w.]*)|(.*jq[-\w.]*)|(.*kernel.*)(.*kubectl[-\w.]*)|(.*kubernetes[-\w.]*)|(.*libc[-\w.]*)|(.*lighttpd[-\w.]*)|(.*linux-headers[-\w.]*)|(.*linux-image[-\w.]*)|(.*linux-modules[-\w.]*)|(.*maradns[-\w.]*)|(.*mysql[-\w.]*)|(.*nginx[-\w.]*)|(.*nodejs[-\w.]*)|(.*nsd[-\w.]*)|(.*ntpd[-\w.]*)|(.*openjdk[-\w.]*)|(.*openldap[-\w.]*)|(.*openssh[-\w.]*)|(.*openvpn[-\w.]*)|(.*postfix[-\w.]*)|(.*postgres[-\w.]*)|(.*puppet[-\w.]*)|(.*qmail[-\w.]*)|(.*samba[-\w.]*)|(.*selinux[-\w.]*)|(.*sendmail[-\w.]*)|(.*snapd[-\w.]*)|(.*snort[-\w.]*)|(.*squid[-\w.]*)|(.*sssd[-\w.]*)|(.*timesyncd[-\w.]*)|(.*tomcat[-\w.]*)|(.*tripwire[-\w.]*)|(.*xserver[-\w.]*)|(.*yadifa[-\w.]*))\s+(?P<pend_version>[\w\-.:]+))'
  excel_sheet_name: 02-Pending Updates (DNF)
  only_matching: True
  sys_filter:
    - attr: os_family
      comp: eq
      value: Linux
    - attr: distro_family
      comp: eq
      value: rpm
  full_scan: True
  field_list:
    - 'pkg_name'
    - 'pend_version'
  comment: |-
    For KPNIXAudit >= 0.6.19

    This list uses an RPM-based distro's operating system tools to query its package manager repos for pending updates.  It's exactly the same function as Windows Update.  It reflects the current status of outstanding updates as of the moment the script was run on the system.
    
    The list has been pared down to critical software and has filtered out packages that don't usually contribute to the overall security of the system.  You can search the Internet for these package names and versions to see if critical CVEs have been resolved.

    The source column indicates whether the data came from "dnf" (preferred, modern tool for RPM-based distros) or "yum" (legacy tool).  Use the DNF data if it's there.

pending_updates_apple:
  regex: 'System_PendingUpdates-Apple::.+Title:\s(?P<title>.*?),\s+Version:\s(?P<version>[\d.]+?),.*Recommended:\s+(?P<recommended>.*?),'
  excel_sheet_name: 02-Pending Updates (Apple)
  only_matching: True
  field_list:
    - title
    - version
    - recommended
  show_missing: True
  sys_filter:
    - attr: os_family
      comp: eq
      value: Darwin
  comment: |-
    This list contains the available updates from Apple for the operation system and other Apple-provided software.

pending_updates_brew:
  regex: 'System_PendingUpdates-Brew-(?P<user>\w+)::(?P<title>\w.*?)\s+(?P<currentVersion>[\w\.-]+?)\s->\s(?P<pendingVersion>[\w\.-]+)'
  excel_sheet_name: 02-Pending Updates (Brew)
  only_matching: True
  field_list:
    - title
    - currentVersion
    - pendingVersion
  sys_filter:
    - attr: os_family
      comp: eq
      value: Darwin
  comment: |-
    Brew is a popular package management utility for MacOS systems to install 3rd-party software.  Specifically, it bypasses the Apple Store.  This list contains the available updates for Brew-installed software.

pending_updates_windows:
  regex: 'System_PendingWindowsUpdates::(?!Title)(?!--)\w+'
  excel_sheet_name: 02-Pending Updates
  full_scan: True
  show_missing: True
  sys_filter:
    - attr: os_family
      comp: eq
      value: Windows

windows_update_config:
  regex: '(System_WindowsUpdateConfig::\s*UseWUServer\s+:\s+(?P<useWUServer>\d+))|(System_WindowsUpdateConfig::\s*WUServer\s+:\s+(?P<wuServer>.*))|(System_WindowsUpdateConfig::\s*ElevateNonAdmins\s+:\s+(?P<elevateNonAdmins>\d+))|(System_WindowsUpdateConfig::\s*DisableWindowsUpdateAccess\s+:\s+(?P<disableWUAccess>\d+))|(System_WindowsUpdateConfig::\s*NoAutoUpdate\s+:\s+(?P<noAutoUpdate>\s*\d+))|(System_WindowsUpdateConfig::\s*AUOptions\s+:\s+(?P<auOptions>\d+))'
  excel_sheet_name: 02-Update Config
  field_list:
    - useWUServer
    - wuServer
    - elevateNonAdmins
    - disableWUAccess
    - noAutoUpdate
    - auOptions
  multiline: True
  only_matching: True
  show_missing: True
  sys_filter:
    - attr: os_family
      comp: eq
      value: Windows
  comment: |-
    Interpreting Windows Update settings from: http://techgenix.com/Registry-Keys-Tweaking-Windows-Update-Part1/.
      - WUServer will provide the update source if using WSUS.  If not set, WSUS is not being used to receive updates.
      - ElevateNonAdmins allows non-admin users to approve/reject installing updates.  The default is "enabled"
      - DisableWindowsUpdateAccess prevents end-users from interacting with the Windows Update control panel (http://support.microsoft.com/kb/326686)
      - AUOptions means the following:
        2 - Agent notifies user prior to downloading updates
        3 - Automatic download with user notification prior to install
        4 - Automatic download and install according to schedule (look for ScheduledInstallDay and ScheduledInstallTime keys)
        5 - Automatic updates are required with some user configurability
      - NoAutoUpdate=1 disables automatic updates altogether
      - ScheduledInstallDay and ScheduledInstallTime only have relevance when AUOptions = 4.
      - ScheduledInstallDay: 1 = Sunday, 7 = Saturday, 0 = Any day
      - ScheduledInstallTime: 1 to 24 to indicate the hour in which updates should be installed
    If these following registry paths are not found, then system updates are managed through another method (e.g. MDM)


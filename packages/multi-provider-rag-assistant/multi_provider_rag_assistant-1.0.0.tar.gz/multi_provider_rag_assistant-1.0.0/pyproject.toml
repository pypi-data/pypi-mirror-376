[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-provider-rag-assistant"
version = "1.0.0"
description = "A hybrid LangChain RAG assistant supporting OpenAI, GROQ, and HuggingFace providers"
readme = "README.md"
authors = [{name = "Enes Ekinci", email = "enes.ekinci.dev@gmail.com"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "faiss-cpu>=1.7.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "langchain-core>=0.1.0", 
    "langchain-groq>=0.1.0",
    "langchain-huggingface>=0.0.1",
    "langchain-openai>=0.0.7",
    "langchain-text-splitters>=0.0.1",
    "numpy>=1.24.0",
    "python-dotenv>=0.19.0",
    "rich>=13.0.0",
    "sentence-transformers>=2.2.0",
    "tiktoken>=0.5.0",
    "torch>=2.0.0",
    "transformers>=4.30.0"
]

[project.scripts]
multi-provider-rag = "rag_assistant.qa:main"
multi-provider-rag-ingest = "rag_assistant.ingest:main" 
multi-provider-rag-clear = "rag_assistant.clear_vectorstore:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["rag_assistant*"]

[tool.setuptools.package-data]
rag_assistant = ["docs/*.txt"]
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
        
    - name: Run Black (code formatting)
      run: black --check --diff src/ test/
      
    - name: Run isort (import sorting)
      run: isort --check-only --diff src/ test/
      
    - name: Run flake8 (linting)
      run: flake8 src/ test/

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']
        
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libhdf5-dev
        
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install hdf5
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
        
    - name: Run tests
      run: |
        pytest test/ --cov=src/fadvi --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install Pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[docs]
        
    - name: Build documentation
      run: |
        cd docs
        make clean
        make html
        
    - name: Check for broken links
      run: |
        cd docs
        make linkcheck
      continue-on-error: true
      
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/html/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install safety
      run: pip install safety
      
    - name: Run safety check
      run: safety check --json
      continue-on-error: true

  package:
    name: Package Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: twine check dist/*
      
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package
        path: dist/

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
        
    - name: Run integration tests
      run: |
        # Add integration test commands here if you have them
        echo "Running integration tests..."
        pytest test/ -m "not slow" --tb=short

{
  "$id": "/components/lineage/1.0.0/lineage.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$comment": "This schema includes a portion of the [OpenLineage v2.0.2 schema](https://openlineage.io/spec/2-0-2/OpenLineage.json), Copyright 2018-2024 contributors to the OpenLineage project, licenced under the Apache 2.0 licence. This includes the component schemas for RunEvent, Run, Job, Dataset, InputDataset, and OutputDataset. Modifications have been made to the original schemas, including flattening referenced schemas where possible, and removing Facet schemas.",
  "description": "Events describing segments of the input lineage graph of this object",
  "type": "object",
  "properties": {
    "self_link": {
      "type": "string",
      "description": "Self link pointing to where this Geoscience Object is referenced within the events array",
      "format": "json-pointer",
      "example": "/events/0/outputs/0"
    },
    "events": {
      "type": "array",
      "description": "List of zero or more OpenLineage run events",
      "items": {
        "$ref": "#/$defs/RunEvent"
      }
    }
  },
  "required": [
    "events"
  ],
  "$defs": {
    "RunEvent": {
      "type": "object",
      "properties": {
        "eventTime": {
          "description": "the time the event occurred at",
          "type": "string",
          "format": "date-time"
        },
        "producer": {
          "description": "URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",
          "type": "string",
          "format": "uri",
          "example": "https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"
        },
        "schemaURL": {
          "description": "URI identifying the corresponding version of the schema definition for this RunEvent",
          "type": "string",
          "format": "uri",
          "example": "https://openlineage.io/spec/2.0.2/OpenLineage.json"
        },
        "eventType": {
          "description": "the current transition of the run state. It is required to issue 1 START event and 1 of [ COMPLETE, ABORT, FAIL ] event per run. Additional events with OTHER eventType can be added to the same run. For example to send additional metadata after the run is complete",
          "type": "string",
          "enum": [
            "START",
            "RUNNING",
            "COMPLETE",
            "ABORT",
            "FAIL",
            "OTHER"
          ],
          "example": "START|RUNNING|COMPLETE|ABORT|FAIL|OTHER"
        },
        "run": {
          "$ref": "#/$defs/Run"
        },
        "job": {
          "$ref": "#/$defs/Job"
        },
        "inputs": {
          "description": "The set of **input** datasets.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/InputDataset"
          }
        },
        "outputs": {
          "description": "The set of **output** datasets.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/OutputDataset"
          }
        }
      },
      "required": [
        "run",
        "job",
        "eventTime",
        "producer",
        "schemaURL"
      ]
    },
    "Run": {
      "type": "object",
      "properties": {
        "runId": {
          "description": "The globally unique ID of the run associated with the job.",
          "type": "string",
          "format": "uuid"
        },
        "facets": {
          "description": "The run facets.",
          "type": "object",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          ]
        }
      },
      "required": [
        "runId"
      ]
    },
    "Job": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace containing that job",
          "type": "string",
          "example": "my-scheduler-namespace"
        },
        "name": {
          "description": "The unique name for that job within that namespace",
          "type": "string",
          "example": "myjob.mytask"
        },
        "facets": {
          "description": "The job facets.",
          "type": "object",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          ]
        }
      },
      "required": [
        "namespace",
        "name"
      ]
    },
    "InputDataset": {
      "description": "An input dataset",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/Dataset"
        },
        {
          "type": "object",
          "properties": {
            "inputFacets": {
              "description": "The input facets for this dataset.",
              "type": "object",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "OutputDataset": {
      "description": "An output dataset",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/Dataset"
        },
        {
          "type": "object",
          "properties": {
            "outputFacets": {
              "description": "The output facets for this dataset",
              "type": "object",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Dataset": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace containing that dataset",
          "type": "string",
          "example": "my-datasource-namespace"
        },
        "name": {
          "description": "The unique name for that dataset within that namespace",
          "type": "string",
          "example": "instance.schema.table"
        },
        "facets": {
          "description": "The facets for this dataset",
          "type": "object",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          ]
        }
      },
      "required": [
        "namespace",
        "name"
      ]
    }
  }
}

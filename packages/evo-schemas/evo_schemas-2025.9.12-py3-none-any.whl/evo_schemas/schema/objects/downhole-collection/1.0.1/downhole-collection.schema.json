{
  "$id": "/objects/downhole-collection/1.0.1/downhole-collection.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "A collection of downhole locations.",
  "type": "object",
  "allOf": [
    {
      "$ref": "/components/base-spatial-data-properties/1.0.1/base-spatial-data-properties.schema.json"
    },
    {
      "properties": {
        "schema": {
          "const": "/objects/downhole-collection/1.0.1/downhole-collection.schema.json"
        },
        "type": {
          "title": "Type",
          "description": "The type of the collection.",
          "const": "downhole"
        },
        "distance_unit": {
          "description": "Distance unit.",
          "$ref": "/elements/unit/1.0.1/categories/unit-length.schema.json"
        },
        "desurvey": {
          "title": "Desurvey",
          "description": "The desurvey algorithm.",
          "enum": [
            "minimum_curvature",
            "balanced_tangent",
            "trench"
          ],
          "type": "string"
        },
        "location": {
          "type": "object",
          "description": "The locations of the downholes in the collection.",
          "allOf": [
            {
              "$ref": "/components/locations/1.0.1/locations.schema.json"
            },
            {
              "$ref": "/components/attribute-list-property/1.0.1/attribute-list-property.schema.json"
            },
            {
              "properties": {
                "distances": {
                  "$ref": "/elements/float-array-3/1.0.1/float-array-3.schema.json",
                  "description": "The distances stored in columns final, target, current."
                },
                "holes": {
                  "description": "The data describing the holes.",
                  "$ref": "#/$defs/holes"
                },
                "hole_id": {
                  "description": "Hole IDs.",
                  "$ref": "/components/category-data/1.0.1/category-data.schema.json"
                },
                "path": {
                  "description": "The path taken by the downhole location. Columns: distance, azimuth, dip.",
                  "allOf": [
                    {
                      "$ref": "/elements/float-array-3/1.0.1/float-array-3.schema.json"
                    },
                    {
                      "$ref": "/components/attribute-list-property/1.0.1/attribute-list-property.schema.json"
                    }
                  ]
                }
              }
            }
          ],
          "required": [
            "distances",
            "holes",
            "hole_id",
            "path"
          ]
        },
        "collections": {
          "description": "The collections of data associated with the downhole collection.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/$defs/data_table"
              },
              {
                "$ref": "#/$defs/distance_table"
              },
              {
                "$ref": "#/$defs/interval_table"
              },
              {
                "$ref": "#/$defs/relative_planar_data_table"
              },
              {
                "$ref": "#/$defs/relative_lineation_data_table"
              }
            ]
          }
        }
      }
    }
  ],
  "required": [
    "schema",
    "type",
    "location",
    "collections"
  ],
  "unevaluatedProperties": false,
  "$defs": {
    "data_table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "/components/data-table/1.0.1/data-table.schema.json"
        },
        {
          "properties": {
            "holes": {
              "description": "The data describing the holes.",
              "$ref": "#/$defs/holes"
            }
          },
          "required": [
            "holes"
          ]
        }
      ]
    },
    "distance_table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "/components/distance-table/1.0.1/distance-table.schema.json"
        },
        {
          "properties": {
            "holes": {
              "description": "The data describing the holes.",
              "$ref": "#/$defs/holes"
            }
          },
          "required": [
            "holes"
          ]
        }
      ]
    },
    "interval_table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "/components/interval-table/1.0.1/interval-table.schema.json"
        },
        {
          "properties": {
            "holes": {
              "description": "The data describing the holes.",
              "$ref": "#/$defs/holes"
            }
          },
          "required": [
            "holes"
          ]
        }
      ]
    },
    "relative_planar_data_table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "/components/relative-planar-data-table/1.0.1/relative-planar-data-table.schema.json"
        },
        {
          "properties": {
            "holes": {
              "description": "The data describing the holes.",
              "$ref": "#/$defs/holes"
            }
          },
          "required": [
            "holes"
          ]
        }
      ]
    },
    "relative_lineation_data_table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "/components/relative-lineation-data-table/1.0.1/relative-lineation-data-table.schema.json"
        },
        {
          "properties": {
            "holes": {
              "description": "The data describing the holes.",
              "$ref": "#/$defs/holes"
            }
          },
          "required": [
            "holes"
          ]
        }
      ]
    },
    "holes": {
      "type": "object",
      "description": "The indices, counts, and offsets into locations of each hole. Columns: hole_index, offset, count.",
      "properties": {
        "data": {
          "description": "The binary data for the holes. Columns: hole_index, offset, count.",
          "$ref": "/elements/binary-blob/1.0.1/binary-blob.schema.json"
        },
        "length": {
          "type": "integer",
          "description": "length of array",
          "minimum": 0,
          "default": 0
        },
        "width": {
          "description": "number of columns",
          "const": 3
        },
        "data_type": {
          "type": "string",
          "description": "Data type for the columns. 1st column is of type int32, 2nd is uint64 and 3rd is uint64.",
          "const": "int32/uint64/uint64"
        }
      },
      "required": [
        "data",
        "length",
        "width",
        "data_type"
      ]
    }
  }
}

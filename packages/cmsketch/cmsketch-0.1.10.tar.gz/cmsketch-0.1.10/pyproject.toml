[build-system]
requires = ["scikit-build-core>=0.10", "pybind11", "cmake>=3.15"]
build-backend = "scikit_build_core.build"

[project]
name = "cmsketch"
version = "0.1.10"
description = "High-performance Count-Min Sketch implementation with C++ and Python versions"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "isaac-fei", email = "isaac.omega.fei@gmail.com" }]
maintainers = [{ name = "isaac-fei", email = "isaac.omega.fei@gmail.com" }]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
keywords = ["count-min-sketch", "probabilistic", "data-structure", "streaming"]

[project.urls]
Homepage = "https://github.com/isaac-fate/count-min-sketch"
Repository = "https://github.com/isaac-fate/count-min-sketch"
Documentation = "https://github.com/isaac-fate/count-min-sketch#readme"
Issues = "https://github.com/isaac-fate/count-min-sketch/issues"

[project.optional-dependencies]
dev = ["pytest>=8.0.0", "pytest-benchmark>=4.0.0", "build>=1.0.0"]

[tool.scikit-build]
build-dir = "build/{wheel_tag}"
wheel.exclude = ["lib/**", "include/**"]

[tool.scikit-build.cmake]
args = [
    "-DCMAKE_BUILD_TYPE=Release",
    "-DCMAKE_CXX_STANDARD=17",
    "-DCMAKE_CXX_STANDARD_REQUIRED=ON",
    "-DCMAKE_CXX_EXTENSIONS=OFF",
]

[tool.cibuildwheel]
build = "cp311-* cp312-*"
skip = "*-win32 *-manylinux_i686 *-musllinux*"
test-command = "python -m pytest {project}/pytests -v"
test-requires = "pytest"
manylinux-x86_64-image = "manylinux_2_28"


[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15" }

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"

[tool.pytest.ini_options]
testpaths = ["pytests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short"]

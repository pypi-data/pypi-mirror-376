# reconcile-views-job.yaml (AWS version)
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ psp_k8s_name }}-reconcile-views-job
  namespace: {{ namespace_name }}
spec:
  template:
    spec:
      serviceAccountName: {{ airflow_k8s_name }}-service-account
      containers:
      - name: reconcile-views-handler
        image: {{ datasurface_docker_image }}
        command: ["/bin/bash"]
        args:
        - -c
        - |
          echo "üîÑ Starting DataSurface Reconcile Views Handler (AWS)"
          
          # Install AWS CLI and boto3 if not present
          pip install boto3 > /dev/null 2>&1 || echo "boto3 already installed"
          
          # Set environment variables from AWS Secrets Manager using boto3
          echo "üîê Setting credentials from AWS Secrets Manager..."
          export {{ merge_db_credential_secret_name }}_USER=$(python3 -c "import boto3,json; print(json.loads(boto3.client('secretsmanager',region_name='{{ aws_region | default("us-east-1") }}').get_secret_value(SecretId='datasurface/merge/credentials')['SecretString']).get('postgres_USER',''))")
          export {{ merge_db_credential_secret_name }}_PASSWORD=$(python3 -c "import boto3,json; print(json.loads(boto3.client('secretsmanager',region_name='{{ aws_region | default("us-east-1") }}').get_secret_value(SecretId='datasurface/merge/credentials')['SecretString']).get('postgres_PASSWORD',''))")
          export git_TOKEN=$(python3 -c "import boto3,json; print(json.loads(boto3.client('secretsmanager',region_name='{{ aws_region | default("us-east-1") }}').get_secret_value(SecretId='datasurface/git/credentials')['SecretString']).get('token',''))")
          echo "‚úÖ Credentials set from AWS Secrets Manager"
          
          # Run reconcile views job using shared git cache
          echo "üîß Running reconcile views job with shared cache..."
          python -m datasurface.platforms.yellow.reconcile_workspace_views \
            --psp {{ psp_name }} \
            --git-repo-path {{ git_cache_local_path }} \
            --git-repo-owner {{ git_repo_owner }} \
            --git-repo-name {{ git_repo_repo_name }} \
            --git-repo-branch {{ git_repo_branch }} \
            --git-platform-repo-credential-name {{ git_credential_name }} \
            {% if git_cache_enabled %}
            --use-git-cache \
            {% endif %}
            --max-cache-age-minutes {{ git_cache_max_age_minutes }}
          
          echo "‚úÖ Reconcile views job complete!"
        env:
        - name: PYTHONPATH
          value: "/app/src"
        - name: AWS_REGION
          value: "{{ aws_region | default('us-east-1') }}"
        {% if git_cache_enabled %}
        volumeMounts:
        - name: git-model-cache
          mountPath: {{ git_cache_local_path }}
      volumes:
      - name: git-model-cache
        persistentVolumeClaim:
          claimName: {{ git_clone_cache_pvc }}
      {% endif %}
      restartPolicy: Never
  backoffLimit: 3

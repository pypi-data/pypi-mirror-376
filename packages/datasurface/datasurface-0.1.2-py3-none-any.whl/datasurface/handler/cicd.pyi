import abc
from abc import ABC, abstractmethod
from datasurface.md import Ecosystem as Ecosystem, InternalLintableObject as InternalLintableObject, Repository as Repository, ValidationTree as ValidationTree
from datasurface.md.model_loader import loadEcosystemFromEcoModule as loadEcosystemFromEcoModule

class RepositorywithCICD(ABC, metaclass=abc.ABCMeta):
    name: str
    def __init__(self, name: str) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    @abstractmethod
    def createRepositoryForPullRequestRepo(self) -> Repository: ...
    def verifyPullRequest(self, mainFolder: str, prFolder: str) -> ValidationTree: ...

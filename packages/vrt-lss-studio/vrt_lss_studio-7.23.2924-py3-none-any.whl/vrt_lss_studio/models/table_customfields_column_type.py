# coding: utf-8

"""
    VRt.Studio [ST]

    Veeroute Studio API.  # Description  Server part of the Veeroute Studio.  ## Reserved attributes  These attribute keys are reserved for specific business logic:  | Attribute key        | Parent entity | Purpose                                                                                                                                                                                      | |:---------------------|:--------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | `ICON_NAME`          | location      | The attribute value is written to the `web_location_geopoint.icon_name` field                                                                                                                | | `FORCED_GEOPROVIDER` | geo_settings  | The attribute value determines the geodata provider for rendering flights on the map, which will be used instead of the one specified in the `plan_settings.geo_settings.geo_provider` field |  ## Entity relationship diagram  ![erd](../uml/studio.svg) 

    The version of the OpenAPI document: 7.23.2924
    Contact: servicedesk@veeroute.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TableCustomfieldsColumnType(str, Enum):
    """
    The name of the additional column in the table. Used for filters of the `CUSTOMFIELDS` type. 
    """

    """
    allowed enum values
    """
    DATETIME_1 = 'DATETIME_1'
    DATETIME_2 = 'DATETIME_2'
    DATETIME_3 = 'DATETIME_3'
    DATETIME_4 = 'DATETIME_4'
    DATETIME_5 = 'DATETIME_5'
    INT_1 = 'INT_1'
    INT_2 = 'INT_2'
    INT_3 = 'INT_3'
    INT_4 = 'INT_4'
    INT_5 = 'INT_5'
    FLOAT_1 = 'FLOAT_1'
    FLOAT_2 = 'FLOAT_2'
    FLOAT_3 = 'FLOAT_3'
    FLOAT_4 = 'FLOAT_4'
    FLOAT_5 = 'FLOAT_5'
    DURATION_1 = 'DURATION_1'
    DURATION_2 = 'DURATION_2'
    DURATION_3 = 'DURATION_3'
    DURATION_4 = 'DURATION_4'
    DURATION_5 = 'DURATION_5'
    BOOL_1 = 'BOOL_1'
    BOOL_2 = 'BOOL_2'
    BOOL_3 = 'BOOL_3'
    BOOL_4 = 'BOOL_4'
    BOOL_5 = 'BOOL_5'
    STRING_1 = 'STRING_1'
    STRING_2 = 'STRING_2'
    STRING_3 = 'STRING_3'
    STRING_4 = 'STRING_4'
    STRING_5 = 'STRING_5'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TableCustomfieldsColumnType from a JSON string"""
        return cls(json.loads(json_str))



# coding: utf-8

"""
    VRt.Studio [ST]

    Veeroute Studio API.  # Description  Server part of the Veeroute Studio.  ## Reserved attributes  These attribute keys are reserved for specific business logic:  | Attribute key        | Parent entity | Purpose                                                                                                                                                                                      | |:---------------------|:--------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | `ICON_NAME`          | location      | The attribute value is written to the `web_location_geopoint.icon_name` field                                                                                                                | | `FORCED_GEOPROVIDER` | geo_settings  | The attribute value determines the geodata provider for rendering flights on the map, which will be used instead of the one specified in the `plan_settings.geo_settings.geo_provider` field |  ## Entity relationship diagram  ![erd](../uml/studio.svg) 

    The version of the OpenAPI document: 7.23.2924
    Contact: servicedesk@veeroute.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class EntityType(str, Enum):
    """
    Entity type.
    """

    """
    allowed enum values
    """
    TASK = 'TASK'
    SETTINGS = 'SETTINGS'
    ORDER = 'ORDER'
    ORDER_LINK = 'ORDER_LINK'
    PERFORMER = 'PERFORMER'
    PERFORMER_LINK = 'PERFORMER_LINK'
    TRANSPORT = 'TRANSPORT'
    TRANSPORT_LINK = 'TRANSPORT_LINK'
    HARDLINK = 'HARDLINK'
    HARDLINK_LINK = 'HARDLINK_LINK'
    LOCATION = 'LOCATION'
    LOCATION_LINK = 'LOCATION_LINK'
    BOX = 'BOX'
    BOX_LINK = 'BOX_LINK'
    TRIP = 'TRIP'
    TRIP_LINK = 'TRIP_LINK'
    CARGO = 'CARGO'
    CARGO_LINK = 'CARGO_LINK'
    DEMAND = 'DEMAND'
    DEMAND_LINK = 'DEMAND_LINK'
    EVENT = 'EVENT'
    EVENT_LINK = 'EVENT_LINK'
    PERFORMER_SHIFT = 'PERFORMER_SHIFT'
    PERFORMER_SHIFT_LINK = 'PERFORMER_SHIFT_LINK'
    TRANSPORT_SHIFT = 'TRANSPORT_SHIFT'
    TRANSPORT_SHIFT_LINK = 'TRANSPORT_SHIFT_LINK'
    FACT = 'FACT'
    FACT_LINK = 'FACT_LINK'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of EntityType from a JSON string"""
        return cls(json.loads(json_str))



[build-system]
# Modern build backend (no setup.py needed)
requires = ["setuptools>=69", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "ProcessModel"
dynamic = ["version"]                 # version comes from setuptools-scm
description = "A framework built on PyTorch for eco-hydrological modeling"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Long Jiang", email = "jlon@uw.edu" }]
keywords = ["hydrology", "ecohydro", "modeling"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

# Keep runtime deps minimal
dependencies = [
  "numpy>=1.23,<2.0",        
  "pandas>=2.0",
  "torch>=2.2",        
  "torch-geometric>=2.5",
  "matplotlib>=3.7",
  "networkx>=3.0",
  "pysheds>=0.3",
  "pyproj>=3.6",
  "tensordict>=0.2",
]


[tool.setuptools]
# Single-module project under src/
package-dir = {"" = "src"}
py-modules = ["processmodel"]

[tool.setuptools_scm]
# How versions are rendered from Git tags
version_scheme = "post-release"      # 1.2.0 -> 1.2.0.postN on commits after tag
#local_scheme = "node-and-date"       # +g<sha>.YYYYMMDD for local builds
local_scheme = "no-local-version"

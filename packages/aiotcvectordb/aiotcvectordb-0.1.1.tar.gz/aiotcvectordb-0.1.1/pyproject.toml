[project]
name = "aiotcvectordb"
version = "0.1.1"
description = "Tencent VectorDB Python Async SDK"
authors = [{ name = "Alvie Zhang" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
dependencies = [
  "tcvdb-text",
  "numpy",
  "aiohttp",
  "tcvectordb",
]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Topic :: Database",
  "License :: OSI Approved :: MIT License",
]

keywords = ["vector", "database", "async", "aiohttp", "tencent", "vectordb"]

[project.urls]
Homepage = "https://github.com/alviezhang/aiotcvectordb"
Repository = "https://github.com/alviezhang/aiotcvectordb"
Issues = "https://github.com/alviezhang/aiotcvectordb/issues"

[dependency-groups]
dev = [
    "ipython>=5.10.0",
    "pytest>=4.6.11",
    "pytest-recording>=0.13.1",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.0.17",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["vendor", ".venv", ".git", "node_modules"]
asyncio_mode = "auto"
markers = [
  "novcr: Disable VCR.py for this test and use live network",
]

# Build backend for PyPI wheels/sdists
[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["aiotcvectordb"]

[tool.hatch.build.targets.sdist]
include = [
  "aiotcvectordb",
  "README.md",
  "README_zh.md",
  "CHANGELOG.md",
  "LICENSE",
]

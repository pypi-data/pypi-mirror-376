import subprocess
import json
from pathlib import Path


def scan_file(path: Path):
    try:
        if path.name not in ["requirements.txt", "pyproject.toml", "poetry.lock", "Pipfile.lock"]:
            return []

        result = subprocess.run(
            ["pip-audit", "-r", str(path), "--format", "json"],
            capture_output=True,
            text=True,
        )

        raw_stdout = result.stdout
        raw_stderr = result.stderr.strip()

        if result.returncode not in (0, 1):  # 1 = vulnerabilities found
            return [{
                "type": "Execution Error",
                "message": f"pip-audit failed (exit {result.returncode}). stderr:\n{raw_stderr or raw_stdout}",
                "file": str(path),
                "severity": "High",
                "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
                "explanation": "The dependency scan could not be completed due to a tool execution error.",
                "remediation": "Verify pip-audit is installed correctly and re-run the scan."
            }]

        # Find the start of the JSON output
        json_start_index = raw_stdout.find('{')
        if json_start_index == -1:
            json_start_index = raw_stdout.find('[')

        if json_start_index == -1:
            return [{
                "type": "Parse Error",
                "message": f"No JSON found in pip-audit output. Raw stdout:\n{raw_stdout[:300]}...\nRaw stderr:\n{raw_stderr[:300]}...",
                "file": str(path),
                "severity": "High",
                "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
                "explanation": "The pip-audit output could not be parsed, meaning dependencies may not have been checked for vulnerabilities.",
                "remediation": "Ensure pip-audit is up to date and re-run the scan."
            }]

        json_string = raw_stdout[json_start_index:]
        audit_data = json.loads(json_string)
        issues = []

        for dep in audit_data.get("dependencies", []):
            name = dep.get("name")
            version = dep.get("version")

            for vuln in dep.get("vulns", []):
                vuln_id = vuln.get("id") or "Unknown"
                vuln_desc = vuln.get("description") or f"Vulnerability {vuln_id}"
                severity = vuln.get("severity", "High")

                issues.append({
                    "type": "Vulnerable Dependency",
                    "message": f"{name} {version} - {vuln_desc}",
                    "file": str(path),
                    "severity": severity,
                    "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
                    "explanation": f"The dependency '{name} {version}' is affected by a known vulnerability ({vuln_id}). "
                                   f"Attackers may exploit this weakness if the vulnerable component is used in the application.",
                    "remediation": vuln.get("fix_version") and
                                   f"Upgrade '{name}' to version {vuln['fix_version']} or later." or
                                   f"Check the vulnerability advisory for safe versions of '{name}'."
                })
        return issues

    except FileNotFoundError:
        return [{
            "type": "Execution Error",
            "message": "pip-audit not installed or not in PATH.",
            "file": str(path),
            "severity": "High",
            "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
            "explanation": "The pip-audit tool is required to check dependencies for vulnerabilities.",
            "remediation": "Install pip-audit with `pip install pip-audit` and rerun the scan."
        }]
    except json.JSONDecodeError as e:
        return [{
            "type": "Parse Error",
            "message": f"Failed to parse pip-audit JSON output: {e}.",
            "file": str(path),
            "severity": "High",
            "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
            "explanation": "The pip-audit tool returned malformed JSON, so results could not be analyzed.",
            "remediation": "Ensure you are using the latest version of pip-audit and try again."
        }]
    except Exception as e:
        return [{
            "type": "Scanning Error",
            "message": str(e),
            "file": str(path),
            "severity": "High",
            "owasp_category": "A06:2021 – Vulnerable and Outdated Components",
            "explanation": "An unexpected error occurred during dependency vulnerability scanning.",
            "remediation": "Check compatibility of pip-audit with your environment and retry."
        }]

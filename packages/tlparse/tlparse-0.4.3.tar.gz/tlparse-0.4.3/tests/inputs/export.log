V0211 16:42:20.419000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/test/export/test_draft_export.py", 0]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/testing/_internal/common_utils.py", 1]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/home/angelayi/.conda/envs/pytorch-3.10/lib/python3.10/unittest/main.py", 2]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/home/angelayi/.conda/envs/pytorch-3.10/lib/python3.10/unittest/runner.py", 3]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/home/angelayi/.conda/envs/pytorch-3.10/lib/python3.10/unittest/suite.py", 4]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/home/angelayi/.conda/envs/pytorch-3.10/lib/python3.10/unittest/case.py", 5]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/export/_draft_export.py", 6]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/export/_trace.py", 7]}
V0211 16:42:20.420000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/export/exported_program.py", 8]}
V0211 16:42:20.421000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_logging/_internal.py", 9]}
V0211 16:42:20.437000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_export/non_strict_utils.py", 10]}
V0211 16:42:20.437000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/utils/_pytree.py", 11]}
V0211 16:42:20.437000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_subclasses/fake_tensor.py", 12]}
V0211 16:42:20.437000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_subclasses/meta_utils.py", 13]}
V0211 16:42:20.469000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/experimental/recording.py", 14]}
V0211 16:42:20.469000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/experimental/symbolic_shapes.py", 15]}
V0211 16:42:20.471000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/experimental/sym_node.py", 16]}
V0211 16:42:20.539000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/functional_utils.py", 17]}
V0211 16:42:20.539000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_subclasses/functional_tensor.py", 18]}
V0211 16:42:20.539000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/aot_autograd.py", 19]}
V0211 16:42:20.540000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/collect_metadata_analysis.py", 20]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/nn/modules/module.py", 21]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/utils.py", 22]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/traced_function_transforms.py", 23]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/export/_safeguard.py", 24]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/utils/_stats.py", 25]}
V0211 16:42:20.545000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_subclasses/fake_impls.py", 26]}
V0211 16:42:20.546000 2313073 torch/fx/experimental/symbolic_shapes.py:4244] {"create_unbacked_symbol": {"symbol": "u0", "node_id": 140536506030432, "vr": "[-int_oo, int_oo]", "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 269, "name": "forward", "filename": 0, "loc": "a = x.item()"}], "stack": [{"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 269, "name": "forward", "filename": 0, "loc": "a = x.item()"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 160, "name": "dispatch_to_op_implementations_dict", "filename": 26, "loc": "return op_implementations_dict[func](fake_mode, func, *args, **kwargs)"}, {"line": 422, "name": "local_scalar_dense", "filename": 26, "loc": "r = fake_mode.shape_env.create_unbacked_symint()"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 269, "name": "forward", "filename": 0, "loc": "a = x.item()"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1269, "name": "__torch_dispatch__", "filename": 12, "loc": "return self.dispatch(func, types, args, kwargs)"}, {"line": 1812, "name": "dispatch", "filename": 12, "loc": "return self._dispatch_impl(func, types, args, kwargs)"}, {"line": 2353, "name": "_dispatch_impl", "filename": 12, "loc": "op_impl_out = op_impl(self, func, *args, **kwargs)"}, {"line": 160, "name": "dispatch_to_op_implementations_dict", "filename": 26, "loc": "return op_implementations_dict[func](fake_mode, func, *args, **kwargs)"}, {"line": 422, "name": "local_scalar_dense", "filename": 26, "loc": "r = fake_mode.shape_env.create_unbacked_symint()"}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 4299, "name": "create_unbacked_symint", "filename": 15, "loc": "self._log_create_unbacked_symbol("}, {"line": 4244, "name": "_log_create_unbacked_symbol", "filename": 15, "loc": "trace_structured("}]}
V0211 16:42:20.549000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/__init__.py", 27]}
V0211 16:42:20.552000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_prims_common/wrappers.py", 28]}
V0211 16:42:20.552000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_refs/__init__.py", 29]}
V0211 16:42:20.552000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_compile.py", 30]}
V0211 16:42:20.552000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_dynamo/eval_frame.py", 31]}
V0211 16:42:20.555000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_prims_common/__init__.py", 32]}
V0211 16:42:20.555000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_ops.py", 33]}
V0211 16:42:20.555000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_prims/__init__.py", 34]}
V0211 16:42:20.580000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "(((-u0)//3)) + 5 >= 0", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 276, "name": "forward", "filename": 0, "loc": "torch._check_is_size(a)"}, {"line": 1673, "name": "_check_is_size", "filename": 27, "loc": "_check(i >= 0, message)"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {}, "frame_locals": {"loc": "torch._check_is_size(a)", "locals": {"a": "(((-u0)//3)) + 5"}, "symbols": {}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 276, "name": "forward", "filename": 0, "loc": "torch._check_is_size(a)"}, {"line": 1673, "name": "_check_is_size", "filename": 27, "loc": "_check(i >= 0, message)"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.589000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "(((-u0)//3)) + 5 < 2*s0", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 277, "name": "forward", "filename": 0, "loc": "torch._check(a < z.shape[0])"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {"s0": "L['args'][0][1].size()[0]"}, "frame_locals": {"loc": "torch._check(a < z.shape[0])", "locals": {"a": "(((-u0)//3)) + 5", "z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 277, "name": "forward", "filename": 0, "loc": "torch._check(a < z.shape[0])"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.596000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_decomp/decompositions.py", 35]}
V0211 16:42:20.547000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "neg", "result": "-u0", "result_id": 140536506789616, "arguments": ["u0"], "argument_ids": [140536506030432], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 270, "name": "forward", "filename": 0, "loc": "a = -a"}], "stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 270, "name": "forward", "filename": 0, "loc": "a = -a"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 270, "name": "forward", "filename": 0, "loc": "a = -a"}, {"line": 1716, "name": "unary_magic_impl", "filename": 16, "loc": "return wrap_node(getattr(self.node, method_attr)())"}, {"line": 392, "name": "neg", "filename": 16, "loc": "return self._neg()  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.549000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "int_floordiv", "result": "((-u0)//3)", "result_id": 140536506029184, "arguments": ["-u0", "3"], "argument_ids": [140536506789616], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 271, "name": "forward", "filename": 0, "loc": "a = a // 3"}], "stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 271, "name": "forward", "filename": 0, "loc": "a = a // 3"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 271, "name": "forward", "filename": 0, "loc": "a = a // 3"}, {"line": 449, "name": "__floordiv__", "filename": 27, "loc": "return self.__int_floordiv__(other)"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 347, "name": "int_floordiv", "filename": 16, "loc": "return self._int_floordiv(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.550000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "add", "result": "(((-u0)//3)) + 5", "result_id": 140536506792256, "arguments": ["((-u0)//3)", "5"], "argument_ids": [140536506029184], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 272, "name": "forward", "filename": 0, "loc": "a = a + 5"}], "stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 272, "name": "forward", "filename": 0, "loc": "a = a + 5"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 272, "name": "forward", "filename": 0, "loc": "a = a + 5"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 317, "name": "add", "filename": 16, "loc": "return self._add(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.603000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "sub", "result": "(((-u0)//3)) + 5", "result_id": 140538758785072, "arguments": ["(((-u0)//3)) + 5", "0"], "argument_ids": [140536506792256], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 750, "name": "slice_forward", "filename": 35, "loc": "len = end_val - start_val"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1269, "name": "__torch_dispatch__", "filename": 12, "loc": "return self.dispatch(func, types, args, kwargs)"}, {"line": 1812, "name": "dispatch", "filename": 12, "loc": "return self._dispatch_impl(func, types, args, kwargs)"}, {"line": 2289, "name": "_dispatch_impl", "filename": 12, "loc": "decomposition_table[func](*args, **kwargs)"}, {"line": 750, "name": "slice_forward", "filename": 35, "loc": "len = end_val - start_val"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 320, "name": "sub", "filename": 16, "loc": "return self._sub(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.604000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "add", "result": "(((-u0)//3)) + 6", "result_id": 140538758784640, "arguments": ["(((-u0)//3)) + 5", "1"], "argument_ids": [140538758785072], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1269, "name": "__torch_dispatch__", "filename": 12, "loc": "return self.dispatch(func, types, args, kwargs)"}, {"line": 1812, "name": "dispatch", "filename": 12, "loc": "return self._dispatch_impl(func, types, args, kwargs)"}, {"line": 2289, "name": "_dispatch_impl", "filename": 12, "loc": "decomposition_table[func](*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 317, "name": "add", "filename": 16, "loc": "return self._add(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.604000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "sub", "result": "(((-u0)//3)) + 5", "result_id": 140538758784880, "arguments": ["(((-u0)//3)) + 6", "1"], "argument_ids": [140538758784640], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1269, "name": "__torch_dispatch__", "filename": 12, "loc": "return self.dispatch(func, types, args, kwargs)"}, {"line": 1812, "name": "dispatch", "filename": 12, "loc": "return self._dispatch_impl(func, types, args, kwargs)"}, {"line": 2289, "name": "_dispatch_impl", "filename": 12, "loc": "decomposition_table[func](*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 320, "name": "sub", "filename": 16, "loc": "return self._sub(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.605000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "int_floordiv", "result": "(((-u0)//3)) + 5", "result_id": 140538758774992, "arguments": ["(((-u0)//3)) + 5", "1"], "argument_ids": [140538758784880], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1269, "name": "__torch_dispatch__", "filename": 12, "loc": "return self.dispatch(func, types, args, kwargs)"}, {"line": 1812, "name": "dispatch", "filename": 12, "loc": "return self._dispatch_impl(func, types, args, kwargs)"}, {"line": 2289, "name": "_dispatch_impl", "filename": 12, "loc": "decomposition_table[func](*args, **kwargs)"}, {"line": 751, "name": "slice_forward", "filename": 35, "loc": "sizes[dim] = (len + step - 1) // step"}, {"line": 449, "name": "__floordiv__", "filename": 27, "loc": "return self.__int_floordiv__(other)"}, {"line": 1732, "name": "binary_magic_impl", "filename": 16, "loc": "ret = wrap_node(getattr(self.node, method_attr)(other_node))"}, {"line": 347, "name": "int_floordiv", "filename": 16, "loc": "return self._int_floordiv(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.608000 2313073 torch/_logging/_internal.py:1293] {"expression_created": {"method": "eq", "result": "Eq((((-u0)//3)) + 5, 0)", "result_id": 140538758781280, "arguments": ["(((-u0)//3)) + 5", "0"], "argument_ids": [140538758774992], "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}]}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 562, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_wrapped = pytree.tree_map_only("}, {"line": 1274, "name": "tree_map_only", "filename": 11, "loc": "return tree_map(map_only(type_or_types_or_pred)(func), tree, is_leaf=is_leaf)"}, {"line": 1097, "name": "tree_map", "filename": 11, "loc": "return treespec.unflatten(map(func, *flat_args))"}, {"line": 943, "name": "unflatten", "filename": 11, "loc": "leaves = list(leaves)"}, {"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}, {"line": 359, "name": "eq", "filename": 16, "loc": "return self._eq(other)  # type: ignore[attr-defined]"}, {"line": 1270, "name": "wrapper", "filename": 16, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.611000 2313073 torch/_logging/_internal.py:1293] {"propagate_real_tensors_provenance": {"expr": "Eq((((-u0)//3)) + 5, 0)", "result": "False", "expr_node_id": 140538758781280, "user_stack": [{"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}], "stack": [{"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}], "symbol_to_sources": {}, "frame_locals": {"loc": "return z[:a]", "locals": {"z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)", "a": "(((-u0)//3)) + 5"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 562, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_wrapped = pytree.tree_map_only("}, {"line": 1274, "name": "tree_map_only", "filename": 11, "loc": "return tree_map(map_only(type_or_types_or_pred)(func), tree, is_leaf=is_leaf)"}, {"line": 1097, "name": "tree_map", "filename": 11, "loc": "return treespec.unflatten(map(func, *flat_args))"}, {"line": 943, "name": "unflatten", "filename": 11, "loc": "leaves = list(leaves)"}, {"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6779, "name": "_evaluate_expr", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:20.615000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "Ne((((-u0)//3)) + 5, 0)", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 562, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_wrapped = pytree.tree_map_only("}, {"line": 1274, "name": "tree_map_only", "filename": 11, "loc": "return tree_map(map_only(type_or_types_or_pred)(func), tree, is_leaf=is_leaf)"}, {"line": 1097, "name": "tree_map", "filename": 11, "loc": "return treespec.unflatten(map(func, *flat_args))"}, {"line": 943, "name": "unflatten", "filename": 11, "loc": "leaves = list(leaves)"}, {"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {}, "frame_locals": {"loc": "return z[:a]", "locals": {"z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)", "a": "(((-u0)//3)) + 5"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 671, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "fw_metadata = run_functionalized_fw_and_collect_metadata("}, {"line": 197, "name": "inner", "filename": 20, "loc": "flat_f_outs = f(*flat_f_args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 562, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_wrapped = pytree.tree_map_only("}, {"line": 1274, "name": "tree_map_only", "filename": 11, "loc": "return tree_map(map_only(type_or_types_or_pred)(func), tree, is_leaf=is_leaf)"}, {"line": 1097, "name": "tree_map", "filename": 11, "loc": "return treespec.unflatten(map(func, *flat_args))"}, {"line": 943, "name": "unflatten", "filename": 11, "loc": "leaves = list(leaves)"}, {"line": 1215, "name": "wrapped", "filename": 11, "loc": "return func(x)"}, {"line": 445, "name": "wrap", "filename": 18, "loc": "return FunctionalTensor(x, self)"}, {"line": 120, "name": "__new__", "filename": 18, "loc": "out = torch.Tensor._make_wrapper_subclass(  # type: ignore[arg-type, attr-defined]"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:23.675000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/experimental/proxy_tensor.py", 36]}
V0211 16:42:23.675000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/jit_compile_runtime_wrappers.py", 37]}
V0211 16:42:23.676000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/_functorch/_aot_autograd/dispatch_and_compile_graph.py", 38]}
V0211 16:42:23.676000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/_symbolic_trace.py", 39]}
V0211 16:42:23.678000 2313073 torch/_logging/structured.py:27] {"str": ["/data/users/angelayi/pytorch/torch/fx/passes/shape_prop.py", 40]}
V0211 16:42:23.682000 2313073 torch/_logging/structured.py:27] {"str": ["<string>", 41]}
V0211 16:42:23.729000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "(((-u1)//3)) + 5 >= 0", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 276, "name": "forward", "filename": 0, "loc": "torch._check_is_size(a)"}, {"line": 1673, "name": "_check_is_size", "filename": 27, "loc": "_check(i >= 0, message)"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {}, "frame_locals": {"loc": "torch._check_is_size(a)", "locals": {"a": "(((-u1)//3)) + 5"}, "symbols": {}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 276, "name": "forward", "filename": 0, "loc": "torch._check_is_size(a)"}, {"line": 1673, "name": "_check_is_size", "filename": 27, "loc": "_check(i >= 0, message)"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:23.738000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "(((-u1)//3)) + 5 < 2*s0", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 277, "name": "forward", "filename": 0, "loc": "torch._check(a < z.shape[0])"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {"s0": "L['args'][0][1].size()[0]"}, "frame_locals": {"loc": "torch._check(a < z.shape[0])", "locals": {"a": "(((-u1)//3)) + 5", "z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 277, "name": "forward", "filename": 0, "loc": "torch._check(a < z.shape[0])"}, {"line": 1652, "name": "_check", "filename": 27, "loc": "_check_with(RuntimeError, cond, message)"}, {"line": 1615, "name": "_check_with", "filename": 27, "loc": "if expect_true(cond):"}, {"line": 1425, "name": "expect_true", "filename": 15, "loc": "return a.node.expect_true("}, {"line": 544, "name": "expect_true", "filename": 16, "loc": "return self.shape_env.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:23.764000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "Ne((((-u1)//3)) + 5, 0)", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 1239, "name": "__torch_function__", "filename": 36, "loc": "return func(*args, **kwargs)"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1341, "name": "__torch_dispatch__", "filename": 36, "loc": "return proxy_call(self, func, self.pre_dispatch, args, kwargs)"}, {"line": 973, "name": "proxy_call", "filename": 36, "loc": "track_tensor_tree(out, proxy_out, constant=constant, tracer=tracer)"}, {"line": 674, "name": "track_tensor_tree", "filename": 36, "loc": "wrap_with_proxy(inner_res, proxy_res, constant)"}, {"line": 621, "name": "wrap_with_proxy", "filename": 36, "loc": "set_meta(proxy, e)"}, {"line": 491, "name": "set_meta", "filename": 36, "loc": "proxy.node.meta[\"tensor_meta\"] = _extract_tensor_metadata(val)"}, {"line": 55, "name": "_extract_tensor_metadata", "filename": 40, "loc": "if result.is_contiguous(memory_format=query_format):"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {}, "frame_locals": {"loc": "return z[:a]", "locals": {"z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)", "a": "(((-u1)//3)) + 5"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 1239, "name": "__torch_function__", "filename": 36, "loc": "return func(*args, **kwargs)"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1341, "name": "__torch_dispatch__", "filename": 36, "loc": "return proxy_call(self, func, self.pre_dispatch, args, kwargs)"}, {"line": 973, "name": "proxy_call", "filename": 36, "loc": "track_tensor_tree(out, proxy_out, constant=constant, tracer=tracer)"}, {"line": 674, "name": "track_tensor_tree", "filename": 36, "loc": "wrap_with_proxy(inner_res, proxy_res, constant)"}, {"line": 621, "name": "wrap_with_proxy", "filename": 36, "loc": "set_meta(proxy, e)"}, {"line": 491, "name": "set_meta", "filename": 36, "loc": "proxy.node.meta[\"tensor_meta\"] = _extract_tensor_metadata(val)"}, {"line": 55, "name": "_extract_tensor_metadata", "filename": 40, "loc": "if result.is_contiguous(memory_format=query_format):"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:23.772000 2313073 torch/_logging/_internal.py:1293] {"guard_added": {"expr": "Ne((((-u1)//3)) + 5, 1)", "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 1239, "name": "__torch_function__", "filename": 36, "loc": "return func(*args, **kwargs)"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1341, "name": "__torch_dispatch__", "filename": 36, "loc": "return proxy_call(self, func, self.pre_dispatch, args, kwargs)"}, {"line": 973, "name": "proxy_call", "filename": 36, "loc": "track_tensor_tree(out, proxy_out, constant=constant, tracer=tracer)"}, {"line": 674, "name": "track_tensor_tree", "filename": 36, "loc": "wrap_with_proxy(inner_res, proxy_res, constant)"}, {"line": 621, "name": "wrap_with_proxy", "filename": 36, "loc": "set_meta(proxy, e)"}, {"line": 491, "name": "set_meta", "filename": 36, "loc": "proxy.node.meta[\"tensor_meta\"] = _extract_tensor_metadata(val)"}, {"line": 55, "name": "_extract_tensor_metadata", "filename": 40, "loc": "if result.is_contiguous(memory_format=query_format):"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}, {"line": 1218, "name": "trace_structured", "filename": 9, "loc": "record[name] = metadata_fn()"}], "symbol_to_sources": {}, "frame_locals": {"loc": "return z[:a]", "locals": {"z": "Tensor(shape: torch.Size([2*s0]), stride: (1,), storage_offset: 0)", "a": "(((-u1)//3)) + 5"}, "symbols": {"s0": "L['args'][0][1].size()[0]"}}}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2093, "name": "_export", "filename": 7, "loc": "export_artifact = export_func(  # type: ignore[operator]"}, {"line": 1868, "name": "_non_strict_export", "filename": 7, "loc": "aten_export_artifact = _to_aten_func(  # type: ignore[operator]"}, {"line": 772, "name": "_export_to_aten_ir", "filename": 7, "loc": "gm, graph_signature = transform(aot_export_module)("}, {"line": 1798, "name": "_aot_export_non_strict", "filename": 7, "loc": "gm, sig = aot_export(wrapped_mod, args, kwargs=kwargs, **flags)"}, {"line": 1345, "name": "aot_export_module", "filename": 19, "loc": "fx_g, metadata, in_spec, out_spec = _aot_export_function("}, {"line": 1584, "name": "_aot_export_function", "filename": 19, "loc": "fx_g, meta = create_aot_dispatcher_function("}, {"line": 570, "name": "create_aot_dispatcher_function", "filename": 19, "loc": "return _create_aot_dispatcher_function("}, {"line": 820, "name": "_create_aot_dispatcher_function", "filename": 19, "loc": "compiled_fn, fw_metadata = compiler_fn("}, {"line": 122, "name": "aot_dispatch_export", "filename": 37, "loc": "graph, _, _ = aot_dispatch_base_graph("}, {"line": 153, "name": "aot_dispatch_base_graph", "filename": 38, "loc": "fw_module = _create_graph("}, {"line": 55, "name": "_create_graph", "filename": 38, "loc": "fx_g = make_fx("}, {"line": 2194, "name": "wrapped", "filename": 36, "loc": "return make_fx_tracer.trace(f, *args)"}, {"line": 2132, "name": "trace", "filename": 36, "loc": "return self._trace_inner(f, *args)"}, {"line": 2103, "name": "_trace_inner", "filename": 36, "loc": "t = dispatch_trace("}, {"line": 51, "name": "inner", "filename": 30, "loc": "return disable_fn(*args, **kwargs)"}, {"line": 749, "name": "_fn", "filename": 31, "loc": "return fn(*args, **kwargs)"}, {"line": 1136, "name": "dispatch_trace", "filename": 36, "loc": "graph = tracer.trace(root, concrete_args)  # type: ignore[arg-type]"}, {"line": 1692, "name": "trace", "filename": 36, "loc": "res = super().trace(root, concrete_args)"}, {"line": 836, "name": "trace", "filename": 39, "loc": "(self.create_arg(fn(*args)),),"}, {"line": 1191, "name": "wrapped", "filename": 36, "loc": "out = f(*tensors)  # type:ignore[call-arg]"}, {"line": 1, "name": "<lambda>", "filename": 41, "loc": ""}, {"line": 693, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 413, "name": "_functionalized_f_helper", "filename": 23, "loc": "f_outs = fn(*f_args)"}, {"line": 78, "name": "inner_fn", "filename": 23, "loc": "outs = fn(*args)"}, {"line": 184, "name": "flat_fn", "filename": 22, "loc": "tree_out = fn(*args, **kwargs)"}, {"line": 879, "name": "functional_call", "filename": 23, "loc": "out = mod(*args[params_len:], **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 1782, "name": "forward", "filename": 7, "loc": "tree_out = mod(*args, **kwargs)"}, {"line": 811, "name": "module_call_wrapper", "filename": 39, "loc": "return self.call_module(mod, forward, args, kwargs)"}, {"line": 1762, "name": "call_module", "filename": 36, "loc": "return Tracer.call_module(self, m, forward, args, kwargs)"}, {"line": 529, "name": "call_module", "filename": 39, "loc": "ret_val = forward(*args, **kwargs)"}, {"line": 804, "name": "forward", "filename": 39, "loc": "return _orig_module_call(mod, *args, **kwargs)"}, {"line": 1751, "name": "_wrapped_call_impl", "filename": 21, "loc": "return self._call_impl(*args, **kwargs)"}, {"line": 1762, "name": "_call_impl", "filename": 21, "loc": "return forward_call(*args, **kwargs)"}, {"line": 279, "name": "forward", "filename": 0, "loc": "return z[:a]"}, {"line": 1239, "name": "__torch_function__", "filename": 36, "loc": "return func(*args, **kwargs)"}, {"line": 44, "name": "__torch_function__", "filename": 24, "loc": "return func(*args, **kwargs)"}, {"line": 654, "name": "__torch_function__", "filename": 10, "loc": "return func(*args, **kwargs)"}, {"line": 527, "name": "__torch_dispatch__", "filename": 18, "loc": "outs_unwrapped = func._op_dk("}, {"line": 27, "name": "wrapper", "filename": 25, "loc": "return fn(*args, **kwargs)"}, {"line": 1341, "name": "__torch_dispatch__", "filename": 36, "loc": "return proxy_call(self, func, self.pre_dispatch, args, kwargs)"}, {"line": 973, "name": "proxy_call", "filename": 36, "loc": "track_tensor_tree(out, proxy_out, constant=constant, tracer=tracer)"}, {"line": 674, "name": "track_tensor_tree", "filename": 36, "loc": "wrap_with_proxy(inner_res, proxy_res, constant)"}, {"line": 621, "name": "wrap_with_proxy", "filename": 36, "loc": "set_meta(proxy, e)"}, {"line": 491, "name": "set_meta", "filename": 36, "loc": "proxy.node.meta[\"tensor_meta\"] = _extract_tensor_metadata(val)"}, {"line": 55, "name": "_extract_tensor_metadata", "filename": 40, "loc": "if result.is_contiguous(memory_format=query_format):"}, {"line": 575, "name": "guard_size_oblivious", "filename": 16, "loc": "r = self.shape_env.evaluate_expr("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6582, "name": "evaluate_expr", "filename": 15, "loc": "return self._evaluate_expr("}, {"line": 6830, "name": "_evaluate_expr", "filename": 15, "loc": "self.defer_runtime_assert("}, {"line": 263, "name": "wrapper", "filename": 14, "loc": "return retlog(fn(*args, **kwargs))"}, {"line": 6951, "name": "defer_runtime_assert", "filename": 15, "loc": "self._log_guard(\"runtime_assert\", orig_expr, forcing_spec=False)"}, {"line": 6521, "name": "_log_guard", "filename": 15, "loc": "dtrace_structured("}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}]}
V0211 16:42:23.802000 2313073 torch/_logging/_internal.py:1293] {"exported_program": {}, "stack": [{"line": 534, "name": "<module>", "filename": 0, "loc": "run_tests()"}, {"line": 1346, "name": "run_tests", "filename": 1, "loc": "unittest.main(argv=argv)"}, {"line": 101, "name": "__init__", "filename": 2, "loc": "self.runTests()"}, {"line": 271, "name": "runTests", "filename": 2, "loc": "self.result = testRunner.run(self.test)"}, {"line": 184, "name": "run", "filename": 3, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 84, "name": "__call__", "filename": 4, "loc": "return self.run(*args, **kwds)"}, {"line": 122, "name": "run", "filename": 4, "loc": "test(result)"}, {"line": 650, "name": "__call__", "filename": 5, "loc": "return self.run(*args, **kwds)"}, {"line": 3288, "name": "run", "filename": 1, "loc": "self._run_custom("}, {"line": 3260, "name": "_run_custom", "filename": 1, "loc": "super_run(result=result)"}, {"line": 591, "name": "run", "filename": 5, "loc": "self._callTestMethod(testMethod)"}, {"line": 549, "name": "_callTestMethod", "filename": 5, "loc": "method()"}, {"line": 3120, "name": "wrapper", "filename": 1, "loc": "method(*args, **kwargs)"}, {"line": 281, "name": "test_complex_data_dependent_expr", "filename": 0, "loc": "_, report = draft_export("}, {"line": 359, "name": "draft_export", "filename": 6, "loc": "ep = _export("}, {"line": 1022, "name": "wrapper", "filename": 7, "loc": "ep = fn(*args, **kwargs)"}, {"line": 121, "name": "wrapper", "filename": 8, "loc": "return fn(*args, **kwargs)"}, {"line": 2151, "name": "_export", "filename": 7, "loc": "dtrace_structured(\"exported_program\", payload_fn=lambda: str(exported_program))"}, {"line": 1293, "name": "dtrace_structured", "filename": 9, "loc": "trace_structured("}], "has_payload": "3d5fc8d52ca224c024a08ee8aa2e2850"}
	ExportedProgram:
	    class GraphModule(torch.nn.Module):
	        def forward(self, x: "i64[]", y: "f32[s0]"):
	             # File: /data/users/angelayi/pytorch/test/export/test_draft_export.py:269 in forward, code: a = x.item()
	            _local_scalar_dense: "Sym(u1)" = torch.ops.aten._local_scalar_dense.default(x);  x = None

	             # File: /data/users/angelayi/pytorch/test/export/test_draft_export.py:270 in forward, code: a = -a
	            neg: "Sym(-u1)" = -_local_scalar_dense;  _local_scalar_dense = None

	             # File: /data/users/angelayi/pytorch/torch/__init__.py:449 in __floordiv__, code: return self.__int_floordiv__(other)
	            floordiv: "Sym(((-u1)//3))" = neg // 3;  neg = None

	             # File: /data/users/angelayi/pytorch/test/export/test_draft_export.py:272 in forward, code: a = a + 5
	            add: "Sym((((-u1)//3)) + 5)" = floordiv + 5;  floordiv = None

	             # File: /data/users/angelayi/pytorch/test/export/test_draft_export.py:274 in forward, code: z = torch.cat([y, y])
	            cat: "f32[2*s0]" = torch.ops.aten.cat.default([y, y]);  y = None

	             # File: /data/users/angelayi/pytorch/test/export/test_draft_export.py:279 in forward, code: return z[:a]
	            slice_1: "f32[(((-u1)//3)) + 5]" = torch.ops.aten.slice.Tensor(cat, 0, 0, add);  cat = add = None
	            return (slice_1,)

	Graph signature: ExportGraphSignature(input_specs=[InputSpec(kind=<InputKind.USER_INPUT: 1>, arg=TensorArgument(name='x'), target=None, persistent=None), InputSpec(kind=<InputKind.USER_INPUT: 1>, arg=TensorArgument(name='y'), target=None, persistent=None)], output_specs=[OutputSpec(kind=<OutputKind.USER_OUTPUT: 1>, arg=TensorArgument(name='slice_1'), target=None)])
	Range constraints: {u0: VR[-int_oo, 15], u1: VR[-int_oo, 15], s0: VR[2, int_oo]}

"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([["59619"],{42515:function(i,t,s){s.d(t,{v:function(){return e}});s(1455);const e=async(i,t)=>{if(navigator.clipboard)try{return void(await navigator.clipboard.writeText(i))}catch(a){}const s=null!=t?t:document.body,e=document.createElement("textarea");e.value=i,s.appendChild(e),e.select(),document.execCommand("copy"),s.removeChild(e)}},23027:function(i,t,s){s.a(i,async function(i,e){try{s.r(t);s(26847),s(81738),s(6989),s(1455),s(27530);var a=s(73742),o=s(59048),n=s(7616),c=s(39884),l=s(42515),h=s(83378),r=(s(64881),s(72953)),d=(s(69760),s(6514)),p=s(65505),g=s(95814),u=s(35982),_=i([r,d]);[r,d]=_.then?(await _)():_;let m,v,f,y,$,b,L,x=i=>i;const C="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z",z="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z",w="M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z";class k extends o.oi{async showDialog(i){this.device_id=i.device_id}async _copyIpToClipboard(i){const t=i.currentTarget.ip;await(0,l.v)(t),(0,u.C)(this,{message:this.hass.localize("ui.common.copied_clipboard")})}render(){return this.device_id?(0,o.dy)(m||(m=x` <ha-dialog open @closed="${0}" .heading="${0}"> ${0} </ha-dialog> `),this.closeDialog,(0,h.i)(this.hass,this.hass.localize("ui.panel.config.matter.ping_node.title")),"failed"===this._status?(0,o.dy)(v||(v=x` <div class="flex-container"> <ha-svg-icon .path="${0}" class="failed"></ha-svg-icon> <div class="status"> <p> ${0} </p> </div> </div> <ha-button slot="primaryAction" @click="${0}"> ${0} </ha-button> `),w,this.hass.localize(this._pingResultEntries?"ui.panel.config.matter.ping_node.no_ip_found":"ui.panel.config.matter.ping_node.ping_failed"),this.closeDialog,this.hass.localize("ui.common.close")):this._pingResultEntries?(0,o.dy)(f||(f=x` <h2> ${0} </h2> <ha-list> ${0} </ha-list> <ha-button slot="primaryAction" @click="${0}"> ${0} </ha-button> `),this.hass.localize("ui.panel.config.matter.ping_node.ping_complete"),this._pingResultEntries.map(([i,t])=>(0,o.dy)(y||(y=x`<ha-list-item hasMeta .ip="${0}" @click="${0}">${0} <ha-svg-icon slot="meta" .path="${0}" class="${0}"></ha-svg-icon> </ha-list-item>`),i,this._copyIpToClipboard,i,t?z:C,t?"success":"failed")),this.closeDialog,this.hass.localize("ui.common.close")):"started"===this._status?(0,o.dy)($||($=x` <div class="flex-container"> <ha-spinner></ha-spinner> <div class="status"> <p> <b> ${0} </b> </p> </div> </div> <ha-button slot="primaryAction" @click="${0}"> ${0} </ha-button> `),this.hass.localize("ui.panel.config.matter.ping_node.in_progress"),this.closeDialog,this.hass.localize("ui.common.close")):(0,o.dy)(b||(b=x` <p> ${0} </p> <p> <em> ${0} </em> </p> <ha-button slot="primaryAction" @click="${0}"> ${0} </ha-button> `),this.hass.localize("ui.panel.config.matter.ping_node.introduction"),this.hass.localize("ui.panel.config.matter.ping_node.battery_device_warning"),this._startPing,this.hass.localize("ui.panel.config.matter.ping_node.start_ping"))):o.Ld}async _startPing(){if(this.hass){this._status="started";try{const i=await(0,p.xO)(this.hass,this.device_id),t=Object.entries(i);0===t.length&&(this._status="failed"),this._pingResultEntries=t}catch(i){this._status="failed"}}}closeDialog(){this.device_id=void 0,this._status=void 0,this._pingResultEntries=void 0,(0,c.B)(this,"dialog-closed",{dialog:this.localName})}static get styles(){return[g.Qx,g.yu,(0,o.iv)(L||(L=x`.success{color:var(--success-color)}.failed{color:var(--error-color)}.flex-container{display:flex;align-items:center}.stages{margin-top:16px}.stage{padding:8px}ha-list{--mdc-list-side-padding:0}.flex-container ha-spinner,.flex-container ha-svg-icon{margin-right:20px}.flex-container ha-svg-icon{width:68px;height:48px}`))]}}(0,a.__decorate)([(0,n.Cb)({attribute:!1})],k.prototype,"hass",void 0),(0,a.__decorate)([(0,n.SB)()],k.prototype,"device_id",void 0),(0,a.__decorate)([(0,n.SB)()],k.prototype,"_status",void 0),(0,a.__decorate)([(0,n.SB)()],k.prototype,"_pingResultEntries",void 0),k=(0,a.__decorate)([(0,n.Mo)("dialog-matter-ping-node")],k),e()}catch(m){e(m)}})}}]);
//# sourceMappingURL=59619.95900080189de62b.js.map
[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kotadb-client"
version = "0.6.1"
description = "Python client for KotaDB - PostgreSQL-level ease of use for document database"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "KotaDB Team", email = "support@kotadb.dev"}
]
keywords = ["database", "document-store", "search", "semantic-search", "kotadb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests>=2.25.0",
    "urllib3>=1.26.19",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0", 
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.0",  # Property-based testing
    "black>=23.0",
    "ruff>=0.1.0",  # Fast Python linter
    "mypy>=1.0",
    "types-requests>=2.25.0",
    "pylint>=2.17.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",  # Security linter
    "safety>=2.3.0",  # Dependency security checker
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.0",
    "faker>=18.0.0",  # Generate test data
    "responses>=0.22.0",  # Mock HTTP responses
]

[project.urls]
Homepage = "https://github.com/jayminwest/kota-db"
Repository = "https://github.com/jayminwest/kota-db"
"Bug Reports" = "https://github.com/jayminwest/kota-db/issues"
Documentation = "https://github.com/jayminwest/kota-db/docs"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_concatenate = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_untyped_decorators = false

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=kotadb",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=70",
    "--timeout=30",
    "-v",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "benchmark: Performance benchmark tests",
    "property: Property-based tests using Hypothesis",
    "stress: Stress tests that push limits",
]

[tool.coverage.run]
source = ["kotadb"]
omit = ["*/tests/*", "*/__pycache__/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 70
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py38"
line-length = 100
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "__pycache__",
    "build",
    "dist",
    ".hypothesis",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "PL",   # pylint
    "RUF",  # ruff-specific rules
    "S",    # bandit security
    "N",    # pep8-naming
    "ERA",  # eradicate commented code
    "PTH",  # use pathlib
    "PD",   # pandas-vet
    "NPY",  # numpy specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "PLR0913", # too many arguments
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ARG", "PLR2004", "S311", "B007", "SIM105", "E722", "S110", "PLC0415", "SIM117", "B017", "F841"]
"examples/*" = ["PLR0912", "PLR0915"]
"kotadb/client.py" = ["PLR2004"]
"setup.py" = ["PTH123"]

[tool.pylint]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
severity = "medium"
confidence = "medium"
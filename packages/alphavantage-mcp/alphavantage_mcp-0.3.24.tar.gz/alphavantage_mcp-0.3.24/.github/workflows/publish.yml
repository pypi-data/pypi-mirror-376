name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to TestPyPI instead of PyPI'
        required: false
        default: false
        type: boolean
      use_twine:
        description: 'Use twine instead of trusted publishing'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.test_pypi == 'true' && 'testpypi' || 'pypi' }}
    permissions:
      id-token: write  # For trusted publishing
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build

    - name: Publish to TestPyPI (trusted publishing)
      if: github.event.inputs.test_pypi == 'true' && github.event.inputs.use_twine != 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

    - name: Publish to PyPI (trusted publishing)
      if: github.event.inputs.test_pypi != 'true' && github.event.inputs.use_twine != 'true'
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Publish to TestPyPI (twine)
      if: github.event.inputs.test_pypi == 'true' && github.event.inputs.use_twine == 'true'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: uv run twine upload --repository testpypi dist/*

    - name: Publish to PyPI (twine)
      if: github.event.inputs.test_pypi != 'true' && github.event.inputs.use_twine == 'true'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: uv run twine upload dist/*

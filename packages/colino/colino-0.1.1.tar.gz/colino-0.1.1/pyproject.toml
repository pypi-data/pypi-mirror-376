[tool.poetry]
name = "colino"
version = "0.1.1"
description = "Your personal news digest (macOS only)"
classifiers = [
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: End Users/Desktop",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Topic :: Utilities",
]
authors = ["Umberto D'Ovidio <umbertod@fastmail.com>"]
readme = "README.md"
packages = [{include = "colino"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
pyyaml = "^6.0.2"
feedparser = "^6.0.11"
requests = "^2.32.5"
google-auth = "^2.40.3"
google-auth-oauthlib = "^1.2.2"
google-auth-httplib2 = "^0.2.0"
google-api-python-client = "^2.179.0"
youtube-transcript-api = "^1.2.2"
openai = "^1.102.0"
jinja2 = "^3.1.6"
trafilatura = "^2.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
mypy = "^1.11.2"
types-pyyaml = "^6.0.12.20240917"
types-requests = "^2.32.0.20240914"
pre-commit = "^3.8.0"
types-jinja2 = "^2.11.9"

[tool.poetry.scripts]
colino = "colino.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.lint.isort]
known-first-party = ["colino"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "feedparser.*",
    "trafilatura.*",
    "youtube_transcript_api.*",
    "googleapiclient.*",
    "google.*",
]
ignore_missing_imports = true

{
  "model": "openai/gpt-4.1",
  "messages": [
    {
      "role": "system",
      "content": ""
    },
    {
      "role": "user",
      "content": ""
    }
  ],
  "tools": [
    {
      "type": "function",
      "function": {
        "name": "analyze_html",
        "description": "Analyze HTML content to understand its structure and extract key information.\n\n    This function performs a comprehensive analysis of HTML content using AI to:\n    - Identify the page structure and layout\n    - Extract key information in a key=value format\n    - Explain the code organization and hierarchy\n    - Identify main content areas and their purposes\n\n    Args:\n        input (AnalyzeHtmlInput): The input containing HTML code to analyze\n\n    Returns:\n        str: A structured analysis containing key information and page structure details\n    ",
        "parameters": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "html": {
                  "type": "string",
                  "description": "The HTML code to be analyzed"
                }
              },
              "required": ["html"],
              "additionalProperties": false
            }
          },
          "required": ["input"],
          "additionalProperties": false
        },
        "strict": true
      }
    },
    {
      "type": "function",
      "function": {
        "name": "analyze_variant_handling",
        "description": "Analyze an e-commerce product detail page to understand variant handling and selection logic.\n\n    This function performs a comprehensive analysis of product variant handling by:\n    - Identifying variant selection UI elements\n    - Understanding variant types and options\n    - Analyzing the variant selection logic\n    - Detecting price updates and availability changes\n    - Identifying variant-related JavaScript functions\n\n    Args:\n        input (AnalyzeVariantHandlingInput): The input containing HTML code of the product detail page\n\n    Returns:\n        str: A structured analysis containing variant handling details\n    ",
        "parameters": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "html": {
                  "type": "string",
                  "description": "The HTML code to analyze for variant handling"
                }
              },
              "required": ["html"],
              "additionalProperties": false
            }
          },
          "required": ["input"],
          "additionalProperties": false
        },
        "strict": true
      }
    },
    {
      "type": "function",
      "function": {
        "name": "generate_product_selectors",
        "description": "Generate clear selectors for extracting product information from an HTML page.\n\n    This function takes the HTML and analysis results from both analysis tools to generate\n    precise selectors that can be used to extract various product information using Python.\n\n    Args:\n        input (GenerateProductSelectorsInput): The input containing HTML and analysis results\n\n    Returns:\n        str: A structured set of selectors for extracting product information\n    ",
        "parameters": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "html": {
                  "type": "string",
                  "description": "The HTML code to generate selectors for"
                },
                "structure_analysis": {
                  "type": "string",
                  "description": "The results from analyze_html"
                },
                "variant_analysis": {
                  "type": "string",
                  "description": "The results from analyze_variant_handling"
                }
              },
              "required": ["html", "structure_analysis", "variant_analysis"],
              "additionalProperties": false
            }
          },
          "required": ["input"],
          "additionalProperties": false
        },
        "strict": true
      }
    },
    {
      "type": "function",
      "function": {
        "name": "scrape_html",
        "description": "Scrape HTML content from a URL.\n\n    This function fetches the HTML content from a given URL using httpx.\n    It handles redirects and raises appropriate exceptions for HTTP errors.\n\n    Args:\n        input (ScrapeHtmlInput): The input containing the URL to scrape\n\n    Returns:\n        ScrapeHtmlOutput: The HTML content of the page\n\n    Raises:\n        httpx.HTTPError: If there's an HTTP error while fetching the page\n        Exception: For any other unexpected errors\n    ",
        "parameters": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL to scrape HTML from"
                }
              },
              "required": ["url"],
              "additionalProperties": false
            }
          },
          "required": ["input"],
          "additionalProperties": false
        },
        "strict": true
      }
    }
  ]
}

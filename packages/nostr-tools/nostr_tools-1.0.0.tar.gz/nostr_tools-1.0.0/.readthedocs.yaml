# Read the Docs build configuration
# This file configures how RTD builds and hosts the project documentation
# See https://docs.readthedocs.io/en/stable/config-file/v2.html for full reference

version: 2

# Build environment configuration
build:
  # Use Ubuntu 22.04 LTS for stable, modern build environment
  os: ubuntu-22.04

  # Tool versions - pinned for reproducible builds
  tools:
    # Use Python 3.9 to match minimum supported version in pyproject.toml
    # This ensures documentation builds with same constraints as package installation
    python: "3.9"

    # Additional tools can be specified if documentation build requires them:
    # node: "18"      # For JavaScript-based documentation tools
    # rust: "1.70"    # If documentation includes Rust code examples
    # go: "1.20"      # If documentation includes Go code examples

  # Build jobs configuration - defines resource limits and timeouts
  jobs:
    # Pre-install system packages if needed for documentation build
    pre_create_environment:
      # Example: install system dependencies for graphics/PDF generation
      # - apt-get update
      # - apt-get install -y graphviz pandoc texlive-latex-base

    # Post-checkout hook for additional setup if needed
    post_checkout:
      # Example: download additional resources or run setup scripts
      # - git submodule update --init --recursive

# Sphinx documentation configuration
sphinx:
  # Use HTML builder for web-based documentation
  builder: html

  # Path to Sphinx configuration file relative to repository root
  configuration: docs/conf.py

  # Don't fail build on warnings to allow for development flexibility
  # Set to true in production for stricter quality control
  fail_on_warning: false

# Alternative output formats (uncomment to enable)
formats:
  # Generate PDF version of documentation
  # Requires additional LaTeX packages in build environment
  - pdf

  # Generate EPUB for e-reader compatibility
  - epub

# Python environment and dependency installation
python:
  install:
    # Install the main package with documentation dependencies
    # This ensures all code examples and API docs can be generated
    - method: pip
      path: .

    # Install additional documentation-specific requirements
    # This file contains pinned versions for reproducible RTD builds
    - requirements: docs/requirements.txt

  # Python version is already specified in build.tools.python above
  # but can be overridden here if needed for the Python environment only

# Search integration - enable advanced search features
search:
  # Rank results by relevance to improve user search experience
  ranking:
    "*.html": 2
    "api/*.html": -1  # Lower priority for API reference pages

# File and directory exclusions
# These patterns prevent unnecessary files from being processed during build
exclude:
  # Version control directories
  - .git/
  - .github/
  - .gitignore

  # Python cache and build artifacts
  - .pytest_cache/
  - .ruff_cache/
  - .mypy_cache/
  - __pycache__/
  - "*.pyc"
  - "*.pyo"

  # Package build artifacts
  - build/
  - dist/
  - "*.egg-info/"

  # Development environment files
  - .venv/
  - venv/
  - .env
  - .env.*

  # IDE and editor files
  - .vscode/
  - .idea/
  - "*.swp"
  - "*.swo"
  - "*~"

  # OS-specific files
  - .DS_Store
  - Thumbs.db

  # Test artifacts that shouldn't be in documentation
  - htmlcov/
  - .coverage
  - .pytest_cache/

# Submodules configuration (uncomment if project uses git submodules)
# submodules:
#   # Include submodules in the build
#   include: all
#   # Or specify specific submodules:
#   # include:
#   #   - path/to/submodule
#   #
#   # Recursive submodule inclusion
#   recursive: true

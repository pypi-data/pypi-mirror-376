repos:
  # Pre-commit hooks for basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Ruff - modern Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      - id: ruff
        args: [--fix, --config=pyproject.toml]
        types_or: [python, pyi, jupyter]
        stages: [pre-commit]
      - id: ruff-format
        args: [--config=pyproject.toml]
        types_or: [python, pyi, jupyter]
        stages: [pre-commit]

  # MyPy type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-setuptools,
          aiohttp>=3.8.0,
          aiohttp-socks>=0.8.0,
          bech32>=1.2.0,
          secp256k1>=0.14.0
        ]
        args: [--ignore-missing-imports, --show-error-codes]
        files: ^nostr_tools/
        exclude: ^(tests/|examples/|setup\.py)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [
          -r, nostr_tools,
          --severity-level, high,
          --confidence-level, low,
          -x, "tests examples"
        ]
        pass_filenames: false

  # Check Python docstrings
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        additional_dependencies: [tomli]
        args: [
          --convention=google,
          --add-ignore=D212
        ]
        files: ^nostr_tools/

  # Check for common security issues
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: \.git/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/

# Configuration
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# Run some hooks on all files for initial setup
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, bandit, detect-secrets]  # Skip slow hooks on CI
  submodules: false

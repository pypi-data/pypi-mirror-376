name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[test]"

    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --cov=graph_api --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[lint]"

    - name: Run ruff (linter)
      run: uv run ruff check .

    - name: Run black (formatter check)
      run: uv run black --check .

    - name: Run isort (import sorting check)
      run: uv run isort --check-only .

    # Temporarily disabled due to extensive type annotation issues
    # - name: Run mypy (type checking)
    #   run: uv run mypy graph_api/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e .
        uv pip install bandit[toml] safety pip-audit

    - name: Run bandit security linter
      run: |
        uv run bandit -r graph_api/ -f json -o bandit-report.json || true
        uv run bandit -r graph_api/

    - name: Run safety check for known vulnerabilities
      run: uv run safety check --json --output safety-report.json || true

    - name: Run pip-audit for dependency vulnerabilities
      run: uv run pip-audit --desc --format=json --output=pip-audit-report.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
        retention-days: 30
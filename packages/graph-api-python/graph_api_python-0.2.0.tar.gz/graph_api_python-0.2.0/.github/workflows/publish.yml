name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install build dependencies
      run: |
        uv venv
        uv pip install build twine

    - name: Build package
      run: uv run python -m build

    - name: Check distribution
      run: uv run twine check dist/*

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 30

  test-pypi-publish:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true
    environment:
      name: testpypi
      url: https://test.pypi.org/p/graph-api-python
    permissions:
      contents: read
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  pypi-publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

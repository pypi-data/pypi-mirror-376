$date
	Mon Nov 18 16:43:06 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_div_mod_3 $end
$var wire 2 ! remainder [1:0] $end
$var wire 8 " quotient [7:0] $end
$var reg 8 # n [7:0] $end
$scope module dut $end
$var wire 8 $ n [7:0] $end
$var wire 2 % remainder [1:0] $end
$var wire 2 & rem4 [1:0] $end
$var wire 5 ' rem3 [4:0] $end
$var wire 6 ( rem2 [5:0] $end
$var wire 7 ) rem1 [6:0] $end
$var wire 2 * r4 [1:0] $end
$var wire 2 + r3 [1:0] $end
$var wire 2 , r2 [1:0] $end
$var wire 2 - r1 [1:0] $end
$var wire 8 . quotient_sum [7:0] $end
$var wire 8 / quotient [7:0] $end
$var wire 2 0 q4 [1:0] $end
$var wire 4 1 q3 [3:0] $end
$var wire 5 2 q2 [4:0] $end
$var wire 6 3 q1 [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10 3
b0 2
b0 1
b0 0
b11 /
b10 .
b1 -
b11 ,
b11 +
b11 *
b11 )
b11 (
b11 '
b11 &
b0 %
b1001 $
b1001 #
b11 "
b0 !
$end
#10000
b1 !
b1 %
b1 &
b1 *
b11 "
b11 /
b1 '
b1 +
b11 .
b1 2
b1 (
b0 ,
b100 )
b10 -
b1010 #
b1010 $
#20000
b10 !
b10 %
b10 &
b10 *
b10 '
b10 +
b10 (
b1 ,
b101 )
b11 -
b1011 #
b1011 $
#30000
b0 !
b0 %
b11 &
b1 0
b110 '
b100 1
b10000 2
b10010 (
b10 ,
b1010101 "
b1010101 /
b1000010 )
b1010100 .
b111111 3
b11111111 #
b11111111 $
#40000
b0 0
b0 !
b0 %
b0 &
b0 *
b0 1
b0 '
b0 +
b0 "
b0 /
b0 2
b0 (
b0 ,
b0 .
b0 3
b0 )
b0 -
b0 #
b0 $
#50000
b10 !
b10 %
b10 &
b10 *
b10 '
b10 +
b10 (
b10 ,
b10 )
b10 -
b10 #
b10 $
#60000
b1 0
b1 !
b1 %
b1 &
b0 *
b100 1
b100 '
b0 +
b10000 2
b10000 (
b0 ,
b1010011 "
b1010011 /
b1000000 )
b1010011 .
b111110 3
b11111010 #
b11111010 $
#70000
b0 0
b0 !
b0 %
b11 &
b11 *
b10 1
b11 '
b1 +
b110 2
b100001 "
b100001 /
b1001 (
b11 ,
b100000 .
b11000 3
b11011 )
b11 -
b1100011 #
b1100011 $
#80000

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "finder-enrichment-ai-client"
version = "0.2.1"
description = "Lightweight AI client package for managing API calls to various AI providers"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
]

build = [
    "build>=1.0.3",
    "twine>=6.1.0",
]

[project.urls]
"Homepage" = "https://github.com/giacomokavanagh/finder-enrichment-orchestrator"
"Bug Tracker" = "https://github.com/giacomokavanagh/finder-enrichment-orchestrator/issues"

# Package discovery configuration
[tool.setuptools.packages.find]
where = ["."]
include = ["finder_enrichment_ai_client*"]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests"
]

# Configure package sources for production builds
# Use standard PyPI for all packages 

[tool.black]
line-length = 88
target-version = ['py38']
include = '\\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=finder_enrichment_ai_client --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true 
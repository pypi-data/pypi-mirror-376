# coding: utf-8

"""
    FastAPI

    An API for our smart search engine that provides the agent that best fits your needs.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from agentverse_client.search.models.agent_by_similarity_response import AgentBySimilarityResponse

class TestAgentBySimilarityResponse(unittest.TestCase):
    """AgentBySimilarityResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentBySimilarityResponse:
        """Test AgentBySimilarityResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentBySimilarityResponse`
        """
        model = AgentBySimilarityResponse()
        if include_optional:
            return AgentBySimilarityResponse(
                agents = [
                    agentverse_client.search.models.agent.Agent(
                        address = '', 
                        prefix = null, 
                        name = '', 
                        description = '', 
                        readme = '', 
                        protocols = [
                            agentverse_client.search.models.protocol.Protocol(
                                name = '', 
                                version = '', 
                                digest = '', )
                            ], 
                        avatar_href = '', 
                        total_interactions = 56, 
                        recent_interactions = 56, 
                        rating = 1.337, 
                        status = null, 
                        type = null, 
                        featured = True, 
                        category = null, 
                        system_wide_tags = [
                            ''
                            ], 
                        geo_location = agentverse_client.search.models.agent_geo_location.AgentGeoLocation(
                            latitude = 1.337, 
                            longitude = 1.337, 
                            radius = 1.337, ), 
                        domain = '', 
                        metadata = {
                            'key' : null
                            }, 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        recent_success_rate = 1.337, 
                        current_campaign_eligible = True, )
                    ]
            )
        else:
            return AgentBySimilarityResponse(
        )
        """

    def testAgentBySimilarityResponse(self):
        """Test AgentBySimilarityResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    FastAPI

    A simple fastapi application that services registered agents information

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from agentverse_client.almanac.aio.models.agent_registration_attestation_batch import AgentRegistrationAttestationBatch

class TestAgentRegistrationAttestationBatch(unittest.TestCase):
    """AgentRegistrationAttestationBatch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentRegistrationAttestationBatch:
        """Test AgentRegistrationAttestationBatch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentRegistrationAttestationBatch`
        """
        model = AgentRegistrationAttestationBatch()
        if include_optional:
            return AgentRegistrationAttestationBatch(
                attestations = [
                    agentverse_client.almanac.aio.models.agent_registration_attestation.AgentRegistrationAttestation(
                        agent_identifier = '', 
                        signature = '', 
                        timestamp = 56, 
                        protocols = [
                            ''
                            ], 
                        endpoints = [
                            agentverse_client.almanac.aio.models.agent_endpoint.AgentEndpoint(
                                url = '', 
                                weight = 56, )
                            ], 
                        metadata = {
                            'key' : null
                            }, )
                    ]
            )
        else:
            return AgentRegistrationAttestationBatch(
                attestations = [
                    agentverse_client.almanac.aio.models.agent_registration_attestation.AgentRegistrationAttestation(
                        agent_identifier = '', 
                        signature = '', 
                        timestamp = 56, 
                        protocols = [
                            ''
                            ], 
                        endpoints = [
                            agentverse_client.almanac.aio.models.agent_endpoint.AgentEndpoint(
                                url = '', 
                                weight = 56, )
                            ], 
                        metadata = {
                            'key' : null
                            }, )
                    ],
        )
        """

    def testAgentRegistrationAttestationBatch(self):
        """Test AgentRegistrationAttestationBatch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

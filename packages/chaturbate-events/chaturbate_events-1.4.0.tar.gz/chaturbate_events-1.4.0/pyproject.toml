[project]
name = "chaturbate-events"
version = "1.4.0"
description = "An asynchronous client for the Chaturbate Events API."
authors = [{ name = "MountainGod2", email = "admin@reid.ca" }]
requires-python = ">=3.11"
dependencies = ["aiohttp==3.12.15", "pydantic==2.11.7"]
dynamic = ["readme"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
"Homepage" = "https://github.com/MountainGod2/chaturbate-events"
"Changelog" = "https://github.com/MountainGod2/chaturbate-events/blob/main/CHANGELOG.md"
"Issue Tracker" = "https://github.com/MountainGod2/chaturbate-events/issues"


[build-system]
requires = ["hatchling==1.27.0", "hatch-fancy-pypi-readme==25.1.0"]
build-backend = "hatchling.build"

[dependency-groups]
build = ["python-semantic-release==10.3.1"]
dev = [
    "aioresponses==0.7.8",
    "mypy==1.17.1",
    "pre-commit==4.3.0",
    "pylint==3.3.8",
    "pyright==1.1.405",
    "pytest-aiohttp==1.1.0",
    "pytest-asyncio==1.1.0",
    "pytest-cov==6.2.1",
    "pytest-mock==3.15.0",
    "pytest==8.4.2",
    "python-semantic-release==10.3.1",
    "ruff==0.12.12",
]

[tool.hatch]
build.targets.wheel.packages = ["src/chaturbate_events"]
metadata.hooks.fancy-pypi-readme.content-type = "text/markdown"
metadata.hooks.fancy-pypi-readme.fragments = [{ path = "README.md" }]

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
# Replace relative links to the GitHub repository with absolute links.
pattern = '\[(.+?)\]\(((?!https?://)\.?/?(\S+?))\)'
replacement = '[\1](https://github.com/MountainGod2/chaturbate-events/tree/main/\g<3>)'

[tool.semantic_release]
build_command = """
  uv lock --upgrade-package "chaturbate-events"
  uv build
"""
commit_parser = "conventional"
commit_parser_options.minor_tags = ["feat"]
commit_parser_options.patch_tags = ["fix", "perf"]
commit_parser_options.parse_squash_commits = true
commit_parser_options.ignore_merge_commits = true
changelog_file = "CHANGELOG.md"
output_format = "md"
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
]
version_toml = ["pyproject.toml:project.version"]

[tool.ruff]
indent-width = 4
lint.ignore = ["COM812", "CPY001"]
lint.per-file-ignores."examples/*" = ["ANN001", "ANN202", "D100", "D103", "D104", "T201", "RUF029"]
lint.per-file-ignores."tests/*" = ["S101", "S106", "SLF001", "PLR2004", "ANN401"]
lint.pydocstyle.convention = "google"
lint.select = ["ALL"]
lint.unfixable = []
target-version = "py311"
lint.preview = true
format.preview = true

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true
plugins = ["pydantic.mypy"]
strict = true

[[tool.mypy.overrides]]
disallow_untyped_calls = false
disallow_untyped_defs = false
ignore_missing_imports = true
module = "examples.*"

[[tool.mypy.overrides]]
disallow_untyped_calls = false
disallow_untyped_defs = false
module = "tests.*"
no_implicit_optional = false
strict_optional = false

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
testpaths = ["tests"]

[[tool.pyright.overrides]]
include = ["examples/**"]
reportUnusedFunction = "none"

[tool.coverage]
omit = ["**/__init__.py", "examples/*", "tests/*"]
report.exclude_lines = [
    "if TYPE_CHECKING:",
    "if __name__ == '__main__':",
    "if typing.TYPE_CHECKING:",
]
report.show_missing = true
report.skip_covered = true
run.branch = true
source = ["src/"]

[[tool.ty.overrides]]
include = ["examples/example.py"]

[tool.ty.overrides.rules]
unresolved-import = "ignore"

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101"]

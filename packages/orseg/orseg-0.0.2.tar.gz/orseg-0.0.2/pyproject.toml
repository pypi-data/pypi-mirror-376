[project]
name = "orseg"
dynamic = ["version"]
description = "Segtree is a plugin designed for the segmentation of individual trees from imagery. It isolates tree in ovelapping tree context."
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  {name = "Herearii Metuarea"},
  {email = "herearii.metuarea@univ-angers.fr"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.10.16"
dependencies = [
    "torch>=2.3.1",
    "torchvision>=0.18.1",
    "numpy",
    "magicgui",
    "qtpy",
    "aiofiles==23.2.1",
    "altair==5.5.0",
    "annotated-types==0.7.0",
    "antlr4-python3-runtime==4.9.3",
    "anyio==4.9.0",
    "attrs==25.3.0",
    "certifi==2025.1.31",
    "charset-normalizer==3.4.1",
    "click==8.1.8",
    "coloredlogs==15.0.1",
    "contourpy==1.3.1",
    "cycler==0.12.1",
    "fastapi==0.115.12",
    "ffmpy==0.5.0",
    "filelock==3.18.0",
    "flatbuffers==25.2.10",
    "fonttools==4.56.0",
    "fsspec==2025.3.2",
    "gradio==4.29.0",
    "gradio-client==0.16.1",
    "gradio-imageslider==0.0.20",
    "h11==0.14.0",
    "httpcore==1.0.7",
    "httpx==0.28.1",
    "huggingface-hub==0.30.1",
    "humanfriendly==10.0",
    "hydra-core==1.3.2",
    "idna==3.10",
    "imageio==2.37.0",
    "importlib-resources==6.5.2",
    "iopath==0.1.10",
    "jinja2==3.1.6",
    "joblib==1.4.2",
    "jsonschema==4.23.0",
    "jsonschema-specifications==2024.10.1",
    "kiwisolver==1.4.8",
    "lazy-loader==0.4",
    "markdown-it-py==3.0.0",
    "markupsafe==2.1.5",
    "matplotlib==3.10.1",
    "mdurl==0.1.2",
    "mpmath==1.3.0",
    "narwhals==1.33.0",
    "networkx==3.4.2",
    "numpy==1.26.4",
    "omegaconf==2.3.0",
    "onnx==1.17.0",
    "onnxruntime==1.21.0",
    "opencv-python==4.11.0.86",
    "orjson==3.10.16",
    "pandas==2.2.3",
    "pillow==10.4.0",
    "portalocker==3.1.1",
    "protobuf==6.30.2",
    "py-cpuinfo==9.0.0",
    "pycocotools==2.0.8",
    "pydantic==2.11.1",
    "pydantic-core==2.33.0",
    "pydub==0.25.1",
    "pyparsing==3.2.3",
    "pyreadline3==3.5.4",
    "python-multipart==0.0.20",
    "pytz==2025.2",
    "pyyaml==6.0.2",
    "referencing==0.36.2",
    "regex==2024.11.6",
    "requests==2.32.3",
    "rich==14.0.0",
    "rpds-py==0.24.0",
    "ruff==0.11.2",
    "safetensors==0.5.3",
    "scikit-image==0.25.2",
    "scikit-learn==1.6.1",
    "scipy==1.15.2",
    "seaborn==0.13.2",
    "semantic-version==2.10.0",
    "shellingham==1.5.4",
    "sniffio==1.3.1",
    "starlette==0.46.1",
    "sympy==1.13.1",
    "threadpoolctl==3.6.0",
    "tifffile==2025.3.30",
    "timm==1.0.15",
    "tokenizers==0.21.1",
    "tomlkit==0.12.0",
    "tqdm==4.67.1",
    "transformers==4.50.3",
    "typer==0.15.2",
    "typing-inspection==0.4.0",
    "tzdata==2025.2",
    "ultralytics==8.3.99",
    "ultralytics-thop==2.0.14",
    "urllib3==2.3.0",
    "uvicorn==0.34.0",
    "websockets==11.0.3",
]

[project.optional-dependencies]
# Allow easily installation with the full, default napari installation
# (including Qt backend) using orseg[all].
all = ["napari[all]"]

[dependency-groups]
testing = [
    "tox",
    "pytest",  # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov",  # https://pytest-cov.readthedocs.io/en/latest/
    "pytest-qt",  # https://pytest-qt.readthedocs.io/en/latest/
    "napari[qt]",  # test with napari's default Qt bindings
]

[project.entry-points."napari.manifest"]
orseg = "orseg:napari.yaml"

[project.urls]
"Bug Tracker" = "https://github.com/hereariim/orseg/issues"
"Documentation" = "https://github.com/hereariim/orseg#README.md"
"Source Code" = "https://github.com/hereariim/orseg"
"User Support" = "https://github.com/hereariim/orseg/issues"

[build-system]
requires = ["setuptools>=42.0.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml"]

[tool.setuptools_scm]
write_to = "src/orseg/_version.py"
fallback_version = "0.0.1+nogit"

[tool.black]
line-length = 79
target-version = ['py310', 'py311', 'py312', 'py313']

[tool.ruff]
line-length = 79
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]
fix = true

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
]

[project]
name = "django-qstash"
version = "0.1.3"
description = "A drop-in replacement for Celery's shared_task with Upstash QStash."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Justin Mitchel", email = "justin@codingforentrepreneurs.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]

dependencies = [
  "django>=4.2",
  "qstash>=2,<3",
  "requests>=2.30",
]
urls.Changelog = "https://github.com/jmitchel3/django-qstash"
urls.Documentation = "https://github.com/jmitchel3/django-qstash"
urls.Funding = "https://github.com/jmitchel3/django-qstash"
urls.Repository = "https://github.com/jmitchel3/django-qstash"

[tool.isort]
add_imports = [
  "from __future__ import annotations",
]
force_single_line = true
profile = "black"
src_paths = [
  ".",
  "example",
  "src",
]

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    --ds=tests.settings
    """
django_find_project = false
xfail_strict = true

[tool.coverage.run]
branch = true
parallel = true
source = [
  "django_qstash",
]
omit = [
  "*/migrations/*",
  "*/admin.py",
  "tests/*",
]

[tool.coverage.paths]
source = [
  "src/django_qstash",
  ".tox/*/lib/python*/site-packages/django_qstash",
]

[tool.coverage.report]
show_missing = true

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
mypy_path = "src/"
namespace_packages = false
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.rstcheck]
ignore_directives = [
  "autoclass",
  "autofunction",
]
report_level = "ERROR"

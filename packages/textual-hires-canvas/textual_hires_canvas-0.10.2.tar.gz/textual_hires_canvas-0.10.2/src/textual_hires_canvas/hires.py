import enum
import itertools

from textual.geometry import Size


class HiResMode(enum.Enum):
    HALFBLOCK = enum.auto()
    QUADRANT = enum.auto()
    BRAILLE = enum.auto()


hires_sizes = {
    HiResMode.HALFBLOCK: Size(1, 2),
    HiResMode.QUADRANT: Size(2, 2),
    HiResMode.BRAILLE: Size(2, 4),
}

pixels: dict[HiResMode, dict[tuple[int, ...], str | None]] = {
    HiResMode.HALFBLOCK: {(0, 0): None, (1, 0): "▀", (0, 1): "▄", (1, 1): "█"},
    HiResMode.QUADRANT: {
        (0, 0, 0, 0): None,
        (0, 0, 0, 1): "▗",
        (0, 0, 1, 0): "▖",
        (0, 0, 1, 1): "▄",
        (0, 1, 0, 0): "▝",
        (0, 1, 0, 1): "▐",
        (0, 1, 1, 0): "▞",
        (0, 1, 1, 1): "▟",
        (1, 0, 0, 0): "▘",
        (1, 0, 0, 1): "▚",
        (1, 0, 1, 0): "▌",
        (1, 0, 1, 1): "▙",
        (1, 1, 0, 0): "▀",
        (1, 1, 0, 1): "▜",
        (1, 1, 1, 0): "▛",
        (1, 1, 1, 1): "█",
    },
    HiResMode.BRAILLE: {
        (0, 0, 0, 0, 0, 0, 0, 0): None,
        (1, 0, 0, 0, 0, 0, 0, 0): "⠁",
        (0, 0, 1, 0, 0, 0, 0, 0): "⠂",
        (1, 0, 1, 0, 0, 0, 0, 0): "⠃",
        (0, 0, 0, 0, 1, 0, 0, 0): "⠄",
        (1, 0, 0, 0, 1, 0, 0, 0): "⠅",
        (0, 0, 1, 0, 1, 0, 0, 0): "⠆",
        (1, 0, 1, 0, 1, 0, 0, 0): "⠇",
        (0, 1, 0, 0, 0, 0, 0, 0): "⠈",
        (1, 1, 0, 0, 0, 0, 0, 0): "⠉",
        (0, 1, 1, 0, 0, 0, 0, 0): "⠊",
        (1, 1, 1, 0, 0, 0, 0, 0): "⠋",
        (0, 1, 0, 0, 1, 0, 0, 0): "⠌",
        (1, 1, 0, 0, 1, 0, 0, 0): "⠍",
        (0, 1, 1, 0, 1, 0, 0, 0): "⠎",
        (1, 1, 1, 0, 1, 0, 0, 0): "⠏",
        (0, 0, 0, 1, 0, 0, 0, 0): "⠐",
        (1, 0, 0, 1, 0, 0, 0, 0): "⠑",
        (0, 0, 1, 1, 0, 0, 0, 0): "⠒",
        (1, 0, 1, 1, 0, 0, 0, 0): "⠓",
        (0, 0, 0, 1, 1, 0, 0, 0): "⠔",
        (1, 0, 0, 1, 1, 0, 0, 0): "⠕",
        (0, 0, 1, 1, 1, 0, 0, 0): "⠖",
        (1, 0, 1, 1, 1, 0, 0, 0): "⠗",
        (0, 1, 0, 1, 0, 0, 0, 0): "⠘",
        (1, 1, 0, 1, 0, 0, 0, 0): "⠙",
        (0, 1, 1, 1, 0, 0, 0, 0): "⠚",
        (1, 1, 1, 1, 0, 0, 0, 0): "⠛",
        (0, 1, 0, 1, 1, 0, 0, 0): "⠜",
        (1, 1, 0, 1, 1, 0, 0, 0): "⠝",
        (0, 1, 1, 1, 1, 0, 0, 0): "⠞",
        (1, 1, 1, 1, 1, 0, 0, 0): "⠟",
        (0, 0, 0, 0, 0, 1, 0, 0): "⠠",
        (1, 0, 0, 0, 0, 1, 0, 0): "⠡",
        (0, 0, 1, 0, 0, 1, 0, 0): "⠢",
        (1, 0, 1, 0, 0, 1, 0, 0): "⠣",
        (0, 0, 0, 0, 1, 1, 0, 0): "⠤",
        (1, 0, 0, 0, 1, 1, 0, 0): "⠥",
        (0, 0, 1, 0, 1, 1, 0, 0): "⠦",
        (1, 0, 1, 0, 1, 1, 0, 0): "⠧",
        (0, 1, 0, 0, 0, 1, 0, 0): "⠨",
        (1, 1, 0, 0, 0, 1, 0, 0): "⠩",
        (0, 1, 1, 0, 0, 1, 0, 0): "⠪",
        (1, 1, 1, 0, 0, 1, 0, 0): "⠫",
        (0, 1, 0, 0, 1, 1, 0, 0): "⠬",
        (1, 1, 0, 0, 1, 1, 0, 0): "⠭",
        (0, 1, 1, 0, 1, 1, 0, 0): "⠮",
        (1, 1, 1, 0, 1, 1, 0, 0): "⠯",
        (0, 0, 0, 1, 0, 1, 0, 0): "⠰",
        (1, 0, 0, 1, 0, 1, 0, 0): "⠱",
        (0, 0, 1, 1, 0, 1, 0, 0): "⠲",
        (1, 0, 1, 1, 0, 1, 0, 0): "⠳",
        (0, 0, 0, 1, 1, 1, 0, 0): "⠴",
        (1, 0, 0, 1, 1, 1, 0, 0): "⠵",
        (0, 0, 1, 1, 1, 1, 0, 0): "⠶",
        (1, 0, 1, 1, 1, 1, 0, 0): "⠷",
        (0, 1, 0, 1, 0, 1, 0, 0): "⠸",
        (1, 1, 0, 1, 0, 1, 0, 0): "⠹",
        (0, 1, 1, 1, 0, 1, 0, 0): "⠺",
        (1, 1, 1, 1, 0, 1, 0, 0): "⠻",
        (0, 1, 0, 1, 1, 1, 0, 0): "⠼",
        (1, 1, 0, 1, 1, 1, 0, 0): "⠽",
        (0, 1, 1, 1, 1, 1, 0, 0): "⠾",
        (1, 1, 1, 1, 1, 1, 0, 0): "⠿",
        (0, 0, 0, 0, 0, 0, 1, 0): "⡀",
        (1, 0, 0, 0, 0, 0, 1, 0): "⡁",
        (0, 0, 1, 0, 0, 0, 1, 0): "⡂",
        (1, 0, 1, 0, 0, 0, 1, 0): "⡃",
        (0, 0, 0, 0, 1, 0, 1, 0): "⡄",
        (1, 0, 0, 0, 1, 0, 1, 0): "⡅",
        (0, 0, 1, 0, 1, 0, 1, 0): "⡆",
        (1, 0, 1, 0, 1, 0, 1, 0): "⡇",
        (0, 1, 0, 0, 0, 0, 1, 0): "⡈",
        (1, 1, 0, 0, 0, 0, 1, 0): "⡉",
        (0, 1, 1, 0, 0, 0, 1, 0): "⡊",
        (1, 1, 1, 0, 0, 0, 1, 0): "⡋",
        (0, 1, 0, 0, 1, 0, 1, 0): "⡌",
        (1, 1, 0, 0, 1, 0, 1, 0): "⡍",
        (0, 1, 1, 0, 1, 0, 1, 0): "⡎",
        (1, 1, 1, 0, 1, 0, 1, 0): "⡏",
        (0, 0, 0, 1, 0, 0, 1, 0): "⡐",
        (1, 0, 0, 1, 0, 0, 1, 0): "⡑",
        (0, 0, 1, 1, 0, 0, 1, 0): "⡒",
        (1, 0, 1, 1, 0, 0, 1, 0): "⡓",
        (0, 0, 0, 1, 1, 0, 1, 0): "⡔",
        (1, 0, 0, 1, 1, 0, 1, 0): "⡕",
        (0, 0, 1, 1, 1, 0, 1, 0): "⡖",
        (1, 0, 1, 1, 1, 0, 1, 0): "⡗",
        (0, 1, 0, 1, 0, 0, 1, 0): "⡘",
        (1, 1, 0, 1, 0, 0, 1, 0): "⡙",
        (0, 1, 1, 1, 0, 0, 1, 0): "⡚",
        (1, 1, 1, 1, 0, 0, 1, 0): "⡛",
        (0, 1, 0, 1, 1, 0, 1, 0): "⡜",
        (1, 1, 0, 1, 1, 0, 1, 0): "⡝",
        (0, 1, 1, 1, 1, 0, 1, 0): "⡞",
        (1, 1, 1, 1, 1, 0, 1, 0): "⡟",
        (0, 0, 0, 0, 0, 1, 1, 0): "⡠",
        (1, 0, 0, 0, 0, 1, 1, 0): "⡡",
        (0, 0, 1, 0, 0, 1, 1, 0): "⡢",
        (1, 0, 1, 0, 0, 1, 1, 0): "⡣",
        (0, 0, 0, 0, 1, 1, 1, 0): "⡤",
        (1, 0, 0, 0, 1, 1, 1, 0): "⡥",
        (0, 0, 1, 0, 1, 1, 1, 0): "⡦",
        (1, 0, 1, 0, 1, 1, 1, 0): "⡧",
        (0, 1, 0, 0, 0, 1, 1, 0): "⡨",
        (1, 1, 0, 0, 0, 1, 1, 0): "⡩",
        (0, 1, 1, 0, 0, 1, 1, 0): "⡪",
        (1, 1, 1, 0, 0, 1, 1, 0): "⡫",
        (0, 1, 0, 0, 1, 1, 1, 0): "⡬",
        (1, 1, 0, 0, 1, 1, 1, 0): "⡭",
        (0, 1, 1, 0, 1, 1, 1, 0): "⡮",
        (1, 1, 1, 0, 1, 1, 1, 0): "⡯",
        (0, 0, 0, 1, 0, 1, 1, 0): "⡰",
        (1, 0, 0, 1, 0, 1, 1, 0): "⡱",
        (0, 0, 1, 1, 0, 1, 1, 0): "⡲",
        (1, 0, 1, 1, 0, 1, 1, 0): "⡳",
        (0, 0, 0, 1, 1, 1, 1, 0): "⡴",
        (1, 0, 0, 1, 1, 1, 1, 0): "⡵",
        (0, 0, 1, 1, 1, 1, 1, 0): "⡶",
        (1, 0, 1, 1, 1, 1, 1, 0): "⡷",
        (0, 1, 0, 1, 0, 1, 1, 0): "⡸",
        (1, 1, 0, 1, 0, 1, 1, 0): "⡹",
        (0, 1, 1, 1, 0, 1, 1, 0): "⡺",
        (1, 1, 1, 1, 0, 1, 1, 0): "⡻",
        (0, 1, 0, 1, 1, 1, 1, 0): "⡼",
        (1, 1, 0, 1, 1, 1, 1, 0): "⡽",
        (0, 1, 1, 1, 1, 1, 1, 0): "⡾",
        (1, 1, 1, 1, 1, 1, 1, 0): "⡿",
        (0, 0, 0, 0, 0, 0, 0, 1): "⢀",
        (1, 0, 0, 0, 0, 0, 0, 1): "⢁",
        (0, 0, 1, 0, 0, 0, 0, 1): "⢂",
        (1, 0, 1, 0, 0, 0, 0, 1): "⢃",
        (0, 0, 0, 0, 1, 0, 0, 1): "⢄",
        (1, 0, 0, 0, 1, 0, 0, 1): "⢅",
        (0, 0, 1, 0, 1, 0, 0, 1): "⢆",
        (1, 0, 1, 0, 1, 0, 0, 1): "⢇",
        (0, 1, 0, 0, 0, 0, 0, 1): "⢈",
        (1, 1, 0, 0, 0, 0, 0, 1): "⢉",
        (0, 1, 1, 0, 0, 0, 0, 1): "⢊",
        (1, 1, 1, 0, 0, 0, 0, 1): "⢋",
        (0, 1, 0, 0, 1, 0, 0, 1): "⢌",
        (1, 1, 0, 0, 1, 0, 0, 1): "⢍",
        (0, 1, 1, 0, 1, 0, 0, 1): "⢎",
        (1, 1, 1, 0, 1, 0, 0, 1): "⢏",
        (0, 0, 0, 1, 0, 0, 0, 1): "⢐",
        (1, 0, 0, 1, 0, 0, 0, 1): "⢑",
        (0, 0, 1, 1, 0, 0, 0, 1): "⢒",
        (1, 0, 1, 1, 0, 0, 0, 1): "⢓",
        (0, 0, 0, 1, 1, 0, 0, 1): "⢔",
        (1, 0, 0, 1, 1, 0, 0, 1): "⢕",
        (0, 0, 1, 1, 1, 0, 0, 1): "⢖",
        (1, 0, 1, 1, 1, 0, 0, 1): "⢗",
        (0, 1, 0, 1, 0, 0, 0, 1): "⢘",
        (1, 1, 0, 1, 0, 0, 0, 1): "⢙",
        (0, 1, 1, 1, 0, 0, 0, 1): "⢚",
        (1, 1, 1, 1, 0, 0, 0, 1): "⢛",
        (0, 1, 0, 1, 1, 0, 0, 1): "⢜",
        (1, 1, 0, 1, 1, 0, 0, 1): "⢝",
        (0, 1, 1, 1, 1, 0, 0, 1): "⢞",
        (1, 1, 1, 1, 1, 0, 0, 1): "⢟",
        (0, 0, 0, 0, 0, 1, 0, 1): "⢠",
        (1, 0, 0, 0, 0, 1, 0, 1): "⢡",
        (0, 0, 1, 0, 0, 1, 0, 1): "⢢",
        (1, 0, 1, 0, 0, 1, 0, 1): "⢣",
        (0, 0, 0, 0, 1, 1, 0, 1): "⢤",
        (1, 0, 0, 0, 1, 1, 0, 1): "⢥",
        (0, 0, 1, 0, 1, 1, 0, 1): "⢦",
        (1, 0, 1, 0, 1, 1, 0, 1): "⢧",
        (0, 1, 0, 0, 0, 1, 0, 1): "⢨",
        (1, 1, 0, 0, 0, 1, 0, 1): "⢩",
        (0, 1, 1, 0, 0, 1, 0, 1): "⢪",
        (1, 1, 1, 0, 0, 1, 0, 1): "⢫",
        (0, 1, 0, 0, 1, 1, 0, 1): "⢬",
        (1, 1, 0, 0, 1, 1, 0, 1): "⢭",
        (0, 1, 1, 0, 1, 1, 0, 1): "⢮",
        (1, 1, 1, 0, 1, 1, 0, 1): "⢯",
        (0, 0, 0, 1, 0, 1, 0, 1): "⢰",
        (1, 0, 0, 1, 0, 1, 0, 1): "⢱",
        (0, 0, 1, 1, 0, 1, 0, 1): "⢲",
        (1, 0, 1, 1, 0, 1, 0, 1): "⢳",
        (0, 0, 0, 1, 1, 1, 0, 1): "⢴",
        (1, 0, 0, 1, 1, 1, 0, 1): "⢵",
        (0, 0, 1, 1, 1, 1, 0, 1): "⢶",
        (1, 0, 1, 1, 1, 1, 0, 1): "⢷",
        (0, 1, 0, 1, 0, 1, 0, 1): "⢸",
        (1, 1, 0, 1, 0, 1, 0, 1): "⢹",
        (0, 1, 1, 1, 0, 1, 0, 1): "⢺",
        (1, 1, 1, 1, 0, 1, 0, 1): "⢻",
        (0, 1, 0, 1, 1, 1, 0, 1): "⢼",
        (1, 1, 0, 1, 1, 1, 0, 1): "⢽",
        (0, 1, 1, 1, 1, 1, 0, 1): "⢾",
        (1, 1, 1, 1, 1, 1, 0, 1): "⢿",
        (0, 0, 0, 0, 0, 0, 1, 1): "⣀",
        (1, 0, 0, 0, 0, 0, 1, 1): "⣁",
        (0, 0, 1, 0, 0, 0, 1, 1): "⣂",
        (1, 0, 1, 0, 0, 0, 1, 1): "⣃",
        (0, 0, 0, 0, 1, 0, 1, 1): "⣄",
        (1, 0, 0, 0, 1, 0, 1, 1): "⣅",
        (0, 0, 1, 0, 1, 0, 1, 1): "⣆",
        (1, 0, 1, 0, 1, 0, 1, 1): "⣇",
        (0, 1, 0, 0, 0, 0, 1, 1): "⣈",
        (1, 1, 0, 0, 0, 0, 1, 1): "⣉",
        (0, 1, 1, 0, 0, 0, 1, 1): "⣊",
        (1, 1, 1, 0, 0, 0, 1, 1): "⣋",
        (0, 1, 0, 0, 1, 0, 1, 1): "⣌",
        (1, 1, 0, 0, 1, 0, 1, 1): "⣍",
        (0, 1, 1, 0, 1, 0, 1, 1): "⣎",
        (1, 1, 1, 0, 1, 0, 1, 1): "⣏",
        (0, 0, 0, 1, 0, 0, 1, 1): "⣐",
        (1, 0, 0, 1, 0, 0, 1, 1): "⣑",
        (0, 0, 1, 1, 0, 0, 1, 1): "⣒",
        (1, 0, 1, 1, 0, 0, 1, 1): "⣓",
        (0, 0, 0, 1, 1, 0, 1, 1): "⣔",
        (1, 0, 0, 1, 1, 0, 1, 1): "⣕",
        (0, 0, 1, 1, 1, 0, 1, 1): "⣖",
        (1, 0, 1, 1, 1, 0, 1, 1): "⣗",
        (0, 1, 0, 1, 0, 0, 1, 1): "⣘",
        (1, 1, 0, 1, 0, 0, 1, 1): "⣙",
        (0, 1, 1, 1, 0, 0, 1, 1): "⣚",
        (1, 1, 1, 1, 0, 0, 1, 1): "⣛",
        (0, 1, 0, 1, 1, 0, 1, 1): "⣜",
        (1, 1, 0, 1, 1, 0, 1, 1): "⣝",
        (0, 1, 1, 1, 1, 0, 1, 1): "⣞",
        (1, 1, 1, 1, 1, 0, 1, 1): "⣟",
        (0, 0, 0, 0, 0, 1, 1, 1): "⣠",
        (1, 0, 0, 0, 0, 1, 1, 1): "⣡",
        (0, 0, 1, 0, 0, 1, 1, 1): "⣢",
        (1, 0, 1, 0, 0, 1, 1, 1): "⣣",
        (0, 0, 0, 0, 1, 1, 1, 1): "⣤",
        (1, 0, 0, 0, 1, 1, 1, 1): "⣥",
        (0, 0, 1, 0, 1, 1, 1, 1): "⣦",
        (1, 0, 1, 0, 1, 1, 1, 1): "⣧",
        (0, 1, 0, 0, 0, 1, 1, 1): "⣨",
        (1, 1, 0, 0, 0, 1, 1, 1): "⣩",
        (0, 1, 1, 0, 0, 1, 1, 1): "⣪",
        (1, 1, 1, 0, 0, 1, 1, 1): "⣫",
        (0, 1, 0, 0, 1, 1, 1, 1): "⣬",
        (1, 1, 0, 0, 1, 1, 1, 1): "⣭",
        (0, 1, 1, 0, 1, 1, 1, 1): "⣮",
        (1, 1, 1, 0, 1, 1, 1, 1): "⣯",
        (0, 0, 0, 1, 0, 1, 1, 1): "⣰",
        (1, 0, 0, 1, 0, 1, 1, 1): "⣱",
        (0, 0, 1, 1, 0, 1, 1, 1): "⣲",
        (1, 0, 1, 1, 0, 1, 1, 1): "⣳",
        (0, 0, 0, 1, 1, 1, 1, 1): "⣴",
        (1, 0, 0, 1, 1, 1, 1, 1): "⣵",
        (0, 0, 1, 1, 1, 1, 1, 1): "⣶",
        (1, 0, 1, 1, 1, 1, 1, 1): "⣷",
        (0, 1, 0, 1, 0, 1, 1, 1): "⣸",
        (1, 1, 0, 1, 0, 1, 1, 1): "⣹",
        (0, 1, 1, 1, 0, 1, 1, 1): "⣺",
        (1, 1, 1, 1, 0, 1, 1, 1): "⣻",
        (0, 1, 0, 1, 1, 1, 1, 1): "⣼",
        (1, 1, 0, 1, 1, 1, 1, 1): "⣽",
        (0, 1, 1, 1, 1, 1, 1, 1): "⣾",
        (1, 1, 1, 1, 1, 1, 1, 1): "⣿",
    },
}

if __name__ == "__main__":

    def get_pixel_ordering(
        d8: int, d7: int, d6: int, d5: int, d4: int, d3: int, d2: int, d1: int
    ) -> tuple[int, int, int, int, int, int, int, int]:
        return d1, d4, d2, d5, d3, d6, d7, d8

    for i, perm in zip(range(0x2800, 0x2900), itertools.product([0, 1], repeat=8)):
        pixel_tuple = get_pixel_ordering(*perm)
        print(f'{pixel_tuple}: "{chr(i)}",')

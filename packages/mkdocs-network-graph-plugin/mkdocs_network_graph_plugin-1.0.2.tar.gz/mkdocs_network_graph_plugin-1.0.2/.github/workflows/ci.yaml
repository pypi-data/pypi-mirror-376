name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: pip install build setuptools-scm

      - name: Build a binary wheel and a source tarball
        run: python3 -m build --sdist --wheel --outdir dist/

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  test:
    name: Run Nox Tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: build # Ensure package builds successfully before testing
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Nox
        run: pip install nox uv

      - name: Run Nox Tests
        run: nox

  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    needs: test # Ensure tests pass before linting/type checking
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install Nox and uv
        run: pip install nox uv

      - name: Run Nox Lint and Pyright
        run: nox -s lint

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs: [build, lint-and-type-check] # Ensure tests and linting pass before publishing
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Only publish on tag pushes
    environment:
      name: pypi # Required for Trusted Publishing
      url: https://pypi.org/p/mkdocs-network-graph-plugin # Replace with your actual PyPI project URL
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1 # Use the pypa action directly

  deploy-docs:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs-material
          pip install -e .[dev]
      - name: Build MkDocs documentation
        run: mkdocs build
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

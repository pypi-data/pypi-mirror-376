[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pdf2markdown"
dynamic = ["version"]
description = "Python library and CLI tool that leverages LLMs to convert technical PDF documents to well-structured Markdown"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [
  "pdf",
  "markdown",
  "llm",
  "ocr",
  "conversion",
  "document-processing",
  "openai",
  "gpt",
  "vision",
  "transformers",
  "pdf-parser",
  "pdf-to-text",
  "document-conversion",
  "ai",
  "machine-learning"
]
authors = [
  { name = "Juan Villa", email = "juanqui@villafam.com" },
]
maintainers = [
  { name = "Juan Villa", email = "juanqui@villafam.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Information Technology",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Topic :: Multimedia :: Graphics :: Graphics Conversion",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Operating System :: OS Independent",
  "Environment :: Console",
  "Framework :: AsyncIO",
]
dependencies = [
  "pymupdf>=1.23.0",
  "Pillow>=10.0.0",
  "aiohttp>=3.9.0",
  "jinja2>=3.1.0",
  "pydantic>=2.0.0",
  "pyyaml>=6.0",
  "python-dotenv>=1.0.0",
  "aiofiles>=23.0.0",
  "click>=8.1.0",
  "rich>=13.0.0",
  "httpx>=0.25.0",
  "tenacity>=8.2.0",
  "openai>=1.0.0",
  "pymarkdownlnt>=0.9.12",
]

[project.optional-dependencies]
transformers = [
  "transformers>=4.36.0",
  "torch>=2.0.0",
  "torchvision>=0.15.0",  # Required for Qwen2.5-VL and other vision models
  "accelerate>=0.25.0",
  "sentencepiece>=0.1.99",
  "protobuf>=3.20.0",
  "einops>=0.7.0",
]

[project.urls]
Documentation = "https://github.com/juanqui/pdf2markdown#readme"
Issues = "https://github.com/juanqui/pdf2markdown/issues"
Source = "https://github.com/juanqui/pdf2markdown"

[project.scripts]
pdf2markdown = "pdf2markdown.__main__:main"

[tool.hatch.version]
path = "src/pdf2markdown/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.1.0",
  "black>=23.0.0",
  "mypy>=1.5.0",
  "ruff>=0.1.0",
  "bump-my-version>=0.18.0",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
format = [
  "black .",
  "ruff check --fix .",
]
lint = [
  "black --check .",
  "ruff check .",
]
typecheck = "mypy src/pdf2markdown"
bump-patch = "bump-my-version bump patch"
bump-minor = "bump-my-version bump minor" 
bump-major = "bump-my-version bump major"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
  "types-aiofiles",
  "types-tqdm",
  "types-pyyaml",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pdf2markdown tests}"

[tool.coverage.run]
source_pkgs = ["pdf2markdown", "tests"]
branch = true
parallel = true
omit = [
  "src/pdf2markdown/__about__.py",
]

[tool.coverage.paths]
pdf2markdown = ["src/pdf2markdown", "*/pdf2markdown/src/pdf2markdown"]
tests = ["tests", "*/pdf2markdown/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.bumpversion]
current_version = "0.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
commit = true
tag = true
tag_name = "v{new_version}"
tag_message = "Release version {new_version}"
commit_message = "Bump version: {current_version} â†’ {new_version}"

[[tool.bumpversion.files]]
filename = "src/pdf2markdown/__init__.py"
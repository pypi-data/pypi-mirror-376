Metadata-Version: 2.1
Name: vrt-lss-routing
Version: 7.23.2924
Summary: VRt.Routing [RT]
Home-page: 
Author: Veeroute Support Team
Author-email: Veeroute Support Team <servicedesk@veeroute.com>
License: Proprietary
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Keywords: OpenAPI,VRt.Routing [RT]
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: lazy-imports <2,>=1
Requires-Dist: pydantic >=2
Requires-Dist: python-dateutil >=2.8.2
Requires-Dist: typing-extensions >=4.7.1
Requires-Dist: urllib3 <3.0.0,>=2.1.0

# vrt_lss_routing
# Description

**VRt.Routing** is designed to find a route between locations and build time-distance matrices.

## Features

* Getting the distance and time between two locations, including traffic jams
* Finding a route between specified locations
* Creating a time-distance matrix

## Entity relationship diagram

![erd](../uml/routing.svg)


This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 7.23.2924
- Package version: 7.23.2924
- Generator version: 7.15.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import vrt_lss_routing
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import vrt_lss_routing
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import vrt_lss_routing
from vrt_lss_routing.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://api.edge7.veeroute.cloud
# See configuration.py for a list of all supported configuration parameters.
configuration = vrt_lss_routing.Configuration(
    host = "https://api.edge7.veeroute.cloud"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure Bearer authorization (JWT): ApiKeyAuth
configuration = vrt_lss_routing.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)


# Enter a context with an instance of the API client
with vrt_lss_routing.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = vrt_lss_routing.MatrixApi(api_client)
    matrix_task = vrt_lss_routing.MatrixTask() # MatrixTask | New request for matrix calculation.

    try:
        # Time-distance matrix
        api_response = api_instance.run_matrix_calculation(matrix_task)
        print("The response of MatrixApi->run_matrix_calculation:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling MatrixApi->run_matrix_calculation: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.edge7.veeroute.cloud*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*MatrixApi* | [**run_matrix_calculation**](docs/MatrixApi.md#run_matrix_calculation) | **POST** /routing/matrix/calculation | Time-distance matrix
*RouteApi* | [**run_route_calculation**](docs/RouteApi.md#run_route_calculation) | **POST** /routing/route/calculation | Route between points
*SystemApi* | [**check**](docs/SystemApi.md#check) | **GET** /routing/system/check | Checking the availability
*SystemApi* | [**file**](docs/SystemApi.md#file) | **GET** /routing/file/{filename} | Getting the documentation
*SystemApi* | [**version**](docs/SystemApi.md#version) | **GET** /routing/system/version | Getting the service version


## Documentation For Models

 - [Attribute](docs/Attribute.md)
 - [CheckResult](docs/CheckResult.md)
 - [General400](docs/General400.md)
 - [General402](docs/General402.md)
 - [General404](docs/General404.md)
 - [General404Detail](docs/General404Detail.md)
 - [General429](docs/General429.md)
 - [General500](docs/General500.md)
 - [GeoSettings](docs/GeoSettings.md)
 - [Geopoint](docs/Geopoint.md)
 - [MatrixResult](docs/MatrixResult.md)
 - [MatrixTask](docs/MatrixTask.md)
 - [Route](docs/Route.md)
 - [RouteLeg](docs/RouteLeg.md)
 - [RouteResult](docs/RouteResult.md)
 - [RouteStatistics](docs/RouteStatistics.md)
 - [RouteStep](docs/RouteStep.md)
 - [RouteTask](docs/RouteTask.md)
 - [RouteWaypoint](docs/RouteWaypoint.md)
 - [RoutingMatrix](docs/RoutingMatrix.md)
 - [RoutingMatrixWaypoint](docs/RoutingMatrixWaypoint.md)
 - [SchemaError](docs/SchemaError.md)
 - [Service](docs/Service.md)
 - [TimeWindow](docs/TimeWindow.md)
 - [Tracedata](docs/Tracedata.md)
 - [Trackpoint](docs/Trackpoint.md)
 - [TransportType](docs/TransportType.md)
 - [VersionResult](docs/VersionResult.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="ApiKeyAuth"></a>
### ApiKeyAuth

- **Type**: Bearer authentication (JWT)


## Author

servicedesk@veeroute.com



# ==============================================
# SuperQuantX .gitignore - Comprehensive Python Project
# ==============================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
test-results/
.test_data/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
docs/build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb_orig

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml
.pdm-python

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.*
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==============================================
# IDE and Editor Files
# ==============================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to use the default PyCharm .gitignore template.
.idea/

# Visual Studio Code
.vscode/
.history/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==============================================
# Operating System Files
# ==============================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# ==============================================
# Claude Code and AI Assistant Files
# ==============================================

# Claude Code configuration and cache
.claude/
.claude.*
claude_cache/
.anthropic/
.anthropic.*

# ==============================================
# Quantum Computing Platform Files
# ==============================================

# Qiskit
.qiskit/
qiskit.log
qiskit_cache/

# Amazon Braket
.braket/
braket_cache/

# Azure Quantum
.azure_quantum/
azure_quantum_cache/

# D-Wave
.dwave_config/
dwave_cache/

# Rigetti
.rigetti_config/
rigetti_cache/

# IBM Quantum
.ibm_quantum/
ibm_quantum_cache/

# Google Quantum AI
.google_quantum/
google_quantum_cache/

# Quantum circuit files (if temporary)
*.qasm
*.quil
*.pulse
*.qobj
*.pulse_schedule

# ==============================================
# Data and Output Files
# ==============================================

# Data files
*.h5
*.hdf5
*.npz
*.pkl
*.pickle
*.parquet
*.feather
*.csv
*.json
*.yaml
*.yml
!mkdocs.yml
!.github/**/*.yml
!.github/**/*.yaml
data/
raw_data/
processed_data/
*.sqlite
*.db

# Model files
*.model
*.joblib
*.pt
*.pth
*.ckpt
*.safetensors
models/
checkpoints/

# Results and outputs
results/
outputs/
logs/
plots/
figures/
*.png
!resources/*.png
!docs/assets/logo.png
*.jpg
*.jpeg
*.gif
*.svg
*.pdf
*.eps

# ==============================================
# Benchmarking and Performance
# ==============================================

# Benchmark results
.benchmarks/
benchmarks/
benchmark_results/
*.benchmark
perf_results/
profiling/
*.prof
*.profile

# ==============================================
# Temporary and Cache Files
# ==============================================

# Temporary files
*.tmp
*.temp
.temp/
.temporary/
tmp/
temp/

# Cache files
.cache/
cache/
.cached/
*.cache

# Lock files
*.lock

# ==============================================
# Development and Testing
# ==============================================

# Pre-commit
.pre-commit-config.yaml.bak

# Ruff cache
.ruff_cache/

# Black cache
.black_cache/

# Coverage files
.coverage*
htmlcov/
coverage/

# Test artifacts
.pytest_cache/
.tox/
.nox/

# ==============================================
# Documentation Build Files
# ==============================================

# MkDocs
/site/
site/

# Sphinx
docs/_build/
docs/build/
_build/

# ==============================================
# Configuration and Secrets
# ==============================================

# Configuration files with sensitive information
config.yaml
config.json
*.credentials
*.key
*.pem
*.p12
secrets.yaml
secrets.json
.secrets/
credentials/

# API keys and tokens
.env.local
.env.production
.env.staging
.env.development
*.token
*.apikey

# ==============================================
# Package Managers
# ==============================================

# UV (Astral UV package manager)
.uv/
uv.lock

# Conda
.conda/
environment.yml

# Node.js (for docs or tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn/

# ==============================================
# Jupyter and Notebooks
# ==============================================

# Jupyter Notebook Checkpoints
.ipynb_checkpoints/

# Jupyter Lab
.jupyter/

# JupyterLite
.jupyterlite.doit.db

# ==============================================
# Miscellaneous
# ==============================================

# Backup files
*.bak
*.backup
*~
*.orig

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# System files
.DS_Store?
Thumbs.db?

# Custom project-specific patterns
# Add any SuperQuantX-specific patterns here
quantum_experiments/
experiment_logs/
quantum_results/
circuit_cache/
backend_cache/
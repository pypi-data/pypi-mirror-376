[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "daggerml-cli"
dynamic = ["version"]
authors = [
  { name = "Micha Niskin", email = "micha.niskin@gmail.com" },
]
description = "DaggerML's cli backend"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click",
  "jmespath",
  "lmdb",
  "msgpack",
  "tabulate",
  "asciidag",
]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
]

[project.scripts]
dml = "daggerml_cli.cli:cli"
dml-python-fork-adapter = "daggerml_cli.python_fork_adapter:main"

[project.urls]
Homepage = "https://daggerml.com"
Documentation = "https://daggerml.com"
Issues = "https://github.com/daggerml/daggerml-cli/issues"
Source = "https://github.com/daggerml/daggerml-cli"

[tool.pytest.ini_options]
pythonpath = "tests/"
minversion = "6.0"
addopts = "-ra --ignore=submodules/"
testpaths = [
  "tests",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "serial",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "only-version"   # use tag as version
local_scheme = "no-local-version"  # pypi does not support local-schemes
tag_regex = "^v(?P<version>[0-9]+(?:\\.[0-9]+)*[a-zA-Z0-9\\.\\-]*)$"  # pypi regex
version_file = "src/daggerml_cli/__about__.py"  # write version info to this file
relative_to = "{root:uri}"

[tool.hatch.build.targets.wheel]
packages = ["src/daggerml_cli"]
artifacts = [
  "src/daggerml_cli/__about__.py"  # add to hatch build because it's git ignored
]

[tool.hatch.envs.default]
python = "3.10"
dependencies = [
  "twine",
]
features = ["test"]

[tool.hatch.envs.test-all]
template = "default"

[[tool.hatch.envs.test-all.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "B", "I", "PGH004"]
ignore = []
unfixable = ["B"]

[tool.ruff.lint.isort]
known-first-party = ["daggerml_cli"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["daggerml_cli"]
branch = true
parallel = true
omit = [
  "src/daggerml_cli/__init__.py",
]

[tool.coverage.paths]
daggerml_cli = ["src/daggerml_cli", "*/daggerml-cli/src/daggerml_cli"]
tests = ["tests", "*/daggerml-cli/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pyright]
include = ["src"]
defineConstant = { DEBUG = true }
typeCheckingMode = "basic"
reportGeneralTypeIssues = false
reportMissingImports = "error"
reportMissingTypeStubs = false
reportOptionalCall = false
reportOptionalMemberAccess = false

Metadata-Version: 2.4
Name: pystringtoolkit
Version: 0.1.4
Summary: Handy string utilities for Python
Home-page: https://github.com/RaeesFatima/pystringtoolkit
Author: Raees Fatima
Project-URL: Source, https://github.com/RaeesFatima/pystringtoolkit
Project-URL: Bug Tracker, https://github.com/RaeesFatima/pystringtoolkit/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-python
Dynamic: summary

# PyStringToolkit

[![PyPI version](https://badge.fury.io/py/pystringtoolkit.svg)](https://pypi.org/project/pystringtoolkit/)
[![PyPI Downloads](https://static.pepy.tech/personalized-badge/pystringtoolkit?period=total&units=INTERNATIONAL_SYSTEM&left_color=BLACK&right_color=ORANGE&left_text=downloads)](https://pepy.tech/projects/pystringtoolkit)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
![Contributions welcome](https://img.shields.io/badge/contributions-welcome-blue.svg?style=flat)


**PyStringToolkit** is a lightweight and intuitive Python library offering a rich set of utilities for string manipulation and transformation. Whether you're building web applications, preprocessing text for machine learning, or just want cleaner and more readable code â€” this toolkit simplifies the process with clean and reusable functions.

---

## âœ¨ Key Features

### ðŸ”  Case Conversion Utilities
Transform strings between common naming conventions:

- `to_snake_case()` â†’ Converts text to `snake_case`
- `to_camel_case()` â†’ Converts text to `camelCase`
- `to_pascal_case()` â†’ Converts text to `PascalCase`
- `to_kebab_case()` â†’ Converts text to `kebab-case`
- `to_upper_case()` â†’ Converts all letters to uppercase
- `to_lower_case()` â†’ Converts all letters to lowercase
- `to_title_case()` â†’ Capitalizes the first letter of each word
- `to_alternating_case()` â†’  alternates uppercase and lowercase characters in a string
### ðŸ§¹ Text Cleaning Functions
Remove unwanted characters and normalize formatting:

- `remove_punctuation()` â†’ Strips punctuation, preserving only letters and digits
- `remove_whitespaces()` â†’ Removes all whitespaces from the string
- `remove_extra_spaces()` â†’ Reduces multiple spaces to a single space
- `truncate(length)` â†’ Cuts off text after a specified length, adding ellipsis
- `contains_only_alpha()` â†’ Checks if the string contains only alphabetic characters
- `strip_html_tags()` -> remove any HTML tags in a string

### ðŸ”§ String Generation Tools
Helpful tools for generating and formatting text:

- `slugify()` â†’ Converts text into URL-friendly slugs (`"Hello World!" â†’ "hello-world"`)
- `random_string(length)` â†’ Generates a random alphanumeric string of a given length

### ðŸ“§ Validators
- `is_email()` â†’ function validates if a string is a properly formatted email address

---

## ðŸ“¦ Installation  

Install the latest version via pip:

```bash
pip install pystringtoolkit
```
## Example

```python
from pystringtoolkit import to_snake_case

print(to_snake_case("Hello World!"))  # hello_world
```
## Contribution guide
 You can find the contribution guide here to contribute in this project.
[Contribution Guide](CONTRIBUTING.md) 
Thanks

## Documentation

Full documentation is available here ðŸ‘‰ [PyStringToolkit Docs](https://pystringtoolkit-documentation.readthedocs.io/en/latest/)

The docs include:
- Installation guide
- Usage patterns & best practices

## Contributors

We value our contributors!  

All the people who help improve **PyStringToolkit** are listed in [CONTRIBUTORS.md](CONTRIBUTORS.md).  

A huge thanks to everyone â€” whether itâ€™s code, docs, tests, or ideas ðŸ™Œ


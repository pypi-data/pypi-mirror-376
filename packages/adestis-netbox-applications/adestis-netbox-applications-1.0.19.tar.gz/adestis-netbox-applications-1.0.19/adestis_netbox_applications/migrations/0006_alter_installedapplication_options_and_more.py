# Generated by Django 5.1.8 on 2025-06-24 10:18

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('adestis_netbox_applications', '0005_rename_tenant_groups_installedapplication_tenant_group_and_more'),
        ('dcim', '0200_populate_mac_addresses'),
        ('extras', '0123_journalentry_kind_default'),
        ('tenancy', '0017_natural_ordering'),
        ('virtualization', '0048_populate_mac_addresses'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='installedapplication',
            options={'ordering': ('contact',)},
        ),
        migrations.RemoveField(
            model_name='installedapplication',
            name='manufacturer',
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='installedapplication_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='status_date',
            field=models.DateField(null=True),
        ),
        migrations.RemoveField(
            model_name='installedapplication',
            name='cluster',
        ),
        migrations.RemoveField(
            model_name='installedapplication',
            name='cluster_group',
        ),
        migrations.RemoveField(
            model_name='installedapplication',
            name='device',
        ),
        migrations.AlterField(
            model_name='installedapplication',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='applications_tenant', to='tenancy.tenant'),
        ),
        migrations.AlterField(
            model_name='installedapplication',
            name='tenant_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='applications_tenant_group', to='tenancy.tenantgroup'),
        ),
        migrations.AlterField(
            model_name='installedapplication',
            name='url',
            field=models.URLField(blank=True, max_length=300),
        ),
        migrations.RemoveField(
            model_name='installedapplication',
            name='virtual_machine',
        ),
        migrations.CreateModel(
            name='ClusterAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_assignments', to='virtualization.cluster')),
                ('installedapplication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adestis_netbox_applications.installedapplication')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClusterGroupAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('cluster_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_group_assignments', to='virtualization.clustergroup')),
                ('installedapplication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adestis_netbox_applications.installedapplication')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_assignments', to='dcim.device')),
                ('installedapplication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='adestis_netbox_applications.installedapplication')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('status', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('url', models.URLField(max_length=300)),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='software_manufacturer', to='dcim.manufacturer')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Software',
                'verbose_name_plural': 'Software',
            },
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='software',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='applications_software', to='adestis_netbox_applications.software'),
        ),
        migrations.CreateModel(
            name='VirtualMachineAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('installedapplication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adestis_netbox_applications.installedapplication')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('virtual_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_machine_assignments', to='virtualization.virtualmachine')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='cluster',
            field=models.ManyToManyField(blank=True, related_name='installedapplication', through='adestis_netbox_applications.ClusterAssignment', to='virtualization.cluster'),
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='cluster_group',
            field=models.ManyToManyField(blank=True, related_name='installedapplication', through='adestis_netbox_applications.ClusterGroupAssignment', to='virtualization.clustergroup'),
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='device',
            field=models.ManyToManyField(blank=True, related_name='installedapplication', through='adestis_netbox_applications.DeviceAssignment', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='installedapplication',
            name='virtual_machine',
            field=models.ManyToManyField(blank=True, related_name='installedapplication', through='adestis_netbox_applications.VirtualMachineAssignment', to='virtualization.virtualmachine'),
        ),
    ]

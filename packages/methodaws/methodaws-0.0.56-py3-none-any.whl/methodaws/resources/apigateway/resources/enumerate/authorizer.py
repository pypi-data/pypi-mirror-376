# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .authorization_type import AuthorizationType
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class Authorizer(UniversalBaseModel):
    id: str
    name: str
    type: AuthorizationType
    provider_arns: typing.Optional[typing.List[str]] = pydantic.Field(alias="providerArns", default=None)
    uri: typing.Optional[str] = None
    credentials: typing.Optional[str] = None
    identity_source: typing.Optional[typing.List[str]] = pydantic.Field(alias="identitySource", default=None)
    identity_validation_expression: typing.Optional[str] = pydantic.Field(
        alias="identityValidationExpression", default=None
    )
    result_ttl_in_seconds: typing.Optional[int] = pydantic.Field(alias="resultTtlInSeconds", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

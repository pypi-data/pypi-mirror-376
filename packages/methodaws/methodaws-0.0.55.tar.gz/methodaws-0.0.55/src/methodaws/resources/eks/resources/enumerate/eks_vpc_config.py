# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .eks_endpoint_config_response import EksEndpointConfigResponse
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class EksVpcConfig(UniversalBaseModel):
    vpc_id: typing.Optional[str] = pydantic.Field(alias="vpcId", default=None)
    cluster_security_group_id: typing.Optional[str] = pydantic.Field(alias="clusterSecurityGroupId", default=None)
    endpoint_config_response: typing.Optional[EksEndpointConfigResponse] = pydantic.Field(
        alias="endpointConfigResponse", default=None
    )
    public_access_cidrs: typing.Optional[typing.List[str]] = pydantic.Field(alias="publicAccessCidrs", default=None)
    security_group_ids: typing.Optional[typing.List[str]] = pydantic.Field(alias="securityGroupIds", default=None)
    subnet_ids: typing.Optional[typing.List[str]] = pydantic.Field(alias="subnetIds", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

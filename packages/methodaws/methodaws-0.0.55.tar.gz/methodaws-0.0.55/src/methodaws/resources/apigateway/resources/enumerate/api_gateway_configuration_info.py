# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .api_gateway_version import ApiGatewayVersion
import typing
import datetime as dt
import pydantic
from .endpoint_type import EndpointType
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class ApiGatewayConfigurationInfo(UniversalBaseModel):
    version: ApiGatewayVersion
    description: typing.Optional[str] = None
    created_time: typing.Optional[dt.datetime] = pydantic.Field(alias="createdTime", default=None)
    endpoint_configuration: typing.Optional[EndpointType] = pydantic.Field(alias="endpointConfiguration", default=None)
    execution_role_arn: typing.Optional[str] = pydantic.Field(alias="executionRoleArn", default=None)
    base_url: typing.Optional[str] = pydantic.Field(alias="baseUrl", default=None)
    api_key_source: typing.Optional[str] = pydantic.Field(alias="apiKeySource", default=None)
    stage: typing.Optional[str] = None
    client_certificate_id: typing.Optional[str] = pydantic.Field(alias="clientCertificateId", default=None)
    minimum_compression_size: typing.Optional[int] = pydantic.Field(alias="minimumCompressionSize", default=None)
    api_endpoint: typing.Optional[str] = pydantic.Field(alias="apiEndpoint", default=None)
    protocol_type: typing.Optional[str] = pydantic.Field(alias="protocolType", default=None)
    disable_execute_api_endpoint: typing.Optional[bool] = pydantic.Field(
        alias="disableExecuteApiEndpoint", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from .integration import Integration
from .authorization_type import AuthorizationType
from .authorizer import Authorizer
import pydantic
from .throttle_settings import ThrottleSettings
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class Route(UniversalBaseModel):
    path: str
    method: str
    integration: typing.Optional[Integration] = None
    authorization: typing.Optional[AuthorizationType] = None
    authorizer: typing.Optional[Authorizer] = None
    api_key_required: typing.Optional[bool] = pydantic.Field(alias="apiKeyRequired", default=None)
    throttle: typing.Optional[ThrottleSettings] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devhub-python"
version = "0.1.0"
description = "Python SDK for DevHub API"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "DevHub Team", email = "support@devotel.io" },
]
keywords = ["api", "communication", "sms", "email", "whatsapp", "rcs"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests>=2.25.0",
    "pydantic>=1.8.0,<3.0.0",
    "typing-extensions>=4.0.0; python_version<'3.11'",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-mock>=3.6",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=4.0",
    "mypy>=0.910",
    "pre-commit>=2.15",
]
docs = [
    "mkdocs>=1.4",
    "mkdocs-material>=8.0",
    "mkdocstrings[python]>=0.18",
]

[project.urls]
Homepage = "https://github.com/devotel/devhub-python"
Documentation = "https://devotel.github.io/devhub-python/"
Repository = "https://github.com/devotel/devhub-python"
Issues = "https://github.com/devotel/devhub-python/issues"

[tool.hatch.version]
path = "src/devhub_python/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/devhub_python"]

[tool.hatch.build]
include = ["src/"]

[tool.hatch.build.sources]
"src" = ""

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/devhub_python",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

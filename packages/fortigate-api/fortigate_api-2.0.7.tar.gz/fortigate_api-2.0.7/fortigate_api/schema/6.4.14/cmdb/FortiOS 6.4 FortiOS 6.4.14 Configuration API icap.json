{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "icap\/profile",
            "description": "Configure ICAP profiles."
        },
        {
            "name": "icap\/server",
            "description": "Configure ICAP servers."
        }
    ],
    "paths": {
        "\/icap\/profile\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "ICAP profile name.",
                                    "maxLength": 35
                                },
                                "request": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP request is passed to an ICAP server.   \ndisable:Disable HTTP request passing to ICAP server.   \nenable:Enable HTTP request passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "response": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP response is passed to an ICAP server.   \ndisable:Disable HTTP response passing to ICAP server.   \nenable:Enable HTTP response passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "streaming-content-bypass": {
                                    "type": "string",
                                    "description": "Enable\/disable bypassing of ICAP server for streaming content.   \ndisable:Disable bypassing of ICAP server for streaming content.   \nenable:Enable bypassing of ICAP server for streaming content.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview": {
                                    "type": "string",
                                    "description": "Enable\/disable preview of data to ICAP server.   \ndisable:Disable preview of data to ICAP server.   \nenable:Enable preview of data to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview-data-length": {
                                    "type": "integer",
                                    "description": "Preview data length to be sent to ICAP server.",
                                    "maximum": 4096,
                                    "minimum": 0
                                },
                                "request-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP request.",
                                    "maxLength": 35
                                },
                                "response-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP response.",
                                    "maxLength": 35
                                },
                                "request-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP request.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "response-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP response.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "request-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP request processing service.",
                                    "maxLength": 127
                                },
                                "response-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP response processing service.",
                                    "maxLength": 127
                                },
                                "methods": {
                                    "type": "string",
                                    "description": "The allowed HTTP methods that will be sent to ICAP server for further processing.   \ndelete:Forward HTTP request or response with DELETE method to ICAP server for further processing.   \nget:Forward HTTP request or response with GET method to ICAP server for further processing.   \nhead:Forward HTTP request or response with HEAD method to ICAP server for further processing.   \noptions:Forward HTTP request or response with OPTIONS method to ICAP server for further processing.   \npost:Forward HTTP request or response with POST method to ICAP server for further processing.   \nput:Forward HTTP request or response with PUT method to ICAP server for further processing.   \ntrace:Forward HTTP request or response with TRACE method to ICAP server for further processing.   \nother:Forward HTTP request or response with All other methods to ICAP server for further processing.",
                                    "enum": [
                                        "delete",
                                        "get",
                                        "head",
                                        "options",
                                        "post",
                                        "put",
                                        "trace",
                                        "other"
                                    ]
                                },
                                "response-req-hdr": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of req-hdr for ICAP response modification (respmod) processing.   \ndisable:Do not add req-hdr for response modification (respmod) processing.   \nenable:Add req-hdr for response modification (respmod) processing.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "respmod-default-action": {
                                    "type": "string",
                                    "description": "Default action to ICAP response modification (respmod) processing.   \nforward:Forward response to icap server unless a rule specifies not to.   \nbypass:Don't forward request to icap server unless a rule specifies to forward the request.",
                                    "enum": [
                                        "forward",
                                        "bypass"
                                    ]
                                },
                                "icap-headers": {
                                    "description": "Configure ICAP forwarded request headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "respmod-forward-rules": {
                                    "description": "ICAP response mode forward rules.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 63
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Address object for the host.",
                                                "maxLength": 79
                                            },
                                            "header-group": {
                                                "description": "HTTP header group.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "header-name": {
                                                            "type": "string",
                                                            "description": "HTTP header.",
                                                            "maxLength": 79
                                                        },
                                                        "header": {
                                                            "type": "string",
                                                            "description": "HTTP header regular expression.",
                                                            "maxLength": 255
                                                        },
                                                        "case-sensitivity": {
                                                            "type": "string",
                                                            "description": "Enable\/disable case sensitivity when matching header.   \ndisable:Ignore case when matching header.   \nenable:Do not ignore case when matching header.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to be taken for ICAP server.   \nforward:Forward request to ICAP server when this rule is matched.   \nbypass:Don't forward request to ICAP server when this rule is matched.",
                                                "enum": [
                                                    "forward",
                                                    "bypass"
                                                ]
                                            },
                                            "http-resp-status-code": {
                                                "description": "HTTP response status code.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "description": "HTTP response status code.",
                                                            "maximum": 599,
                                                            "minimum": 100
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "icap\/profile"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "ICAP profile name.",
                                    "maxLength": 35
                                },
                                "request": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP request is passed to an ICAP server.   \ndisable:Disable HTTP request passing to ICAP server.   \nenable:Enable HTTP request passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "response": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP response is passed to an ICAP server.   \ndisable:Disable HTTP response passing to ICAP server.   \nenable:Enable HTTP response passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "streaming-content-bypass": {
                                    "type": "string",
                                    "description": "Enable\/disable bypassing of ICAP server for streaming content.   \ndisable:Disable bypassing of ICAP server for streaming content.   \nenable:Enable bypassing of ICAP server for streaming content.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview": {
                                    "type": "string",
                                    "description": "Enable\/disable preview of data to ICAP server.   \ndisable:Disable preview of data to ICAP server.   \nenable:Enable preview of data to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview-data-length": {
                                    "type": "integer",
                                    "description": "Preview data length to be sent to ICAP server.",
                                    "maximum": 4096,
                                    "minimum": 0
                                },
                                "request-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP request.",
                                    "maxLength": 35
                                },
                                "response-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP response.",
                                    "maxLength": 35
                                },
                                "request-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP request.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "response-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP response.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "request-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP request processing service.",
                                    "maxLength": 127
                                },
                                "response-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP response processing service.",
                                    "maxLength": 127
                                },
                                "methods": {
                                    "type": "string",
                                    "description": "The allowed HTTP methods that will be sent to ICAP server for further processing.   \ndelete:Forward HTTP request or response with DELETE method to ICAP server for further processing.   \nget:Forward HTTP request or response with GET method to ICAP server for further processing.   \nhead:Forward HTTP request or response with HEAD method to ICAP server for further processing.   \noptions:Forward HTTP request or response with OPTIONS method to ICAP server for further processing.   \npost:Forward HTTP request or response with POST method to ICAP server for further processing.   \nput:Forward HTTP request or response with PUT method to ICAP server for further processing.   \ntrace:Forward HTTP request or response with TRACE method to ICAP server for further processing.   \nother:Forward HTTP request or response with All other methods to ICAP server for further processing.",
                                    "enum": [
                                        "delete",
                                        "get",
                                        "head",
                                        "options",
                                        "post",
                                        "put",
                                        "trace",
                                        "other"
                                    ]
                                },
                                "response-req-hdr": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of req-hdr for ICAP response modification (respmod) processing.   \ndisable:Do not add req-hdr for response modification (respmod) processing.   \nenable:Add req-hdr for response modification (respmod) processing.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "respmod-default-action": {
                                    "type": "string",
                                    "description": "Default action to ICAP response modification (respmod) processing.   \nforward:Forward response to icap server unless a rule specifies not to.   \nbypass:Don't forward request to icap server unless a rule specifies to forward the request.",
                                    "enum": [
                                        "forward",
                                        "bypass"
                                    ]
                                },
                                "icap-headers": {
                                    "description": "Configure ICAP forwarded request headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "respmod-forward-rules": {
                                    "description": "ICAP response mode forward rules.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 63
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Address object for the host.",
                                                "maxLength": 79
                                            },
                                            "header-group": {
                                                "description": "HTTP header group.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "header-name": {
                                                            "type": "string",
                                                            "description": "HTTP header.",
                                                            "maxLength": 79
                                                        },
                                                        "header": {
                                                            "type": "string",
                                                            "description": "HTTP header regular expression.",
                                                            "maxLength": 255
                                                        },
                                                        "case-sensitivity": {
                                                            "type": "string",
                                                            "description": "Enable\/disable case sensitivity when matching header.   \ndisable:Ignore case when matching header.   \nenable:Do not ignore case when matching header.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to be taken for ICAP server.   \nforward:Forward request to ICAP server when this rule is matched.   \nbypass:Don't forward request to ICAP server when this rule is matched.",
                                                "enum": [
                                                    "forward",
                                                    "bypass"
                                                ]
                                            },
                                            "http-resp-status-code": {
                                                "description": "HTTP response status code.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "description": "HTTP response status code.",
                                                            "maximum": 599,
                                                            "minimum": 100
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "icap\/profile"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "icap\/profile"
                ]
            }
        },
        "\/icap\/profile": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "ICAP profile name.",
                                    "maxLength": 35
                                },
                                "request": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP request is passed to an ICAP server.   \ndisable:Disable HTTP request passing to ICAP server.   \nenable:Enable HTTP request passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "response": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP response is passed to an ICAP server.   \ndisable:Disable HTTP response passing to ICAP server.   \nenable:Enable HTTP response passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "streaming-content-bypass": {
                                    "type": "string",
                                    "description": "Enable\/disable bypassing of ICAP server for streaming content.   \ndisable:Disable bypassing of ICAP server for streaming content.   \nenable:Enable bypassing of ICAP server for streaming content.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview": {
                                    "type": "string",
                                    "description": "Enable\/disable preview of data to ICAP server.   \ndisable:Disable preview of data to ICAP server.   \nenable:Enable preview of data to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview-data-length": {
                                    "type": "integer",
                                    "description": "Preview data length to be sent to ICAP server.",
                                    "maximum": 4096,
                                    "minimum": 0
                                },
                                "request-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP request.",
                                    "maxLength": 35
                                },
                                "response-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP response.",
                                    "maxLength": 35
                                },
                                "request-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP request.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "response-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP response.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "request-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP request processing service.",
                                    "maxLength": 127
                                },
                                "response-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP response processing service.",
                                    "maxLength": 127
                                },
                                "methods": {
                                    "type": "string",
                                    "description": "The allowed HTTP methods that will be sent to ICAP server for further processing.   \ndelete:Forward HTTP request or response with DELETE method to ICAP server for further processing.   \nget:Forward HTTP request or response with GET method to ICAP server for further processing.   \nhead:Forward HTTP request or response with HEAD method to ICAP server for further processing.   \noptions:Forward HTTP request or response with OPTIONS method to ICAP server for further processing.   \npost:Forward HTTP request or response with POST method to ICAP server for further processing.   \nput:Forward HTTP request or response with PUT method to ICAP server for further processing.   \ntrace:Forward HTTP request or response with TRACE method to ICAP server for further processing.   \nother:Forward HTTP request or response with All other methods to ICAP server for further processing.",
                                    "enum": [
                                        "delete",
                                        "get",
                                        "head",
                                        "options",
                                        "post",
                                        "put",
                                        "trace",
                                        "other"
                                    ]
                                },
                                "response-req-hdr": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of req-hdr for ICAP response modification (respmod) processing.   \ndisable:Do not add req-hdr for response modification (respmod) processing.   \nenable:Add req-hdr for response modification (respmod) processing.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "respmod-default-action": {
                                    "type": "string",
                                    "description": "Default action to ICAP response modification (respmod) processing.   \nforward:Forward response to icap server unless a rule specifies not to.   \nbypass:Don't forward request to icap server unless a rule specifies to forward the request.",
                                    "enum": [
                                        "forward",
                                        "bypass"
                                    ]
                                },
                                "icap-headers": {
                                    "description": "Configure ICAP forwarded request headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "respmod-forward-rules": {
                                    "description": "ICAP response mode forward rules.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 63
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Address object for the host.",
                                                "maxLength": 79
                                            },
                                            "header-group": {
                                                "description": "HTTP header group.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "header-name": {
                                                            "type": "string",
                                                            "description": "HTTP header.",
                                                            "maxLength": 79
                                                        },
                                                        "header": {
                                                            "type": "string",
                                                            "description": "HTTP header regular expression.",
                                                            "maxLength": 255
                                                        },
                                                        "case-sensitivity": {
                                                            "type": "string",
                                                            "description": "Enable\/disable case sensitivity when matching header.   \ndisable:Ignore case when matching header.   \nenable:Do not ignore case when matching header.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to be taken for ICAP server.   \nforward:Forward request to ICAP server when this rule is matched.   \nbypass:Don't forward request to ICAP server when this rule is matched.",
                                                "enum": [
                                                    "forward",
                                                    "bypass"
                                                ]
                                            },
                                            "http-resp-status-code": {
                                                "description": "HTTP response status code.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "description": "HTTP response status code.",
                                                            "maximum": 599,
                                                            "minimum": 100
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "icap\/profile"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "ICAP profile name.",
                                    "maxLength": 35
                                },
                                "request": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP request is passed to an ICAP server.   \ndisable:Disable HTTP request passing to ICAP server.   \nenable:Enable HTTP request passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "response": {
                                    "type": "string",
                                    "description": "Enable\/disable whether an HTTP response is passed to an ICAP server.   \ndisable:Disable HTTP response passing to ICAP server.   \nenable:Enable HTTP response passing to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "streaming-content-bypass": {
                                    "type": "string",
                                    "description": "Enable\/disable bypassing of ICAP server for streaming content.   \ndisable:Disable bypassing of ICAP server for streaming content.   \nenable:Enable bypassing of ICAP server for streaming content.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview": {
                                    "type": "string",
                                    "description": "Enable\/disable preview of data to ICAP server.   \ndisable:Disable preview of data to ICAP server.   \nenable:Enable preview of data to ICAP server.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "preview-data-length": {
                                    "type": "integer",
                                    "description": "Preview data length to be sent to ICAP server.",
                                    "maximum": 4096,
                                    "minimum": 0
                                },
                                "request-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP request.",
                                    "maxLength": 35
                                },
                                "response-server": {
                                    "type": "string",
                                    "description": "ICAP server to use for an HTTP response.",
                                    "maxLength": 35
                                },
                                "request-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP request.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "response-failure": {
                                    "type": "string",
                                    "description": "Action to take if the ICAP server cannot be contacted when processing an HTTP response.   \nerror:Error.   \nbypass:Bypass.",
                                    "enum": [
                                        "error",
                                        "bypass"
                                    ]
                                },
                                "request-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP request processing service.",
                                    "maxLength": 127
                                },
                                "response-path": {
                                    "type": "string",
                                    "description": "Path component of the ICAP URI that identifies the HTTP response processing service.",
                                    "maxLength": 127
                                },
                                "methods": {
                                    "type": "string",
                                    "description": "The allowed HTTP methods that will be sent to ICAP server for further processing.   \ndelete:Forward HTTP request or response with DELETE method to ICAP server for further processing.   \nget:Forward HTTP request or response with GET method to ICAP server for further processing.   \nhead:Forward HTTP request or response with HEAD method to ICAP server for further processing.   \noptions:Forward HTTP request or response with OPTIONS method to ICAP server for further processing.   \npost:Forward HTTP request or response with POST method to ICAP server for further processing.   \nput:Forward HTTP request or response with PUT method to ICAP server for further processing.   \ntrace:Forward HTTP request or response with TRACE method to ICAP server for further processing.   \nother:Forward HTTP request or response with All other methods to ICAP server for further processing.",
                                    "enum": [
                                        "delete",
                                        "get",
                                        "head",
                                        "options",
                                        "post",
                                        "put",
                                        "trace",
                                        "other"
                                    ]
                                },
                                "response-req-hdr": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of req-hdr for ICAP response modification (respmod) processing.   \ndisable:Do not add req-hdr for response modification (respmod) processing.   \nenable:Add req-hdr for response modification (respmod) processing.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "respmod-default-action": {
                                    "type": "string",
                                    "description": "Default action to ICAP response modification (respmod) processing.   \nforward:Forward response to icap server unless a rule specifies not to.   \nbypass:Don't forward request to icap server unless a rule specifies to forward the request.",
                                    "enum": [
                                        "forward",
                                        "bypass"
                                    ]
                                },
                                "icap-headers": {
                                    "description": "Configure ICAP forwarded request headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "respmod-forward-rules": {
                                    "description": "ICAP response mode forward rules.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 63
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Address object for the host.",
                                                "maxLength": 79
                                            },
                                            "header-group": {
                                                "description": "HTTP header group.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "header-name": {
                                                            "type": "string",
                                                            "description": "HTTP header.",
                                                            "maxLength": 79
                                                        },
                                                        "header": {
                                                            "type": "string",
                                                            "description": "HTTP header regular expression.",
                                                            "maxLength": 255
                                                        },
                                                        "case-sensitivity": {
                                                            "type": "string",
                                                            "description": "Enable\/disable case sensitivity when matching header.   \ndisable:Ignore case when matching header.   \nenable:Do not ignore case when matching header.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to be taken for ICAP server.   \nforward:Forward request to ICAP server when this rule is matched.   \nbypass:Don't forward request to ICAP server when this rule is matched.",
                                                "enum": [
                                                    "forward",
                                                    "bypass"
                                                ]
                                            },
                                            "http-resp-status-code": {
                                                "description": "HTTP response status code.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "description": "HTTP response status code.",
                                                            "maximum": 599,
                                                            "minimum": 100
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "icap\/profile"
                ]
            }
        },
        "\/icap\/server\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version.   \n4:IPv4 ICAP address.   \n6:IPv6 ICAP address.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the ICAP server."
                                },
                                "ip6-address": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the ICAP server."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "ICAP server port.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent connections to ICAP server. Must not be less than wad-worker-count.",
                                    "maximum": 65535,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "icap\/server"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version.   \n4:IPv4 ICAP address.   \n6:IPv6 ICAP address.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the ICAP server."
                                },
                                "ip6-address": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the ICAP server."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "ICAP server port.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent connections to ICAP server. Must not be less than wad-worker-count.",
                                    "maximum": 65535,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "icap\/server"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "icap\/server"
                ]
            }
        },
        "\/icap\/server": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version.   \n4:IPv4 ICAP address.   \n6:IPv6 ICAP address.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the ICAP server."
                                },
                                "ip6-address": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the ICAP server."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "ICAP server port.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent connections to ICAP server. Must not be less than wad-worker-count.",
                                    "maximum": 65535,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "icap\/server"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version.   \n4:IPv4 ICAP address.   \n6:IPv6 ICAP address.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the ICAP server."
                                },
                                "ip6-address": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the ICAP server."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "ICAP server port.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent connections to ICAP server. Must not be less than wad-worker-count.",
                                    "maximum": 65535,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "icap\/server"
                ]
            }
        }
    }
}
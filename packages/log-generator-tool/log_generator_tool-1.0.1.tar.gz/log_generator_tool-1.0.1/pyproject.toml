[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "log-generator-tool"
dynamic = ["version"]
description = "Automatic log generation tool for log analyzer development and testing"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Log Generator Team", email = "team@loggenerator.dev"}
]
maintainers = [
    {name = "Log Generator Team", email = "team@loggenerator.dev"}
]
keywords = [
    "log", "generator", "testing", "development", "analysis", 
    "nginx", "apache", "syslog", "fastapi", "django", "docker", "kubernetes"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
    "Environment :: Console",
    "Natural Language :: English",
    "Natural Language :: Korean",
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "faker>=19.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]
network = [
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
]
monitoring = [
    "psutil>=5.9.0",
    "prometheus-client>=0.17.0",
]
performance = [
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "orjson>=3.9.0",
]
all = [
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
    "prometheus-client>=0.17.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "orjson>=3.9.0",
]

[project.urls]
Homepage = "https://github.com/log-generator/log-generator-tool"
Documentation = "https://log-generator-tool.readthedocs.io/"
Repository = "https://github.com/log-generator/log-generator-tool.git"
"Bug Reports" = "https://github.com/log-generator/log-generator-tool/issues"
Changelog = "https://github.com/log-generator/log-generator-tool/blob/main/CHANGELOG.md"

[project.scripts]
log-generator = "log_generator.cli:main"

[tool.setuptools.dynamic]
version = {attr = "log_generator.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
log_generator = [
    "patterns/*.yaml",
    "patterns/*.json", 
    "config/*.yaml",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["log_generator"]
skip_glob = ["*/migrations/*"]

# mypy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = false
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "faker.*",
    "yaml.*",
    "typer.*",
    "rich.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["log_generator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101", "B601", "B311", "B608", "B110", "B108", "B404", "B603"]  # Skip random, SQL, try-except-pass, temp dirs, subprocess for log generation tool

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
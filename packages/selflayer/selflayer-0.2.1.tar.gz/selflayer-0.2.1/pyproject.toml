[project]
name = "selflayer"
version = "0.2.1"
description = "SelfLayer - AI-powered terminal web browser for content analysis and research"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Anton Vice", email = "anton@selflayer.com"}
]
maintainers = [
    {name = "Anton Vice", email = "anton@selflayer.com"}
]
keywords = ["web", "browser", "ai", "research", "analysis", "terminal", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "beautifulsoup4>=4.12.0",
    "ddgs>=6.0.0",
    "google-generativeai>=0.7.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "pydantic-ai>=0.0.13",
    "python-dotenv>=1.0.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pre-commit>=3.0.0",
    "mypy>=1.6.0",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/antonvice/selflayer"
Repository = "https://github.com/antonvice/selflayer"
Bug-Tracker = "https://github.com/antonvice/selflayer/issues"
Documentation = "https://github.com/antonvice/selflayer#readme"

[tool.setuptools]
packages = ["selflayer"]

[project.scripts]
selflayer = "selflayer.tui:main_sync"
sl = "selflayer.cli:main"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = ["E", "W", "F", "I"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ddgs.*",
    "beautifulsoup4.*",
    "bs4.*",
]
ignore_missing_imports = true

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["selflayer", "tests"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=selflayer",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=70",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ai: marks tests that require AI API access",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["selflayer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

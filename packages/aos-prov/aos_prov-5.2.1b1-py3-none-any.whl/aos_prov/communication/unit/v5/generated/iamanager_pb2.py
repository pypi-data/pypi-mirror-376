# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iamanager/v5/iamanager.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from aos_prov.communication.unit.v5.generated import (
    common_pb2 as common_dot_v1_dot_common__pb2,
)
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1ciamanager/v5/iamanager.proto\x12\x0ciamanager.v5\x1a\x1bgoogle/protobuf/empty.proto\x1a\x16\x63ommon/v1/common.proto\"U\n\rPartitionInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05types\x18\x02 \x03(\t\x12\x12\n\ntotal_size\x18\x03 \x01(\x04\x12\x13\n\x0bmount_point\x18\x04 \x01(\t\"h\n\x07\x43PUInfo\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x11\n\tnum_cores\x18\x02 \x01(\x04\x12\x13\n\x0bnum_threads\x18\x03 \x01(\x04\x12\x0c\n\x04\x61rch\x18\x04 \x01(\t\x12\x13\n\x0b\x61rch_family\x18\x05 \x01(\t\",\n\rNodeAttribute\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xa0\x02\n\x08NodeInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07os_type\x18\x05 \x01(\t\x12#\n\x04\x63pus\x18\x06 \x03(\x0b\x32\x15.iamanager.v5.CPUInfo\x12\x11\n\tmax_dmips\x18\x07 \x01(\x02\x12\x11\n\ttotal_ram\x18\x08 \x01(\x04\x12/\n\npartitions\x18\t \x03(\x0b\x32\x1b.iamanager.v5.PartitionInfo\x12*\n\x05\x61ttrs\x18\n \x03(\x0b\x32\x1b.iamanager.v5.NodeAttribute\x12#\n\x05\x65rror\x18\x0b \x01(\x0b\x32\x14.common.v1.ErrorInfo\">\n\x0eGetCertRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06issuer\x18\x02 \x01(\x0c\x12\x0e\n\x06serial\x18\x03 \x01(\t\"B\n\x0fGetCertResponse\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08\x63\x65rt_url\x18\x02 \x01(\t\x12\x0f\n\x07key_url\x18\x03 \x01(\t\"3\n\nSystemInfo\x12\x11\n\tsystem_id\x18\x01 \x01(\t\x12\x12\n\nunit_model\x18\x02 \x01(\t\"\x1c\n\x08Subjects\x12\x10\n\x08subjects\x18\x01 \x03(\t\"B\n\x12PermissionsRequest\x12\x0e\n\x06secret\x18\x01 \x01(\t\x12\x1c\n\x14\x66unctional_server_id\x18\x02 \x01(\t\"t\n\x13PermissionsResponse\x12-\n\x08instance\x18\x01 \x01(\x0b\x32\x1b.iamanager.v5.InstanceIdent\x12.\n\x0bpermissions\x18\x02 \x01(\x0b\x32\x19.iamanager.v5.Permissions\"I\n\rInstanceIdent\x12\x12\n\nservice_id\x18\x01 \x01(\t\x12\x12\n\nsubject_id\x18\x02 \x01(\t\x12\x10\n\x08instance\x18\x03 \x01(\x04\"\x16\n\x07NodesID\x12\x0b\n\x03ids\x18\x01 \x03(\t\"&\n\x13GetCertTypesRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\"\x1a\n\tCertTypes\x12\r\n\x05types\x18\x01 \x03(\t\"T\n\x10\x43reateKeyRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x0f\n\x07subject\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\"d\n\x11\x43reateKeyResponse\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0b\n\x03\x63sr\x18\x03 \x01(\t\x12#\n\x05\x65rror\x18\x04 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"?\n\x10\x41pplyCertRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0c\n\x04\x63\x65rt\x18\x03 \x01(\t\"y\n\x11\x41pplyCertResponse\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x10\n\x08\x63\x65rt_url\x18\x03 \x01(\t\x12\x0e\n\x06serial\x18\x04 \x01(\t\x12#\n\x05\x65rror\x18\x05 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"\x82\x01\n\x0bPermissions\x12?\n\x0bpermissions\x18\x01 \x03(\x0b\x32*.iamanager.v5.Permissions.PermissionsEntry\x1a\x32\n\x10PermissionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe4\x01\n\x17RegisterInstanceRequest\x12-\n\x08instance\x18\x01 \x01(\x0b\x32\x1b.iamanager.v5.InstanceIdent\x12K\n\x0bpermissions\x18\x02 \x03(\x0b\x32\x36.iamanager.v5.RegisterInstanceRequest.PermissionsEntry\x1aM\n\x10PermissionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x19.iamanager.v5.Permissions:\x02\x38\x01\"*\n\x18RegisterInstanceResponse\x12\x0e\n\x06secret\x18\x01 \x01(\t\"J\n\x19UnregisterInstanceRequest\x12-\n\x08instance\x18\x01 \x01(\x0b\x32\x1b.iamanager.v5.InstanceIdent\"%\n\x12GetNodeInfoRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\"#\n\x10PauseNodeRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\"8\n\x11PauseNodeResponse\x12#\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"$\n\x11ResumeNodeRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\"9\n\x12ResumeNodeResponse\x12#\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"=\n\x18StartProvisioningRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"@\n\x19StartProvisioningResponse\x12#\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x14.common.v1.ErrorInfo\">\n\x19\x46inishProvisioningRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"A\n\x1a\x46inishProvisioningResponse\x12#\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"7\n\x12\x44\x65provisionRequest\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\":\n\x13\x44\x65provisionResponse\x12#\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x14.common.v1.ErrorInfo\"\xc9\x04\n\x13IAMIncomingMessages\x12L\n\x1astart_provisioning_request\x18\x01 \x01(\x0b\x32&.iamanager.v5.StartProvisioningRequestH\x00\x12\x43\n\x16get_cert_types_request\x18\x02 \x01(\x0b\x32!.iamanager.v5.GetCertTypesRequestH\x00\x12N\n\x1b\x66inish_provisioning_request\x18\x03 \x01(\x0b\x32\'.iamanager.v5.FinishProvisioningRequestH\x00\x12?\n\x13\x64\x65provision_request\x18\x04 \x01(\x0b\x32 .iamanager.v5.DeprovisionRequestH\x00\x12<\n\x12pause_node_request\x18\x05 \x01(\x0b\x32\x1e.iamanager.v5.PauseNodeRequestH\x00\x12>\n\x13resume_node_request\x18\x06 \x01(\x0b\x32\x1f.iamanager.v5.ResumeNodeRequestH\x00\x12<\n\x12\x63reate_key_request\x18\x07 \x01(\x0b\x32\x1e.iamanager.v5.CreateKeyRequestH\x00\x12<\n\x12\x61pply_cert_request\x18\x08 \x01(\x0b\x32\x1e.iamanager.v5.ApplyCertRequestH\x00\x42\x14\n\x12IAMIncomingMessage\"\xf7\x04\n\x13IAMOutgoingMessages\x12+\n\tnode_info\x18\x01 \x01(\x0b\x32\x16.iamanager.v5.NodeInfoH\x00\x12N\n\x1bstart_provisioning_response\x18\x02 \x01(\x0b\x32\'.iamanager.v5.StartProvisioningResponseH\x00\x12\x36\n\x13\x63\x65rt_types_response\x18\x03 \x01(\x0b\x32\x17.iamanager.v5.CertTypesH\x00\x12P\n\x1c\x66inish_provisioning_response\x18\x04 \x01(\x0b\x32(.iamanager.v5.FinishProvisioningResponseH\x00\x12\x41\n\x14\x64\x65provision_response\x18\x05 \x01(\x0b\x32!.iamanager.v5.DeprovisionResponseH\x00\x12>\n\x13pause_node_response\x18\x06 \x01(\x0b\x32\x1f.iamanager.v5.PauseNodeResponseH\x00\x12@\n\x14resume_node_response\x18\x07 \x01(\x0b\x32 .iamanager.v5.ResumeNodeResponseH\x00\x12>\n\x13\x63reate_key_response\x18\x08 \x01(\x0b\x32\x1f.iamanager.v5.CreateKeyResponseH\x00\x12>\n\x13\x61pply_cert_response\x18\t \x01(\x0b\x32\x1f.iamanager.v5.ApplyCertResponseH\x00\x42\x14\n\x12IAMOutgoingMessage2\x9d\x01\n\x10IAMPublicService\x12?\n\x0bGetNodeInfo\x12\x16.google.protobuf.Empty\x1a\x16.iamanager.v5.NodeInfo\"\x00\x12H\n\x07GetCert\x12\x1c.iamanager.v5.GetCertRequest\x1a\x1d.iamanager.v5.GetCertResponse\"\x00\x32\xf0\x01\n\x18IAMPublicIdentityService\x12\x43\n\rGetSystemInfo\x12\x16.google.protobuf.Empty\x1a\x18.iamanager.v5.SystemInfo\"\x00\x12?\n\x0bGetSubjects\x12\x16.google.protobuf.Empty\x1a\x16.iamanager.v5.Subjects\"\x00\x12N\n\x18SubscribeSubjectsChanged\x12\x16.google.protobuf.Empty\x1a\x16.iamanager.v5.Subjects\"\x00\x30\x01\x32v\n\x1bIAMPublicPermissionsService\x12W\n\x0eGetPermissions\x12 .iamanager.v5.PermissionsRequest\x1a!.iamanager.v5.PermissionsResponse\"\x00\x32\xcc\x02\n\x15IAMPublicNodesService\x12@\n\rGetAllNodeIDs\x12\x16.google.protobuf.Empty\x1a\x15.iamanager.v5.NodesID\"\x00\x12I\n\x0bGetNodeInfo\x12 .iamanager.v5.GetNodeInfoRequest\x1a\x16.iamanager.v5.NodeInfo\"\x00\x12J\n\x14SubscribeNodeChanged\x12\x16.google.protobuf.Empty\x1a\x16.iamanager.v5.NodeInfo\"\x00\x30\x01\x12Z\n\x0cRegisterNode\x12!.iamanager.v5.IAMOutgoingMessages\x1a!.iamanager.v5.IAMIncomingMessages\"\x00(\x01\x30\x01\x32\xb4\x01\n\x0fIAMNodesService\x12N\n\tPauseNode\x12\x1e.iamanager.v5.PauseNodeRequest\x1a\x1f.iamanager.v5.PauseNodeResponse\"\x00\x12Q\n\nResumeNode\x12\x1f.iamanager.v5.ResumeNodeRequest\x1a .iamanager.v5.ResumeNodeResponse\"\x00\x32\x8f\x03\n\x16IAMProvisioningService\x12L\n\x0cGetCertTypes\x12!.iamanager.v5.GetCertTypesRequest\x1a\x17.iamanager.v5.CertTypes\"\x00\x12\x66\n\x11StartProvisioning\x12&.iamanager.v5.StartProvisioningRequest\x1a\'.iamanager.v5.StartProvisioningResponse\"\x00\x12i\n\x12\x46inishProvisioning\x12\'.iamanager.v5.FinishProvisioningRequest\x1a(.iamanager.v5.FinishProvisioningResponse\"\x00\x12T\n\x0b\x44\x65provision\x12 .iamanager.v5.DeprovisionRequest\x1a!.iamanager.v5.DeprovisionResponse\"\x00\x32\xb7\x01\n\x15IAMCertificateService\x12N\n\tCreateKey\x12\x1e.iamanager.v5.CreateKeyRequest\x1a\x1f.iamanager.v5.CreateKeyResponse\"\x00\x12N\n\tApplyCert\x12\x1e.iamanager.v5.ApplyCertRequest\x1a\x1f.iamanager.v5.ApplyCertResponse\"\x00\x32\xd5\x01\n\x15IAMPermissionsService\x12\x63\n\x10RegisterInstance\x12%.iamanager.v5.RegisterInstanceRequest\x1a&.iamanager.v5.RegisterInstanceResponse\"\x00\x12W\n\x12UnregisterInstance\x12\'.iamanager.v5.UnregisterInstanceRequest\x1a\x16.google.protobuf.Empty\"\x00\x62\x06proto3')



_PARTITIONINFO = DESCRIPTOR.message_types_by_name['PartitionInfo']
_CPUINFO = DESCRIPTOR.message_types_by_name['CPUInfo']
_NODEATTRIBUTE = DESCRIPTOR.message_types_by_name['NodeAttribute']
_NODEINFO = DESCRIPTOR.message_types_by_name['NodeInfo']
_GETCERTREQUEST = DESCRIPTOR.message_types_by_name['GetCertRequest']
_GETCERTRESPONSE = DESCRIPTOR.message_types_by_name['GetCertResponse']
_SYSTEMINFO = DESCRIPTOR.message_types_by_name['SystemInfo']
_SUBJECTS = DESCRIPTOR.message_types_by_name['Subjects']
_PERMISSIONSREQUEST = DESCRIPTOR.message_types_by_name['PermissionsRequest']
_PERMISSIONSRESPONSE = DESCRIPTOR.message_types_by_name['PermissionsResponse']
_INSTANCEIDENT = DESCRIPTOR.message_types_by_name['InstanceIdent']
_NODESID = DESCRIPTOR.message_types_by_name['NodesID']
_GETCERTTYPESREQUEST = DESCRIPTOR.message_types_by_name['GetCertTypesRequest']
_CERTTYPES = DESCRIPTOR.message_types_by_name['CertTypes']
_CREATEKEYREQUEST = DESCRIPTOR.message_types_by_name['CreateKeyRequest']
_CREATEKEYRESPONSE = DESCRIPTOR.message_types_by_name['CreateKeyResponse']
_APPLYCERTREQUEST = DESCRIPTOR.message_types_by_name['ApplyCertRequest']
_APPLYCERTRESPONSE = DESCRIPTOR.message_types_by_name['ApplyCertResponse']
_PERMISSIONS = DESCRIPTOR.message_types_by_name['Permissions']
_PERMISSIONS_PERMISSIONSENTRY = _PERMISSIONS.nested_types_by_name['PermissionsEntry']
_REGISTERINSTANCEREQUEST = DESCRIPTOR.message_types_by_name['RegisterInstanceRequest']
_REGISTERINSTANCEREQUEST_PERMISSIONSENTRY = _REGISTERINSTANCEREQUEST.nested_types_by_name['PermissionsEntry']
_REGISTERINSTANCERESPONSE = DESCRIPTOR.message_types_by_name['RegisterInstanceResponse']
_UNREGISTERINSTANCEREQUEST = DESCRIPTOR.message_types_by_name['UnregisterInstanceRequest']
_GETNODEINFOREQUEST = DESCRIPTOR.message_types_by_name['GetNodeInfoRequest']
_PAUSENODEREQUEST = DESCRIPTOR.message_types_by_name['PauseNodeRequest']
_PAUSENODERESPONSE = DESCRIPTOR.message_types_by_name['PauseNodeResponse']
_RESUMENODEREQUEST = DESCRIPTOR.message_types_by_name['ResumeNodeRequest']
_RESUMENODERESPONSE = DESCRIPTOR.message_types_by_name['ResumeNodeResponse']
_STARTPROVISIONINGREQUEST = DESCRIPTOR.message_types_by_name['StartProvisioningRequest']
_STARTPROVISIONINGRESPONSE = DESCRIPTOR.message_types_by_name['StartProvisioningResponse']
_FINISHPROVISIONINGREQUEST = DESCRIPTOR.message_types_by_name['FinishProvisioningRequest']
_FINISHPROVISIONINGRESPONSE = DESCRIPTOR.message_types_by_name['FinishProvisioningResponse']
_DEPROVISIONREQUEST = DESCRIPTOR.message_types_by_name['DeprovisionRequest']
_DEPROVISIONRESPONSE = DESCRIPTOR.message_types_by_name['DeprovisionResponse']
_IAMINCOMINGMESSAGES = DESCRIPTOR.message_types_by_name['IAMIncomingMessages']
_IAMOUTGOINGMESSAGES = DESCRIPTOR.message_types_by_name['IAMOutgoingMessages']
PartitionInfo = _reflection.GeneratedProtocolMessageType('PartitionInfo', (_message.Message,), {
  'DESCRIPTOR' : _PARTITIONINFO,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.PartitionInfo)
  })
_sym_db.RegisterMessage(PartitionInfo)

CPUInfo = _reflection.GeneratedProtocolMessageType('CPUInfo', (_message.Message,), {
  'DESCRIPTOR' : _CPUINFO,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.CPUInfo)
  })
_sym_db.RegisterMessage(CPUInfo)

NodeAttribute = _reflection.GeneratedProtocolMessageType('NodeAttribute', (_message.Message,), {
  'DESCRIPTOR' : _NODEATTRIBUTE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.NodeAttribute)
  })
_sym_db.RegisterMessage(NodeAttribute)

NodeInfo = _reflection.GeneratedProtocolMessageType('NodeInfo', (_message.Message,), {
  'DESCRIPTOR' : _NODEINFO,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.NodeInfo)
  })
_sym_db.RegisterMessage(NodeInfo)

GetCertRequest = _reflection.GeneratedProtocolMessageType('GetCertRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.GetCertRequest)
  })
_sym_db.RegisterMessage(GetCertRequest)

GetCertResponse = _reflection.GeneratedProtocolMessageType('GetCertResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.GetCertResponse)
  })
_sym_db.RegisterMessage(GetCertResponse)

SystemInfo = _reflection.GeneratedProtocolMessageType('SystemInfo', (_message.Message,), {
  'DESCRIPTOR' : _SYSTEMINFO,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.SystemInfo)
  })
_sym_db.RegisterMessage(SystemInfo)

Subjects = _reflection.GeneratedProtocolMessageType('Subjects', (_message.Message,), {
  'DESCRIPTOR' : _SUBJECTS,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.Subjects)
  })
_sym_db.RegisterMessage(Subjects)

PermissionsRequest = _reflection.GeneratedProtocolMessageType('PermissionsRequest', (_message.Message,), {
  'DESCRIPTOR' : _PERMISSIONSREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.PermissionsRequest)
  })
_sym_db.RegisterMessage(PermissionsRequest)

PermissionsResponse = _reflection.GeneratedProtocolMessageType('PermissionsResponse', (_message.Message,), {
  'DESCRIPTOR' : _PERMISSIONSRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.PermissionsResponse)
  })
_sym_db.RegisterMessage(PermissionsResponse)

InstanceIdent = _reflection.GeneratedProtocolMessageType('InstanceIdent', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCEIDENT,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.InstanceIdent)
  })
_sym_db.RegisterMessage(InstanceIdent)

NodesID = _reflection.GeneratedProtocolMessageType('NodesID', (_message.Message,), {
  'DESCRIPTOR' : _NODESID,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.NodesID)
  })
_sym_db.RegisterMessage(NodesID)

GetCertTypesRequest = _reflection.GeneratedProtocolMessageType('GetCertTypesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTTYPESREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.GetCertTypesRequest)
  })
_sym_db.RegisterMessage(GetCertTypesRequest)

CertTypes = _reflection.GeneratedProtocolMessageType('CertTypes', (_message.Message,), {
  'DESCRIPTOR' : _CERTTYPES,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.CertTypes)
  })
_sym_db.RegisterMessage(CertTypes)

CreateKeyRequest = _reflection.GeneratedProtocolMessageType('CreateKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.CreateKeyRequest)
  })
_sym_db.RegisterMessage(CreateKeyRequest)

CreateKeyResponse = _reflection.GeneratedProtocolMessageType('CreateKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.CreateKeyResponse)
  })
_sym_db.RegisterMessage(CreateKeyResponse)

ApplyCertRequest = _reflection.GeneratedProtocolMessageType('ApplyCertRequest', (_message.Message,), {
  'DESCRIPTOR' : _APPLYCERTREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.ApplyCertRequest)
  })
_sym_db.RegisterMessage(ApplyCertRequest)

ApplyCertResponse = _reflection.GeneratedProtocolMessageType('ApplyCertResponse', (_message.Message,), {
  'DESCRIPTOR' : _APPLYCERTRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.ApplyCertResponse)
  })
_sym_db.RegisterMessage(ApplyCertResponse)

Permissions = _reflection.GeneratedProtocolMessageType('Permissions', (_message.Message,), {

  'PermissionsEntry' : _reflection.GeneratedProtocolMessageType('PermissionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PERMISSIONS_PERMISSIONSENTRY,
    '__module__' : 'iamanager.v5.iamanager_pb2'
    # @@protoc_insertion_point(class_scope:iamanager.v5.Permissions.PermissionsEntry)
    })
  ,
  'DESCRIPTOR' : _PERMISSIONS,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.Permissions)
  })
_sym_db.RegisterMessage(Permissions)
_sym_db.RegisterMessage(Permissions.PermissionsEntry)

RegisterInstanceRequest = _reflection.GeneratedProtocolMessageType('RegisterInstanceRequest', (_message.Message,), {

  'PermissionsEntry' : _reflection.GeneratedProtocolMessageType('PermissionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _REGISTERINSTANCEREQUEST_PERMISSIONSENTRY,
    '__module__' : 'iamanager.v5.iamanager_pb2'
    # @@protoc_insertion_point(class_scope:iamanager.v5.RegisterInstanceRequest.PermissionsEntry)
    })
  ,
  'DESCRIPTOR' : _REGISTERINSTANCEREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.RegisterInstanceRequest)
  })
_sym_db.RegisterMessage(RegisterInstanceRequest)
_sym_db.RegisterMessage(RegisterInstanceRequest.PermissionsEntry)

RegisterInstanceResponse = _reflection.GeneratedProtocolMessageType('RegisterInstanceResponse', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERINSTANCERESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.RegisterInstanceResponse)
  })
_sym_db.RegisterMessage(RegisterInstanceResponse)

UnregisterInstanceRequest = _reflection.GeneratedProtocolMessageType('UnregisterInstanceRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNREGISTERINSTANCEREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.UnregisterInstanceRequest)
  })
_sym_db.RegisterMessage(UnregisterInstanceRequest)

GetNodeInfoRequest = _reflection.GeneratedProtocolMessageType('GetNodeInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETNODEINFOREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.GetNodeInfoRequest)
  })
_sym_db.RegisterMessage(GetNodeInfoRequest)

PauseNodeRequest = _reflection.GeneratedProtocolMessageType('PauseNodeRequest', (_message.Message,), {
  'DESCRIPTOR' : _PAUSENODEREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.PauseNodeRequest)
  })
_sym_db.RegisterMessage(PauseNodeRequest)

PauseNodeResponse = _reflection.GeneratedProtocolMessageType('PauseNodeResponse', (_message.Message,), {
  'DESCRIPTOR' : _PAUSENODERESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.PauseNodeResponse)
  })
_sym_db.RegisterMessage(PauseNodeResponse)

ResumeNodeRequest = _reflection.GeneratedProtocolMessageType('ResumeNodeRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESUMENODEREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.ResumeNodeRequest)
  })
_sym_db.RegisterMessage(ResumeNodeRequest)

ResumeNodeResponse = _reflection.GeneratedProtocolMessageType('ResumeNodeResponse', (_message.Message,), {
  'DESCRIPTOR' : _RESUMENODERESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.ResumeNodeResponse)
  })
_sym_db.RegisterMessage(ResumeNodeResponse)

StartProvisioningRequest = _reflection.GeneratedProtocolMessageType('StartProvisioningRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTPROVISIONINGREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.StartProvisioningRequest)
  })
_sym_db.RegisterMessage(StartProvisioningRequest)

StartProvisioningResponse = _reflection.GeneratedProtocolMessageType('StartProvisioningResponse', (_message.Message,), {
  'DESCRIPTOR' : _STARTPROVISIONINGRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.StartProvisioningResponse)
  })
_sym_db.RegisterMessage(StartProvisioningResponse)

FinishProvisioningRequest = _reflection.GeneratedProtocolMessageType('FinishProvisioningRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINISHPROVISIONINGREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.FinishProvisioningRequest)
  })
_sym_db.RegisterMessage(FinishProvisioningRequest)

FinishProvisioningResponse = _reflection.GeneratedProtocolMessageType('FinishProvisioningResponse', (_message.Message,), {
  'DESCRIPTOR' : _FINISHPROVISIONINGRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.FinishProvisioningResponse)
  })
_sym_db.RegisterMessage(FinishProvisioningResponse)

DeprovisionRequest = _reflection.GeneratedProtocolMessageType('DeprovisionRequest', (_message.Message,), {
  'DESCRIPTOR' : _DEPROVISIONREQUEST,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.DeprovisionRequest)
  })
_sym_db.RegisterMessage(DeprovisionRequest)

DeprovisionResponse = _reflection.GeneratedProtocolMessageType('DeprovisionResponse', (_message.Message,), {
  'DESCRIPTOR' : _DEPROVISIONRESPONSE,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.DeprovisionResponse)
  })
_sym_db.RegisterMessage(DeprovisionResponse)

IAMIncomingMessages = _reflection.GeneratedProtocolMessageType('IAMIncomingMessages', (_message.Message,), {
  'DESCRIPTOR' : _IAMINCOMINGMESSAGES,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.IAMIncomingMessages)
  })
_sym_db.RegisterMessage(IAMIncomingMessages)

IAMOutgoingMessages = _reflection.GeneratedProtocolMessageType('IAMOutgoingMessages', (_message.Message,), {
  'DESCRIPTOR' : _IAMOUTGOINGMESSAGES,
  '__module__' : 'iamanager.v5.iamanager_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v5.IAMOutgoingMessages)
  })
_sym_db.RegisterMessage(IAMOutgoingMessages)

_IAMPUBLICSERVICE = DESCRIPTOR.services_by_name['IAMPublicService']
_IAMPUBLICIDENTITYSERVICE = DESCRIPTOR.services_by_name['IAMPublicIdentityService']
_IAMPUBLICPERMISSIONSSERVICE = DESCRIPTOR.services_by_name['IAMPublicPermissionsService']
_IAMPUBLICNODESSERVICE = DESCRIPTOR.services_by_name['IAMPublicNodesService']
_IAMNODESSERVICE = DESCRIPTOR.services_by_name['IAMNodesService']
_IAMPROVISIONINGSERVICE = DESCRIPTOR.services_by_name['IAMProvisioningService']
_IAMCERTIFICATESERVICE = DESCRIPTOR.services_by_name['IAMCertificateService']
_IAMPERMISSIONSSERVICE = DESCRIPTOR.services_by_name['IAMPermissionsService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PERMISSIONS_PERMISSIONSENTRY._options = None
  _PERMISSIONS_PERMISSIONSENTRY._serialized_options = b'8\001'
  _REGISTERINSTANCEREQUEST_PERMISSIONSENTRY._options = None
  _REGISTERINSTANCEREQUEST_PERMISSIONSENTRY._serialized_options = b'8\001'
  _PARTITIONINFO._serialized_start=99
  _PARTITIONINFO._serialized_end=184
  _CPUINFO._serialized_start=186
  _CPUINFO._serialized_end=290
  _NODEATTRIBUTE._serialized_start=292
  _NODEATTRIBUTE._serialized_end=336
  _NODEINFO._serialized_start=339
  _NODEINFO._serialized_end=627
  _GETCERTREQUEST._serialized_start=629
  _GETCERTREQUEST._serialized_end=691
  _GETCERTRESPONSE._serialized_start=693
  _GETCERTRESPONSE._serialized_end=759
  _SYSTEMINFO._serialized_start=761
  _SYSTEMINFO._serialized_end=812
  _SUBJECTS._serialized_start=814
  _SUBJECTS._serialized_end=842
  _PERMISSIONSREQUEST._serialized_start=844
  _PERMISSIONSREQUEST._serialized_end=910
  _PERMISSIONSRESPONSE._serialized_start=912
  _PERMISSIONSRESPONSE._serialized_end=1028
  _INSTANCEIDENT._serialized_start=1030
  _INSTANCEIDENT._serialized_end=1103
  _NODESID._serialized_start=1105
  _NODESID._serialized_end=1127
  _GETCERTTYPESREQUEST._serialized_start=1129
  _GETCERTTYPESREQUEST._serialized_end=1167
  _CERTTYPES._serialized_start=1169
  _CERTTYPES._serialized_end=1195
  _CREATEKEYREQUEST._serialized_start=1197
  _CREATEKEYREQUEST._serialized_end=1281
  _CREATEKEYRESPONSE._serialized_start=1283
  _CREATEKEYRESPONSE._serialized_end=1383
  _APPLYCERTREQUEST._serialized_start=1385
  _APPLYCERTREQUEST._serialized_end=1448
  _APPLYCERTRESPONSE._serialized_start=1450
  _APPLYCERTRESPONSE._serialized_end=1571
  _PERMISSIONS._serialized_start=1574
  _PERMISSIONS._serialized_end=1704
  _PERMISSIONS_PERMISSIONSENTRY._serialized_start=1654
  _PERMISSIONS_PERMISSIONSENTRY._serialized_end=1704
  _REGISTERINSTANCEREQUEST._serialized_start=1707
  _REGISTERINSTANCEREQUEST._serialized_end=1935
  _REGISTERINSTANCEREQUEST_PERMISSIONSENTRY._serialized_start=1858
  _REGISTERINSTANCEREQUEST_PERMISSIONSENTRY._serialized_end=1935
  _REGISTERINSTANCERESPONSE._serialized_start=1937
  _REGISTERINSTANCERESPONSE._serialized_end=1979
  _UNREGISTERINSTANCEREQUEST._serialized_start=1981
  _UNREGISTERINSTANCEREQUEST._serialized_end=2055
  _GETNODEINFOREQUEST._serialized_start=2057
  _GETNODEINFOREQUEST._serialized_end=2094
  _PAUSENODEREQUEST._serialized_start=2096
  _PAUSENODEREQUEST._serialized_end=2131
  _PAUSENODERESPONSE._serialized_start=2133
  _PAUSENODERESPONSE._serialized_end=2189
  _RESUMENODEREQUEST._serialized_start=2191
  _RESUMENODEREQUEST._serialized_end=2227
  _RESUMENODERESPONSE._serialized_start=2229
  _RESUMENODERESPONSE._serialized_end=2286
  _STARTPROVISIONINGREQUEST._serialized_start=2288
  _STARTPROVISIONINGREQUEST._serialized_end=2349
  _STARTPROVISIONINGRESPONSE._serialized_start=2351
  _STARTPROVISIONINGRESPONSE._serialized_end=2415
  _FINISHPROVISIONINGREQUEST._serialized_start=2417
  _FINISHPROVISIONINGREQUEST._serialized_end=2479
  _FINISHPROVISIONINGRESPONSE._serialized_start=2481
  _FINISHPROVISIONINGRESPONSE._serialized_end=2546
  _DEPROVISIONREQUEST._serialized_start=2548
  _DEPROVISIONREQUEST._serialized_end=2603
  _DEPROVISIONRESPONSE._serialized_start=2605
  _DEPROVISIONRESPONSE._serialized_end=2663
  _IAMINCOMINGMESSAGES._serialized_start=2666
  _IAMINCOMINGMESSAGES._serialized_end=3251
  _IAMOUTGOINGMESSAGES._serialized_start=3254
  _IAMOUTGOINGMESSAGES._serialized_end=3885
  _IAMPUBLICSERVICE._serialized_start=3888
  _IAMPUBLICSERVICE._serialized_end=4045
  _IAMPUBLICIDENTITYSERVICE._serialized_start=4048
  _IAMPUBLICIDENTITYSERVICE._serialized_end=4288
  _IAMPUBLICPERMISSIONSSERVICE._serialized_start=4290
  _IAMPUBLICPERMISSIONSSERVICE._serialized_end=4408
  _IAMPUBLICNODESSERVICE._serialized_start=4411
  _IAMPUBLICNODESSERVICE._serialized_end=4743
  _IAMNODESSERVICE._serialized_start=4746
  _IAMNODESSERVICE._serialized_end=4926
  _IAMPROVISIONINGSERVICE._serialized_start=4929
  _IAMPROVISIONINGSERVICE._serialized_end=5328
  _IAMCERTIFICATESERVICE._serialized_start=5331
  _IAMCERTIFICATESERVICE._serialized_end=5514
  _IAMPERMISSIONSSERVICE._serialized_start=5517
  _IAMPERMISSIONSSERVICE._serialized_end=5730
# @@protoc_insertion_point(module_scope)

[project]
name = "hybra"
version = "2025.09.5"
requires-python = ">= 3.9"
dependencies = [
  "matplotlib",
  "numpy",
  "torch",
]
authors = [
  {name = "Daniel Haider and Felix Perfler"},
]
description = "A module for trainable encoder/decoder filterbanks with auditory bias."
readme = "README.md"
license-files = ["LICENSE"]
keywords = ["filterbank", "filterbank learning", "feature extraction", "hybrid filterbanks", "encoder", "decoder", "auditory", "frames", "audio front-end", "audio", "machine-learning", "pytorch", "speech", "music", "⛷️"]
classifiers = [
  "Programming Language :: Python"
]
[project.urls]
Repository = "https://github.com/danedane-haider/Hybrid-Auditory-Filterbanks.git"

[tool.setuptools.packages.find]
include = ["hybra"]

[dependency-groups]
dev = [
    "soundfile",
    "torchaudio"
]
doc = [
  "sphinx",
  "tomli",
  "sphinx-multiversion"
]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.0",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.ruff.lint.isort]
known-first-party = ["hybra"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["hybra"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]


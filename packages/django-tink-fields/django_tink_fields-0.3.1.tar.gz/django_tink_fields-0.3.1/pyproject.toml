[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-tink-fields"
version = "0.3.1"
description = "Tink-based encrypted model fields for Django"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "BSD"}
authors = [
    {name = "Isaac Elbaz", email = "script3r@gmail.com"},
]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Framework :: Django",
]
dependencies = [
    "Django>=5.2.6",
    "tink>=1.12.0",
    "protobuf>=6.32.1",
]

[project.urls]
Homepage = "https://github.com/script3r/django-tink-fields/"
Repository = "https://github.com/script3r/django-tink-fields/"
Issues = "https://github.com/script3r/django-tink-fields/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-django>=4.11.1",
    "pytest-cov>=4.1.0",
    "coverage>=7.10.6",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "pyright>=1.1.405",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
]
test = [
    "pytest>=8.4.2",
    "pytest-django>=4.11.1",
    "pytest-cov>=4.1.0",
    "coverage>=7.10.6",
    "factory-boy>=3.3.0",
    "freezegun>=1.4.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["tink_fields*"]

[tool.coverage.run]
source = ["tink_fields"]
omit = ["tink_fields/test/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_django = "django"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pyright]
include = ["tink_fields"]
exclude = ["tink_fields/test"]
pythonVersion = "3.10"
typeCheckingMode = "off"
useLibraryCodeForTypes = true
reportMissingImports = true
reportMissingTypeStubs = false
reportGeneralTypeIssues = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportUntypedBaseClass = false
reportUntypedNamedTuple = false
reportPrivateUsage = false
reportConstantRedefinition = false
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false
reportInconsistentConstructor = false
reportOverlappingOverload = false
reportMissingSuperCall = false
reportUninitializedInstanceVariable = false
reportInvalidStringEscapeSequence = false
reportUnknownParameterType = false
reportUnknownLambdaType = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportInvalidTypeVarUse = false
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = false
reportUnnecessaryCast = false
reportUnnecessaryComparison = false
reportUnnecessaryContains = false
reportAssertAlwaysTrue = false
reportSelfClsParameterName = false
reportImplicitStringConcatenation = false
reportInvalidStubStatement = false
reportIncompleteStub = false
reportUnsupportedDunderAll = false
reportUnusedCallResult = false
reportUnusedCoroutine = false
reportUnnecessaryTypeIgnoreComment = false
reportMatchNotExhaustive = false
reportShadowedImports = false
reportUnusedImport = false
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = false
reportWildcardImportFromLibrary = false
reportAbstractUsage = false

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tink_fields.test.settings.sqlite"
testpaths = ["tink_fields/test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tink_fields",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
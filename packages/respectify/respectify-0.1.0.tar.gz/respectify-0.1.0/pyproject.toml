[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "respectify"
dynamic = ["version"]
description = "Python client library for the Respectify API"
authors = [
    {name = "Respectify", email = "dave@respectify.ai"},
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Filters",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed",
]
keywords = ["respectify", "api", "comment", "moderation", "spam", "toxicity", "dogwhistle", "content-filtering", "abuse-detection", "discussion", "discourse", "civility"]
dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "beartype>=0.15.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "python-dotenv>=1.0.0",
    "ruff>=0.0.280",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://respectify.ai"
Documentation = "https://docs.respectify.org"
Repository = "https://github.com/respectify/respectify-python"
Issues = "https://github.com/respectify/respectify-python/issues"

[tool.hatch.version]
path = "respectify/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/respectify",
    "/tests",
    "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["respectify"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["respectify"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
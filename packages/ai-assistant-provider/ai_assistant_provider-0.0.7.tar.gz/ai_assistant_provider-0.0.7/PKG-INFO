Metadata-Version: 2.4
Name: ai_assistant_provider
Version: 0.0.7
Summary: Sub Module for AI Assistant Project
Home-page: https://github.com/aruncs31s/ai-assistant-provider
Author: Arun CS
Author-email: aruncs31s@proton.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python
Dynamic: summary

# AI Assistant Provider

Version : 0.0.7
## Installation

```bash
pip install ai-assistant-provider
```

## Usage
```python
from ai_assistant_provider import AiProvider
class MyAiProvider(AiProvider):
    def __init__(self):
        super().__init__()
    # You must implement this method
    @property
    def name(self) -> str:
        return "Some AI Provider"
    
    def ask(self, prompt: str) -> str:
        self.add_message("user", prompt)
        response = f"Response to: {prompt}"
        self.add_message("assistant", response)
        self.answer = response
        return response
# Usage
provider = MyAiProvider()
response = provider.ask("Hello, how are you?")
print(f"Status: {provider.status}")
print(f"Response: {response}")
```

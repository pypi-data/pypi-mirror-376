[project]
name = "plating"
dynamic = ["version"]
description = "Documentation generation system for Terraform/OpenTofu providers"
requires-python = ">=3.11"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
    { name = "Tim Perkins", email = "code@tim.life" },
]
maintainers = [
    { name = "provide.io", email = "code@provide.io" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "jinja2>=3.1.6",
    "rich>=13.0.0",
    "pyvider>=0.0.0.post0",
    "pyvider-hcl>=0.0.113",
    "pyvider-cty>=0.0.111",
    "provide-foundation>=0.0.0.dev3",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.0.0",
    "mypy>=1.10.0",
    "ruff>=0.2.0",
]

[project.scripts]
plating = "plating.cli:main"

[tool.uv]
package = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["plating*"]
namespaces = false

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
asyncio_mode = "auto"
pythonpath = ["src", "."]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["plating"]
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
mypy_path = "src"
strict = true
pretty = true
show_error_codes = true
show_column_numbers = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = ["pyvider.*", "jinja2.*", "rich.*", "click.*", "attrs.*"]
ignore_missing_imports = true

[tool.coverage.run]
source = ["plating"]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "if __name__ == .__main__.:", "if TYPE_CHECKING:", "def __repr__", "def __str__", "pass"]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.9",
]

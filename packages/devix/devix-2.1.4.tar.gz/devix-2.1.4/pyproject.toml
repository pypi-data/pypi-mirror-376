[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devix"
version = "2.1.4"
description = "Automated development and code repair system with enhanced analysis capabilities"
readme = "README.md"
authors = [
    { name = "Tom Sapletta", email = "info@softreck.dev" }
]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "automated-development",
    "code-analysis",
    "code-repair",
    "continuous-integration",
    "quality-assurance",
    "testing",
    "monitoring"
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "psutil>=5.9.0",
    "docker>=6.0.0",
    "pathlib2>=2.3.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
    "jinja2>=3.1.0",
    "gitpython>=3.1.0",
    "markdown>=3.4.0",
    "colorama>=0.4.6",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pylint>=2.17.0",
    "bandit>=1.7.0",
    "radon>=6.0.0",
    "safety>=2.3.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-click>=0.8.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.scripts]
devix = "devix.cli:main"
devix-supervisor = "devix.core.supervisor:main"
devix-analyze = "devix.cli:analyze_command"
devix-report = "devix.cli:report_command"

[project.urls]
Homepage = "https://github.com/c20frame/devix"
Documentation = "https://devix.softreck.dev"
Repository = "https://github.com/c20frame/devix"
Issues = "https://github.com/c20frame/devix/issues"
Changelog = "https://github.com/c20frame/devix/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/devix"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "2.1.4"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "2.1.4"
addopts = "-ra -q --cov=src/devix --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["src/devix"]
branch = true
omit = [
    "tests/*",
    "*/tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pylint.messages_control]
disable = [
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-few-public-methods",
    "import-outside-toplevel",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[build-system]
requires = ["flit_core>=3.4"]
build-backend = "flit_core.buildapi"

[project]
name = "py_predicate"
description = "Module to create composable predicates"
version = "1.3"
authors = [{name = "Maurits Rijk", email = "maurits.rijk@gmail.com"}]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "exrex",
    "graphviz",
    "lark",
    "more-itertools",
    "typer",
]
readme = "README.md"
requires-python = ">=3.10"

[project.urls]
Source = "https://github.com/mrijk/py-predicate"
Documentation = "https://mrijk.github.io/py-predicate/"

[project.optional-dependencies]
test = [
    "black",
    "mypy",
    "mypy_extensions",
    "pytest",
    "pytest-benchmark",
    "pytest-cov",
    "ruff",
]
dev = [
    "bumpversion",
    "jsonschema",
    "pre-commit",
]

[tool.flit.module]
name = "predicate"

[tool.black]
line-length = 120

[tool.ruff]
lint.ignore = [
    "C901",
    "D100",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "E501",
    "S311",
]
line-length = 120
lint.select = ["B", "C", "D", "E", "F", "I", "N", "RET", "S", "T", "W"]
target-version = "py312"

[lint.pycodestyle]
#max-doc-length = 180

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"test/*" = ["D101", "D400", "D415",  "S101"]

[tool.mypy]

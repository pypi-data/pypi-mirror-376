"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class PBChunk(google.protobuf.message.Message):
    """We make use of interned strings, languages, and meta-pointers because this is leading to significant performance
    benefits.
    So many integer values are indexes into tables of interned values.
    Values prefixed with "si_" are string indexes
    Values prefixed with "li_" are language indexes
    Values prefixed with "mpi_" are meta-pointer indexes

    Null values for strings and languages are encoded as 0, so indexes into these tables
    are shifted by one. Specifically:
    - During serialization: null → 0; value i → index (i + 1), where i is the position in the interned table.
    - During deserialization: 0 → null; index i → element (i - 1) of the interned table.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERIALIZATION_FORMAT_VERSION_FIELD_NUMBER: builtins.int
    INTERNED_STRINGS_FIELD_NUMBER: builtins.int
    INTERNED_META_POINTERS_FIELD_NUMBER: builtins.int
    INTERNED_LANGUAGES_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    serialization_format_version: builtins.str
    @property
    def interned_strings(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Interned strings"""

    @property
    def interned_meta_pointers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBMetaPointer
    ]: ...
    @property
    def interned_languages(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBLanguage
    ]:
        """Interned languages"""

    @property
    def nodes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBNode
    ]: ...
    def __init__(
        self,
        *,
        serialization_format_version: builtins.str = ...,
        interned_strings: collections.abc.Iterable[builtins.str] | None = ...,
        interned_meta_pointers: (
            collections.abc.Iterable[global___PBMetaPointer] | None
        ) = ...,
        interned_languages: collections.abc.Iterable[global___PBLanguage] | None = ...,
        nodes: collections.abc.Iterable[global___PBNode] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "interned_languages",
            b"interned_languages",
            "interned_meta_pointers",
            b"interned_meta_pointers",
            "interned_strings",
            b"interned_strings",
            "nodes",
            b"nodes",
            "serialization_format_version",
            b"serialization_format_version",
        ],
    ) -> None: ...

global___PBChunk = PBChunk

@typing.final
class PBLanguage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SI_KEY_FIELD_NUMBER: builtins.int
    SI_VERSION_FIELD_NUMBER: builtins.int
    si_key: builtins.int
    si_version: builtins.int
    def __init__(
        self,
        *,
        si_key: builtins.int | None = ...,
        si_version: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_si_key",
            b"_si_key",
            "_si_version",
            b"_si_version",
            "si_key",
            b"si_key",
            "si_version",
            b"si_version",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_si_key",
            b"_si_key",
            "_si_version",
            b"_si_version",
            "si_key",
            b"si_key",
            "si_version",
            b"si_version",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_key", b"_si_key"]
    ) -> typing.Literal["si_key"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_version", b"_si_version"]
    ) -> typing.Literal["si_version"] | None: ...

global___PBLanguage = PBLanguage

@typing.final
class PBNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SI_ID_FIELD_NUMBER: builtins.int
    MPI_CLASSIFIER_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    CONTAINMENTS_FIELD_NUMBER: builtins.int
    REFERENCES_FIELD_NUMBER: builtins.int
    SI_ANNOTATIONS_FIELD_NUMBER: builtins.int
    SI_PARENT_FIELD_NUMBER: builtins.int
    si_id: builtins.int
    """Yes, we should _not_ have null IDs, but if necessary we can represent them"""
    mpi_classifier: builtins.int
    si_parent: builtins.int
    @property
    def properties(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBProperty
    ]: ...
    @property
    def containments(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBContainment
    ]: ...
    @property
    def references(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBReference
    ]: ...
    @property
    def si_annotations(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """This is a list of indexes representing the string values corresponding to the IDs of the annotations"""

    def __init__(
        self,
        *,
        si_id: builtins.int | None = ...,
        mpi_classifier: builtins.int = ...,
        properties: collections.abc.Iterable[global___PBProperty] | None = ...,
        containments: collections.abc.Iterable[global___PBContainment] | None = ...,
        references: collections.abc.Iterable[global___PBReference] | None = ...,
        si_annotations: collections.abc.Iterable[builtins.int] | None = ...,
        si_parent: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_si_id",
            b"_si_id",
            "_si_parent",
            b"_si_parent",
            "si_id",
            b"si_id",
            "si_parent",
            b"si_parent",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_si_id",
            b"_si_id",
            "_si_parent",
            b"_si_parent",
            "containments",
            b"containments",
            "mpi_classifier",
            b"mpi_classifier",
            "properties",
            b"properties",
            "references",
            b"references",
            "si_annotations",
            b"si_annotations",
            "si_id",
            b"si_id",
            "si_parent",
            b"si_parent",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_id", b"_si_id"]
    ) -> typing.Literal["si_id"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_parent", b"_si_parent"]
    ) -> typing.Literal["si_parent"] | None: ...

global___PBNode = PBNode

@typing.final
class PBMetaPointer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LI_LANGUAGE_FIELD_NUMBER: builtins.int
    SI_KEY_FIELD_NUMBER: builtins.int
    li_language: builtins.int
    """Instead of duplicating language+version as raw numbers everywhere,
    point to the languages table.
    index into PBChunk.languages
    """
    si_key: builtins.int
    """concept/key within that language"""
    def __init__(
        self,
        *,
        li_language: builtins.int = ...,
        si_key: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["_si_key", b"_si_key", "si_key", b"si_key"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_si_key", b"_si_key", "li_language", b"li_language", "si_key", b"si_key"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_key", b"_si_key"]
    ) -> typing.Literal["si_key"] | None: ...

global___PBMetaPointer = PBMetaPointer

@typing.final
class PBProperty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MPI_META_POINTER_FIELD_NUMBER: builtins.int
    SI_VALUE_FIELD_NUMBER: builtins.int
    mpi_meta_pointer: builtins.int
    si_value: builtins.int
    def __init__(
        self,
        *,
        mpi_meta_pointer: builtins.int = ...,
        si_value: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal["_si_value", b"_si_value", "si_value", b"si_value"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_si_value",
            b"_si_value",
            "mpi_meta_pointer",
            b"mpi_meta_pointer",
            "si_value",
            b"si_value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_value", b"_si_value"]
    ) -> typing.Literal["si_value"] | None: ...

global___PBProperty = PBProperty

@typing.final
class PBContainment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MPI_META_POINTER_FIELD_NUMBER: builtins.int
    SI_CHILDREN_FIELD_NUMBER: builtins.int
    mpi_meta_pointer: builtins.int
    @property
    def si_children(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.int
    ]: ...
    def __init__(
        self,
        *,
        mpi_meta_pointer: builtins.int = ...,
        si_children: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "mpi_meta_pointer", b"mpi_meta_pointer", "si_children", b"si_children"
        ],
    ) -> None: ...

global___PBContainment = PBContainment

@typing.final
class PBReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MPI_META_POINTER_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    mpi_meta_pointer: builtins.int
    @property
    def values(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBReferenceValue
    ]: ...
    def __init__(
        self,
        *,
        mpi_meta_pointer: builtins.int = ...,
        values: collections.abc.Iterable[global___PBReferenceValue] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "mpi_meta_pointer", b"mpi_meta_pointer", "values", b"values"
        ],
    ) -> None: ...

global___PBReference = PBReference

@typing.final
class PBReferenceValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SI_RESOLVEINFO_FIELD_NUMBER: builtins.int
    SI_REFERRED_FIELD_NUMBER: builtins.int
    si_resolveInfo: builtins.int
    si_referred: builtins.int
    def __init__(
        self,
        *,
        si_resolveInfo: builtins.int | None = ...,
        si_referred: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_si_referred",
            b"_si_referred",
            "_si_resolveInfo",
            b"_si_resolveInfo",
            "si_referred",
            b"si_referred",
            "si_resolveInfo",
            b"si_resolveInfo",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_si_referred",
            b"_si_referred",
            "_si_resolveInfo",
            b"_si_resolveInfo",
            "si_referred",
            b"si_referred",
            "si_resolveInfo",
            b"si_resolveInfo",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_referred", b"_si_referred"]
    ) -> typing.Literal["si_referred"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_si_resolveInfo", b"_si_resolveInfo"]
    ) -> typing.Literal["si_resolveInfo"] | None: ...

global___PBReferenceValue = PBReferenceValue

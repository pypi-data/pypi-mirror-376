[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cogents-tools"
version = "0.1.5.2"
description = "Supportive tools for Cogents, towards a cognitive agentic system"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
maintainers = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
keywords = ["agents", "multi-agent system", "cognition", "artificial intelligence"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "cogents-core>=0.1.9,<0.2.0",
    "aiohttp>=3.12.15",
    "aiofiles>=24.1.0",
    "anyio>=4.9.0",
    "httpx>=0.28.1",
    "psutil>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/mirasurf/cogents-tools"
Repository = "https://github.com/mirasurf/cogents-tools"

[project.optional-dependencies]
integrations = [
    "opik>=0.2.0",
    # browser use
    "screeninfo>=0.8.1",
    "uuid7>=0.1.0",
    "authlib>=1.6.0",
    "pypdf>=5.7.0",
    "cdp-use>=1.4.0",
    "markdown-pdf>=1.5",
    "html2text>=2025.4.15",
    # search
    "google-genai>=1.29.0,<2.0.0",
    "tavily-python>=0.3.0",
    "langchain-tavily>=0.2.11",
    # vector store
    "weaviate-client>=4.16.9",
    "psycopg2>=2.9.10",
    "psycopg2-binary>=2.9.0",
]

toolkits = [
    # academic
    "arxiv>=2.2.0",
    # development
    "matplotlib>=3.8.0",
    "pexpect>=4.9.0",
    "ipython>=8.18.0",
    "pandas>=2.0.0",
    # multimedia
    "pillow>=10.1.0,<12.0",
    "pymupdf>=1.23.0",
    "openpyxl>=3.1.5",
    "aliyun-python-sdk-core>=2.13.1,<3.0.0",
    # communication
    "google-api-python-client>=2.174.0",
    "google-auth-oauthlib>=1.2.2",
    "google-auth>=2.40.3",
    # info retrieval
    "tavily-python>=0.3.0",
    "langchain-tavily>=0.2.11",
    "wikipedia-api>=0.6.0",
]

dev = [
    "pytest>=8.2,<9",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "pytest-twisted>=1.14.3",
    "twisted>=25.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=7.3.0",
    "autoflake>=2.3.1",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["cogents_tools*"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cogents_tools"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

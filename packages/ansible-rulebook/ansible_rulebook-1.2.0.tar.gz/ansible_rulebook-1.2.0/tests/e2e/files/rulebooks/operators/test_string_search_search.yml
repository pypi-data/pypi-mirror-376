---
- name: Test the string search operator search
  hosts: all
  sources:
    - generic:
        payload:
          - line1: "I'm not the pheasant plucker"
          - line1: "I'm the pheasant plucker's son"
          - line1: "I'm only plucking pheasants"
            line2: "'til the pheasant plucker comes"
          - line1: |
              She sells 57 seashells
              by the seashore
          - line1: |
              She sells 68 seashells
              by the seashore
          - line1: |
              Peter Piper picked a peck
              of pickled peppers
          - line1: |
              How can a clam cram
              in a clean cream can
          - line1: "Pick 6 beaks, seek big peaks"

  rules:
    - name: Single condition search, case sensitive
      condition: event.line1 is search("not the pheasant", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #01"

    - name: Single condition search using regex, case insensitive
      condition: event.line1 is search("(phea).{4}.PluC.er'S.soN", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #02"

    - name: Multi condition search case sensitive & insensitive with negation
      condition: >
        event.line1 is search("PlUckinG pheaSANTs", ignorecase=true) and
        event.line2 is not search("the plucker is not coming", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #03"

    - name: Single condition multiline search, case sensitive
      condition: event.line1 is search("the seashore", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #04"

    - name: Multi condition multiline search, case insensitive
      condition: >
        event.line1 is search("piCKed a peck", ignorecase=true) or
        event.line1 is search("pepper piCkles", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #05"

    - name: Multi condition multiline search, case sensitive & insensitive with negation
      condition: >
        event.line1 is not search("can A clAM", ignorecase=false) and
        event.line1 is search("CleaN cReam", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #06"

    - name: Multi condition string search operator combination
      condition: >
        event.line1 is search("beaks, sEEk", ignorecase=true) and
        (event.line1 is not regex("^Pick.*beans$", ignorecase=false) or
        event.line1 is match("PICK", ignorecase=false))
      action:
        debug:
          msg: "Output for testcase #07"

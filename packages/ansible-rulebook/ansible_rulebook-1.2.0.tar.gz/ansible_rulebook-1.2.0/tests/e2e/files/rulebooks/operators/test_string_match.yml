---
- name: Test the string search operator match
  hosts: all
  sources:
    - generic:
        payload:
          - line1: "I'm not the pheasant plucker"
          - line1: "I'm the pheasant plucker's son"
          - line1: "I'm only plucking pheasants"
            line2: "'til the pheasant plucker comes"
          - line1: |
              She sells 57 seashells
              by the seashore
          - line1: |
              She sells 68 seashells
              by the seashore
          - line1: |
              Peter Piper picked a peck
              of pickled peppers
          - line1: |
              How can a clam cram
              in a clean cream can
          - line1: "Pick 6 beaks, seek big peaks"

  rules:
    - name: Single condition match, case sensitive
      condition: event.line1 is match("I'm not", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #01"

    - name: Single condition match using regex, case insensitive
      condition: event.line1 is match("^I'm.(th).*PL[u]ckER", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #02"

    - name: Multi condition match case sensitive & insensitive with negation
      condition: >
        event.line1 is match("I'm only plucKING", ignorecase=true) and
        event.line2 is not match("'til THE", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #03"

    - name: Single condition multiline match, case sensitive
      condition: event.line1 is match("She sells", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #04"

    - name: Multi condition multiline match, case insensitive
      condition: >
        event.line1 is match("PeTEr PiPER", ignorecase=true) or
        event.line1 is match("of piCKLED", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #05"

    - name: Multi condition multiline match, case sensitive & insensitive with negation
      condition: >
        event.line1 is not match("In A clEAN", ignorecase=false) and
        event.line1 is match("HoW CAN a clAm Cram", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #06"

    - name: Multi condition string search operator combination
      condition: >
        event.line1 is match("PicK", ignorecase=true) and
        (event.line1 is regex("[3-6].{8}[sp]e[ea]k") or
         event.line1 is not search("wont match"))
      action:
        debug:
          msg: "Output for testcase #07"

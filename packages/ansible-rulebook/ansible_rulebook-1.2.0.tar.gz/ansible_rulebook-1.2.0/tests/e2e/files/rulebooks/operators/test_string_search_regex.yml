---
- name: Test the string search operator regex
  hosts: all
  sources:
    - generic:
        payload:
          - line1: "I'm not the pheasant plucker"
          - line1: "I'm the pheasant plucker's son"
          - line1: "I'm only plucking pheasants"
            line2: "'til the pheasant plucker comes"
          - line1: |
              She sells 57 seashells
              by the seashore
          - line1: |
              She sells 68 seashells
              by the seashore
          - line1: |
              Peter Piper picked a peck
              of pickled peppers
          - line1: |
              How can a clam cram
              in a clean cream can
          - line1: "Pick 6 beaks, seek big peaks"

  rules:
    - name: Single condition regex, case sensitive
      condition: event.line1 is regex("^I'm.{9}pheas", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #01"

    - name: Single condition regex, case insensitive
      condition: event.line1 is regex("plUCk.(r's).son$", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #02"

    - name: Multi condition regex case sensitive & insensitive with negation
      condition: >
        event.line1 is regex(".*KING.pheaSAnts$", ignorecase=true) and
        event.line2 is not regex("^.til.{10}ant$", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #03"

    - name: Single condition multiline regex, case sensitive
      condition: event.line1 is regex("(?s)[e-s].*[3-6][2-9].*the.sea", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #04"

    - name: Multi condition multiline regex, case insensitive
      condition: >
        event.line1 is regex("^PeTER.{7}.[i-p].{5}a", ignorecase=true) or
        event.line1 is regex(".ickled$", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #05"

    - name: Multi condition multiline regex, case sensitive & insensitive with negation
      condition: >
        event.line1 is not regex("^Cram..an", ignorecase=false) and
        event.line1 is regex("(?s)a.cla[m].*cream", ignorecase=true)
      action:
        debug:
          msg: "Output for testcase #06"

    - name: Multi condition string search operator combination
      condition: >
        event.line1 is regex("^PiCK.*peaks$", ignorecase=true) and
        event.line1 is not search("wont match") and
        event.line1 is not match("pick", ignorecase=false)
      action:
        debug:
          msg: "Output for testcase #07"

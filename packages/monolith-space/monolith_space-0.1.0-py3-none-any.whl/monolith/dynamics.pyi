"""
Pybind11 bindings for Dynamic and TwoBody
"""
from __future__ import annotations
import numpy
__all__: list[str] = ['Dynamic', 'State', 'TwoBody']
class Dynamic:
    def __call__(self, arg0: State) -> State:
        ...
class State:
    acceleration: numpy.ndarray[numpy.float64[3, 1]]
    position: numpy.ndarray[numpy.float64[3, 1]]
    velocity: numpy.ndarray[numpy.float64[3, 1]]
    def __init__(self, position: numpy.ndarray[numpy.float64[3, 1]] = ..., velocity: numpy.ndarray[numpy.float64[3, 1]] = ..., acceleration: numpy.ndarray[numpy.float64[3, 1]] = ...) -> None:
        ...
    def __matmul__(self, arg0: State) -> State:
        ...
    def get_acceleration(self) -> numpy.ndarray[numpy.float64[3, 1]]:
        ...
    def get_position(self) -> numpy.ndarray[numpy.float64[3, 1]]:
        ...
    def get_velocity(self) -> numpy.ndarray[numpy.float64[3, 1]]:
        ...
    def set_acceleration(self, arg0: numpy.ndarray[numpy.float64[3, 1]]) -> None:
        ...
    def set_position(self, arg0: numpy.ndarray[numpy.float64[3, 1]]) -> None:
        ...
    def set_velocity(self, arg0: numpy.ndarray[numpy.float64[3, 1]]) -> None:
        ...
class TwoBody(Dynamic):
    mu: float
    def __call__(self, arg0: State) -> State:
        ...
    def __init__(self, mu: float) -> None:
        ...

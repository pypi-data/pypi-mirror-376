# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: meshtrade/compliance/client/v1/fund.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'meshtrade/compliance/client/v1/fund.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.type import date_pb2 as google_dot_type_dot_date__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)meshtrade/compliance/client/v1/fund.proto\x12\x1emeshtrade.compliance.client.v1\x1a\x16google/type/date.proto\"\xf6\x01\n\x04\x46und\x12\'\n\x0fregistered_name\x18\x01 \x01(\tR\x0eregisteredName\x12/\n\x13registration_number\x18\x02 \x01(\tR\x12registrationNumber\x12%\n\x0etax_identifier\x18\x03 \x01(\tR\rtaxIdentifier\x12.\n\x13\x63ountry_of_domicile\x18\x04 \x01(\tR\x11\x63ountryOfDomicile\x12=\n\x11\x64\x61te_of_inception\x18\x05 \x01(\x0b\x32\x11.google.type.DateR\x0f\x64\x61teOfInceptionBc\n%co.meshtrade.api.compliance.client.v1Z:github.com/meshtrade/api/go/compliance/client/v1;client_v1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'meshtrade.compliance.client.v1.fund_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n%co.meshtrade.api.compliance.client.v1Z:github.com/meshtrade/api/go/compliance/client/v1;client_v1'
  _globals['_FUND']._serialized_start=102
  _globals['_FUND']._serialized_end=348
# @@protoc_insertion_point(module_scope)

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sigfox-manager"
dynamic = ["version"]
description = "A Python library for handling Sigfox API operations"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Jorge Benavides Aspiazu", email = "jobenas@gmail.com"},
]
keywords = ["sigfox", "api", "iot", "device", "management"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications",
]
dependencies = [
    "requests>=2.25.0",
    "pydantic>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "build>=0.7.0",
    "twine>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/Jobenas/sigfox_manager_utility"
Repository = "https://github.com/Jobenas/sigfox_manager_utility"
Documentation = "https://github.com/Jobenas/sigfox_manager_utility#readme"
"Bug Tracker" = "https://github.com/Jobenas/sigfox_manager_utility/issues"

[tool.setuptools]
packages = ["sigfox_manager", "sigfox_manager.models", "sigfox_manager.sigfox_manager_exceptions", "sigfox_manager.utils"]

[tool.setuptools_scm]
write_to = "sigfox_manager/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "py-obdii"
description = "A Python library for interacting with OBDII."
readme = { file = ".github/README.rst", content-type = "text/x-rst" }
authors = [{ name = "PaulMarisOUMary" }]
license = { file = "LICENSE" }
keywords = [
    "obd",
    "obdii",
    "obd2",
    "py-obdii",
    "py-obd2",
    "python obd",
    "ELM327",
    "automotive",
    "torque",
    "car",
    "vehicle",
    "diagnostics",
    "car diagnostics",
    "engine data",
    "car data",
    "vehicle data",
    "can bus",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dynamic = ["version", "dependencies"]

[project.urls]
Home = "https://github.com/PaulMarisOUMary/OBDII"
Repository = "https://github.com/PaulMarisOUMary/OBDII"
Documentation = "https://py-obdii.readthedocs.io"
Issues = "https://github.com/PaulMarisOUMary/OBDII/issues"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
]
dev = [
    "ELM327-emulator",
]
docs = [
    "sphinx",
    "sphinxawesome-theme",
    "sphinx-design",
]

[tool.setuptools.package-data]
"obdii" = ["py.typed"]

[tool.setuptools.packages.find]
where = ["."]
include = ["obdii*"]

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.pyright]
include = [
    "obdii/**",
]
exclude = [
    ".git",
    ".venv",
    "**/__pycache__",
    "build",
    "dist",
    "docs",
]
pythonVersion = "3.8"
typeCheckingMode = "basic"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
# eglif_cond_alpha_multisyn - Conductance based extended generalized leaky integrate and fire neuron model
# ########################################################################################################
#
# Description
# +++++++++++
#
# eglif_cond_alpha_multisyn is the generalized leaky integrate and fire neuron according to
# Geminiani et al. (2018) [#geminiani_2018]_, with post-synaptic conductances in the form of a
# bi-exponential ("alpha") function.
#
# The membrane potential is given by the following differential equation:
#
# .. math::
#    \begin{cases}
#        C_m \dfrac{dV_m}{dt} = \dfrac{C_m}{\tau_m}(V_m-E_L)
#                                 - I_{adap} + I_{dep} + I_e + I_{stim} + I_{syn}\\
#        \dfrac{dI_{adap}}{dt}=k_{adap}(V_m-E_L)-k_2 \cdot I_{adap}\\
#        \dfrac{dI_{dep}}{dt} =-k_1 \cdot I_{dep}\\
#    \end{cases}

# where the synaptic current :math:`I_{syn}` integrates the input from 4 postsynaptic receptors:
#
# .. math::
#        I_{syn} = \sum_{i=1} ^{4} g_i (V - E_{rev,i})
#
# Here, the synapse `i` is excitatory or inhibitory depending on the value of :math:`E_{rev,i}`.
#
# Neuron produces spikes stochastically according to a point process with the firing intensity:
#
# .. math::
#   \lambda = \lambda_0 \cdot e^{\dfrac{V_m -V_{th}}{\tau_V}}
#
# In case of spike emission, the spike-triggered adaptation currents :math:`I_{adap}` and
# :math:`I_{dep}` are respectively increased and set by their respective constant
# (which can be positive or negative):
#
# .. math::
#    V_m &= V_{reset}\\
#    I_{dep} &= A1\\
#    I_{adap} &= I_{adap} + A2
#
# References
# ++++++++++
#
# .. start-references
#
# .. [#geminiani_2018] Geminiani, A., Casellato, C., Locatelli, F., Prestori, F., Pedrocchi, A.,
#    & D'Angelo, E. (2018). Complex dynamics in simplified neuronal models:
#    reproducing Golgi cell electroresponsiveness. Frontiers in neuroinformatics, 12, 88.
#    https://doi.org/10.3389/fninf.2018.00088
#
#
# See also
# ++++++++
#
# aeif_cond_alpha, aeif_cond_exp
#
model eglif_cond_alpha_multisyn:
    state:
        V_m mV = -60.0 mV                   # Membrane potential in mV
        I_dep pA = 0 * pA                   # Depolarizing spike-triggered current
        I_adap pA = 0 * pA                  # Adaptation current
        r integer = 0                       # Refractory state

    equations:
        # Alpha exponential kernels for the postsynaptic receptor
        kernel syn_kernel1 = (e / tau_syn1) * t * exp(-t / tau_syn1)
        kernel syn_kernel2 = (e / tau_syn2) * t * exp(-t / tau_syn2)
        kernel syn_kernel3 = (e / tau_syn3) * t * exp(-t / tau_syn3)
        kernel syn_kernel4 = (e / tau_syn4) * t * exp(-t / tau_syn4)

        # Update synaptic current
        inline I_syn1 pA = convolve(syn_kernel1, syn1_spike) * nS * (E_rev1 - V_m)
        inline I_syn2 pA = convolve(syn_kernel2, syn2_spike) * nS * (E_rev2 - V_m)
        inline I_syn3 pA = convolve(syn_kernel3, syn3_spike) * nS * (E_rev3 - V_m)
        inline I_syn4 pA = convolve(syn_kernel4, syn4_spike) * nS * (E_rev4 - V_m)
        recordable inline I_syn pA =  I_syn1 + I_syn2 + I_syn3 + I_syn4

        # Update membrane potential, adaptation and spike triggered currents
        # WARNING: SIGN BELOW IS INCORRECT FOR A LIF MODEL -> Should be V_m' = - (V_m - E_L) / tau_m + ...
        V_m' = (V_m - E_L) / tau_m + (I_e + I_stim - I_adap + I_dep + I_syn) / C_m
        I_dep' = - I_dep * k_1 / ms
        I_adap' = (V_m - E_L) * (k_adap * nS / ms) - I_adap * (k_2 / ms)

    parameters:
        C_m pF = 281.0 pF                   # Membrane Capacitance
        tau_m ms = 30.0 ms                  # Membrane time constant
        E_L mV = -70.6 mV                   # Leak reversal Potential (aka resting potential)
        t_ref ms = 0.0 ms                   # Refractory period
        I_e pA = 0 pA                       # Constant endogenous current
        V_min mV = -150.0 mV                # Minimal membrane potential value

        V_th mV = -50.4 mV                  # Spike Threshold
        lambda_0 real = 0.001 / ms          # Escape rate parameter
        tau_V mV = 0.5 mV                   # Escape rate parameter
        V_reset mV = -60.0 mV               # Reset potential

        k_1 real = pow(144.0, -1) / ms      # Decay rate
        k_2 real = pow(80.5, -1) / ms       # Adaptation constant
        k_adap real = 4 * nS / ms           # Adaptation constant
        A1 pA = 100.0 pA                    # Current update constant
        A2 pA = 100.0 pA                    # Current update constant

        E_rev1 mV = 0 mV                    # Postsynaptic receptor reversal Potential
        tau_syn1 ms = 0.2 ms                # Postsynaptic receptor time constant
        E_rev2 mV = -80.0 mV                # Postsynaptic receptor reversal Potential
        tau_syn2 ms = 2.0 ms                # Postsynaptic receptor time constant
        E_rev3 mV = 0.0 mV                  # Postsynaptic receptor reversal Potential
        tau_syn3 ms = 2.0 ms                # Postsynaptic receptor time constant
        E_rev4 mV = -80.0 mV                # Postsynaptic receptor reversal Potential
        tau_syn4 ms = 2.0 ms                # Postsynaptic receptor time constant
    
    internals:
        RefractoryCounts integer = steps(t_ref) # refractory time in steps

    input:
        syn1_spike <- spike
        syn2_spike <- spike
        syn3_spike <- spike
        syn4_spike <- spike
        I_stim pA <- continuous         # external stimulation current

    output:
        spike

    update:
        V_m = max(V_m, V_min)
        integrate_odes()

        if r > 0:
            r -= 1
            V_m = V_reset
        else:
            inline lambda real = lambda_0 * exp((V_m - V_th) / tau_V)
            if random_uniform(0, 1) < - expm1(-lambda * resolution()):
                r = RefractoryCounts
                I_dep = A1
                I_adap += A2
                V_m = V_reset
                emit_spike()

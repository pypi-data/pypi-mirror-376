[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tumor-detection-segmentation"
dynamic = ["version"]
description = "Advanced Medical Imaging AI Platform for tumor detection and segmentation"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Medical Imaging AI Team", email = "team@medical-ai.org" }]
maintainers = [{ name = "Kevin", email = "hkevin01@github.com" }]
keywords = [
    "medical-imaging",
    "ai",
    "tumor-detection",
    "segmentation",
    "monai",
    "dicom",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "monai>=1.3.0",
    "nibabel>=4.0.0",
    "numpy>=1.21.0",
    "scipy>=1.8.0",
    "scikit-image>=0.19.0",
    "pandas>=1.4.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
    "typing-extensions>=4.0.0",
    "pillow>=9.0.0",
    "SimpleITK>=2.2.0",
]

[project.optional-dependencies]
clinical = [
    "pydicom>=2.4.3",
    "pynetdicom>=2.0.2",
    "fhir.resources>=7.0.2",
    "reportlab>=4.0.4",
    "python-docx>=0.8.11",
    "jinja2>=3.1.2",
    "cryptography>=41.0.4",
    "pyjwt>=2.8.0",
    "sqlalchemy>=2.0.21",
]
gui = ["streamlit>=1.28.0", "plotly>=5.15.0", "dash>=2.14.0"]
api = ["fastapi>=0.103.0", "uvicorn>=0.23.0", "pydantic>=2.4.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "ruff>=0.0.287",
    "mypy>=1.5.1",
    "pre-commit>=3.3.0",
]
all = ["tumor-detection-segmentation[clinical,gui,api,dev]"]

[project.urls]
Homepage = "https://github.com/hkevin01/tumor-detection-segmentation"
Documentation = "https://github.com/hkevin01/tumor-detection-segmentation/docs"
Repository = "https://github.com/hkevin01/tumor-detection-segmentation.git"
Issues = "https://github.com/hkevin01/tumor-detection-segmentation/issues"

[project.scripts]
tumor-detect-train = "tumor_detection.cli.train:main"
tumor-detect-infer = "tumor_detection.cli.infer:main"

[tool.hatch.version]
path = "src/tumor_detection/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/tumor_detection"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "cpu: marks tests to run on CPU only (for CI/CD environments without GPU)",
    "gpu: marks tests that require GPU acceleration",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running",
    "preprocessing: marks tests for data preprocessing",
    "inference: marks tests for model inference",
    "api: marks tests for REST API endpoints",
    "frontend: marks tests for frontend components",
    "performance: marks tests for performance testing",
    "timeout: marks tests with timeout limits",
]
addopts = ["--verbose", "--tb=short", "--strict-markers", "--disable-warnings"]
filterwarnings = [
    "ignore::DeprecationWarning:.*SwigPy.*",
    "ignore::DeprecationWarning:.*has no __module__ attribute*",
    "ignore::DeprecationWarning:.*builtin type SwigPyPacked*",
    "ignore::DeprecationWarning:.*builtin type SwigPyObject*",
    "ignore::DeprecationWarning:.*builtin type swigvarlink*",
    "ignore::UserWarning:.*torch.*",
    "ignore::PendingDeprecationWarning",
    "ignore::RuntimeWarning:.*numpy.*",
]

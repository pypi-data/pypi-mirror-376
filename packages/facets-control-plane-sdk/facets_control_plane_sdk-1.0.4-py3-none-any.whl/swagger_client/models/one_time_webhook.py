# coding: utf-8

"""
    Control-plane

    API Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OneTimeWebhook(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'created_by': 'str',
        'creation_date': 'datetime',
        'last_modified_date': 'datetime',
        'last_modified_by': 'str',
        'type': 'str',
        'status': 'str',
        'expires_at': 'datetime',
        'delete_at': 'datetime',
        'error_message': 'str'
    }

    attribute_map = {
        'id': 'id',
        'created_by': 'createdBy',
        'creation_date': 'creationDate',
        'last_modified_date': 'lastModifiedDate',
        'last_modified_by': 'lastModifiedBy',
        'type': 'type',
        'status': 'status',
        'expires_at': 'expiresAt',
        'delete_at': 'deleteAt',
        'error_message': 'errorMessage'
    }

    def __init__(self, id=None, created_by=None, creation_date=None, last_modified_date=None, last_modified_by=None, type=None, status=None, expires_at=None, delete_at=None, error_message=None):  # noqa: E501
        """OneTimeWebhook - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._created_by = None
        self._creation_date = None
        self._last_modified_date = None
        self._last_modified_by = None
        self._type = None
        self._status = None
        self._expires_at = None
        self._delete_at = None
        self._error_message = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if created_by is not None:
            self.created_by = created_by
        if creation_date is not None:
            self.creation_date = creation_date
        if last_modified_date is not None:
            self.last_modified_date = last_modified_date
        if last_modified_by is not None:
            self.last_modified_by = last_modified_by
        if type is not None:
            self.type = type
        if status is not None:
            self.status = status
        if expires_at is not None:
            self.expires_at = expires_at
        if delete_at is not None:
            self.delete_at = delete_at
        if error_message is not None:
            self.error_message = error_message

    @property
    def id(self):
        """Gets the id of this OneTimeWebhook.  # noqa: E501


        :return: The id of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OneTimeWebhook.


        :param id: The id of this OneTimeWebhook.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def created_by(self):
        """Gets the created_by of this OneTimeWebhook.  # noqa: E501


        :return: The created_by of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this OneTimeWebhook.


        :param created_by: The created_by of this OneTimeWebhook.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def creation_date(self):
        """Gets the creation_date of this OneTimeWebhook.  # noqa: E501


        :return: The creation_date of this OneTimeWebhook.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this OneTimeWebhook.


        :param creation_date: The creation_date of this OneTimeWebhook.  # noqa: E501
        :type: datetime
        """

        self._creation_date = creation_date

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this OneTimeWebhook.  # noqa: E501


        :return: The last_modified_date of this OneTimeWebhook.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this OneTimeWebhook.


        :param last_modified_date: The last_modified_date of this OneTimeWebhook.  # noqa: E501
        :type: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this OneTimeWebhook.  # noqa: E501


        :return: The last_modified_by of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this OneTimeWebhook.


        :param last_modified_by: The last_modified_by of this OneTimeWebhook.  # noqa: E501
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def type(self):
        """Gets the type of this OneTimeWebhook.  # noqa: E501


        :return: The type of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OneTimeWebhook.


        :param type: The type of this OneTimeWebhook.  # noqa: E501
        :type: str
        """
        allowed_values = ["AZURE", "GCP", "AWS", "KUBERNETES", "ECR", "OTHER_DOCKER_REGISTRY", "GITHUB", "GITLAB", "BITBUCKET"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def status(self):
        """Gets the status of this OneTimeWebhook.  # noqa: E501


        :return: The status of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OneTimeWebhook.


        :param status: The status of this OneTimeWebhook.  # noqa: E501
        :type: str
        """
        allowed_values = ["WAITING", "SUCCESS", "FAILED", "EXPIRED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"  # noqa: E501
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def expires_at(self):
        """Gets the expires_at of this OneTimeWebhook.  # noqa: E501


        :return: The expires_at of this OneTimeWebhook.  # noqa: E501
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this OneTimeWebhook.


        :param expires_at: The expires_at of this OneTimeWebhook.  # noqa: E501
        :type: datetime
        """

        self._expires_at = expires_at

    @property
    def delete_at(self):
        """Gets the delete_at of this OneTimeWebhook.  # noqa: E501


        :return: The delete_at of this OneTimeWebhook.  # noqa: E501
        :rtype: datetime
        """
        return self._delete_at

    @delete_at.setter
    def delete_at(self, delete_at):
        """Sets the delete_at of this OneTimeWebhook.


        :param delete_at: The delete_at of this OneTimeWebhook.  # noqa: E501
        :type: datetime
        """

        self._delete_at = delete_at

    @property
    def error_message(self):
        """Gets the error_message of this OneTimeWebhook.  # noqa: E501


        :return: The error_message of this OneTimeWebhook.  # noqa: E501
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this OneTimeWebhook.


        :param error_message: The error_message of this OneTimeWebhook.  # noqa: E501
        :type: str
        """

        self._error_message = error_message

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OneTimeWebhook, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OneTimeWebhook):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

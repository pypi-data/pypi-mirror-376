# coding: utf-8

"""
    Control-plane

    API Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CommitLog(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'commit_id': 'str',
        'author_email': 'str',
        'author_name': 'str',
        'commit_message': 'str',
        'commit_date': 'datetime'
    }

    attribute_map = {
        'commit_id': 'commitId',
        'author_email': 'authorEmail',
        'author_name': 'authorName',
        'commit_message': 'commitMessage',
        'commit_date': 'commitDate'
    }

    def __init__(self, commit_id=None, author_email=None, author_name=None, commit_message=None, commit_date=None):  # noqa: E501
        """CommitLog - a model defined in Swagger"""  # noqa: E501
        self._commit_id = None
        self._author_email = None
        self._author_name = None
        self._commit_message = None
        self._commit_date = None
        self.discriminator = None
        if commit_id is not None:
            self.commit_id = commit_id
        if author_email is not None:
            self.author_email = author_email
        if author_name is not None:
            self.author_name = author_name
        if commit_message is not None:
            self.commit_message = commit_message
        if commit_date is not None:
            self.commit_date = commit_date

    @property
    def commit_id(self):
        """Gets the commit_id of this CommitLog.  # noqa: E501


        :return: The commit_id of this CommitLog.  # noqa: E501
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this CommitLog.


        :param commit_id: The commit_id of this CommitLog.  # noqa: E501
        :type: str
        """

        self._commit_id = commit_id

    @property
    def author_email(self):
        """Gets the author_email of this CommitLog.  # noqa: E501


        :return: The author_email of this CommitLog.  # noqa: E501
        :rtype: str
        """
        return self._author_email

    @author_email.setter
    def author_email(self, author_email):
        """Sets the author_email of this CommitLog.


        :param author_email: The author_email of this CommitLog.  # noqa: E501
        :type: str
        """

        self._author_email = author_email

    @property
    def author_name(self):
        """Gets the author_name of this CommitLog.  # noqa: E501


        :return: The author_name of this CommitLog.  # noqa: E501
        :rtype: str
        """
        return self._author_name

    @author_name.setter
    def author_name(self, author_name):
        """Sets the author_name of this CommitLog.


        :param author_name: The author_name of this CommitLog.  # noqa: E501
        :type: str
        """

        self._author_name = author_name

    @property
    def commit_message(self):
        """Gets the commit_message of this CommitLog.  # noqa: E501


        :return: The commit_message of this CommitLog.  # noqa: E501
        :rtype: str
        """
        return self._commit_message

    @commit_message.setter
    def commit_message(self, commit_message):
        """Sets the commit_message of this CommitLog.


        :param commit_message: The commit_message of this CommitLog.  # noqa: E501
        :type: str
        """

        self._commit_message = commit_message

    @property
    def commit_date(self):
        """Gets the commit_date of this CommitLog.  # noqa: E501


        :return: The commit_date of this CommitLog.  # noqa: E501
        :rtype: datetime
        """
        return self._commit_date

    @commit_date.setter
    def commit_date(self, commit_date):
        """Sets the commit_date of this CommitLog.


        :param commit_date: The commit_date of this CommitLog.  # noqa: E501
        :type: datetime
        """

        self._commit_date = commit_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CommitLog, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CommitLog):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

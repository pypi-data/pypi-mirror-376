# coding: utf-8

"""
    Control-plane

    API Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ResourceHistoryOverview(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_name': 'str',
        'resource_type': 'str',
        'resource_status': 'str',
        'cluster_id': 'str',
        'cluster_name': 'str',
        'blueprint_version': 'ResourceStatusMetadata',
        'override_version': 'ResourceStatusMetadata',
        'artifact_version': 'ResourceStatusMetadata',
        'disabled': 'bool',
        'release_button_status': 'ReleaseButtonStatus',
        'overridden': 'bool'
    }

    attribute_map = {
        'resource_name': 'resourceName',
        'resource_type': 'resourceType',
        'resource_status': 'resourceStatus',
        'cluster_id': 'clusterId',
        'cluster_name': 'clusterName',
        'blueprint_version': 'blueprintVersion',
        'override_version': 'overrideVersion',
        'artifact_version': 'artifactVersion',
        'disabled': 'disabled',
        'release_button_status': 'releaseButtonStatus',
        'overridden': 'overridden'
    }

    def __init__(self, resource_name=None, resource_type=None, resource_status=None, cluster_id=None, cluster_name=None, blueprint_version=None, override_version=None, artifact_version=None, disabled=None, release_button_status=None, overridden=None):  # noqa: E501
        """ResourceHistoryOverview - a model defined in Swagger"""  # noqa: E501
        self._resource_name = None
        self._resource_type = None
        self._resource_status = None
        self._cluster_id = None
        self._cluster_name = None
        self._blueprint_version = None
        self._override_version = None
        self._artifact_version = None
        self._disabled = None
        self._release_button_status = None
        self._overridden = None
        self.discriminator = None
        if resource_name is not None:
            self.resource_name = resource_name
        if resource_type is not None:
            self.resource_type = resource_type
        if resource_status is not None:
            self.resource_status = resource_status
        if cluster_id is not None:
            self.cluster_id = cluster_id
        if cluster_name is not None:
            self.cluster_name = cluster_name
        if blueprint_version is not None:
            self.blueprint_version = blueprint_version
        if override_version is not None:
            self.override_version = override_version
        if artifact_version is not None:
            self.artifact_version = artifact_version
        if disabled is not None:
            self.disabled = disabled
        if release_button_status is not None:
            self.release_button_status = release_button_status
        if overridden is not None:
            self.overridden = overridden

    @property
    def resource_name(self):
        """Gets the resource_name of this ResourceHistoryOverview.  # noqa: E501


        :return: The resource_name of this ResourceHistoryOverview.  # noqa: E501
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this ResourceHistoryOverview.


        :param resource_name: The resource_name of this ResourceHistoryOverview.  # noqa: E501
        :type: str
        """

        self._resource_name = resource_name

    @property
    def resource_type(self):
        """Gets the resource_type of this ResourceHistoryOverview.  # noqa: E501


        :return: The resource_type of this ResourceHistoryOverview.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ResourceHistoryOverview.


        :param resource_type: The resource_type of this ResourceHistoryOverview.  # noqa: E501
        :type: str
        """

        self._resource_type = resource_type

    @property
    def resource_status(self):
        """Gets the resource_status of this ResourceHistoryOverview.  # noqa: E501


        :return: The resource_status of this ResourceHistoryOverview.  # noqa: E501
        :rtype: str
        """
        return self._resource_status

    @resource_status.setter
    def resource_status(self, resource_status):
        """Sets the resource_status of this ResourceHistoryOverview.


        :param resource_status: The resource_status of this ResourceHistoryOverview.  # noqa: E501
        :type: str
        """
        allowed_values = ["RUNNING", "STOPPED"]  # noqa: E501
        if resource_status not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_status` ({0}), must be one of {1}"  # noqa: E501
                .format(resource_status, allowed_values)
            )

        self._resource_status = resource_status

    @property
    def cluster_id(self):
        """Gets the cluster_id of this ResourceHistoryOverview.  # noqa: E501


        :return: The cluster_id of this ResourceHistoryOverview.  # noqa: E501
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this ResourceHistoryOverview.


        :param cluster_id: The cluster_id of this ResourceHistoryOverview.  # noqa: E501
        :type: str
        """

        self._cluster_id = cluster_id

    @property
    def cluster_name(self):
        """Gets the cluster_name of this ResourceHistoryOverview.  # noqa: E501


        :return: The cluster_name of this ResourceHistoryOverview.  # noqa: E501
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this ResourceHistoryOverview.


        :param cluster_name: The cluster_name of this ResourceHistoryOverview.  # noqa: E501
        :type: str
        """

        self._cluster_name = cluster_name

    @property
    def blueprint_version(self):
        """Gets the blueprint_version of this ResourceHistoryOverview.  # noqa: E501


        :return: The blueprint_version of this ResourceHistoryOverview.  # noqa: E501
        :rtype: ResourceStatusMetadata
        """
        return self._blueprint_version

    @blueprint_version.setter
    def blueprint_version(self, blueprint_version):
        """Sets the blueprint_version of this ResourceHistoryOverview.


        :param blueprint_version: The blueprint_version of this ResourceHistoryOverview.  # noqa: E501
        :type: ResourceStatusMetadata
        """

        self._blueprint_version = blueprint_version

    @property
    def override_version(self):
        """Gets the override_version of this ResourceHistoryOverview.  # noqa: E501


        :return: The override_version of this ResourceHistoryOverview.  # noqa: E501
        :rtype: ResourceStatusMetadata
        """
        return self._override_version

    @override_version.setter
    def override_version(self, override_version):
        """Sets the override_version of this ResourceHistoryOverview.


        :param override_version: The override_version of this ResourceHistoryOverview.  # noqa: E501
        :type: ResourceStatusMetadata
        """

        self._override_version = override_version

    @property
    def artifact_version(self):
        """Gets the artifact_version of this ResourceHistoryOverview.  # noqa: E501


        :return: The artifact_version of this ResourceHistoryOverview.  # noqa: E501
        :rtype: ResourceStatusMetadata
        """
        return self._artifact_version

    @artifact_version.setter
    def artifact_version(self, artifact_version):
        """Sets the artifact_version of this ResourceHistoryOverview.


        :param artifact_version: The artifact_version of this ResourceHistoryOverview.  # noqa: E501
        :type: ResourceStatusMetadata
        """

        self._artifact_version = artifact_version

    @property
    def disabled(self):
        """Gets the disabled of this ResourceHistoryOverview.  # noqa: E501


        :return: The disabled of this ResourceHistoryOverview.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ResourceHistoryOverview.


        :param disabled: The disabled of this ResourceHistoryOverview.  # noqa: E501
        :type: bool
        """

        self._disabled = disabled

    @property
    def release_button_status(self):
        """Gets the release_button_status of this ResourceHistoryOverview.  # noqa: E501


        :return: The release_button_status of this ResourceHistoryOverview.  # noqa: E501
        :rtype: ReleaseButtonStatus
        """
        return self._release_button_status

    @release_button_status.setter
    def release_button_status(self, release_button_status):
        """Sets the release_button_status of this ResourceHistoryOverview.


        :param release_button_status: The release_button_status of this ResourceHistoryOverview.  # noqa: E501
        :type: ReleaseButtonStatus
        """

        self._release_button_status = release_button_status

    @property
    def overridden(self):
        """Gets the overridden of this ResourceHistoryOverview.  # noqa: E501


        :return: The overridden of this ResourceHistoryOverview.  # noqa: E501
        :rtype: bool
        """
        return self._overridden

    @overridden.setter
    def overridden(self, overridden):
        """Sets the overridden of this ResourceHistoryOverview.


        :param overridden: The overridden of this ResourceHistoryOverview.  # noqa: E501
        :type: bool
        """

        self._overridden = overridden

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResourceHistoryOverview, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResourceHistoryOverview):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

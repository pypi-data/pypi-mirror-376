# coding: utf-8

"""
    Control-plane

    API Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WorkflowRun(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'display_title': 'str',
        'html_url': 'str',
        'status': 'str',
        'conclusion': 'str',
        'workflow_id': 'int',
        'run_number': 'int',
        'actor': 'GithubUser',
        'triggering_actor': 'GithubUser',
        'head_commit': 'Commit',
        'head_branch': 'str',
        'run_started_at': 'datetime',
        'created_at': 'datetime',
        'updated_at': 'datetime'
    }

    attribute_map = {
        'name': 'name',
        'display_title': 'displayTitle',
        'html_url': 'htmlUrl',
        'status': 'status',
        'conclusion': 'conclusion',
        'workflow_id': 'workflowId',
        'run_number': 'runNumber',
        'actor': 'actor',
        'triggering_actor': 'triggeringActor',
        'head_commit': 'headCommit',
        'head_branch': 'headBranch',
        'run_started_at': 'runStartedAt',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }

    def __init__(self, name=None, display_title=None, html_url=None, status=None, conclusion=None, workflow_id=None, run_number=None, actor=None, triggering_actor=None, head_commit=None, head_branch=None, run_started_at=None, created_at=None, updated_at=None):  # noqa: E501
        """WorkflowRun - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._display_title = None
        self._html_url = None
        self._status = None
        self._conclusion = None
        self._workflow_id = None
        self._run_number = None
        self._actor = None
        self._triggering_actor = None
        self._head_commit = None
        self._head_branch = None
        self._run_started_at = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if display_title is not None:
            self.display_title = display_title
        if html_url is not None:
            self.html_url = html_url
        if status is not None:
            self.status = status
        if conclusion is not None:
            self.conclusion = conclusion
        if workflow_id is not None:
            self.workflow_id = workflow_id
        if run_number is not None:
            self.run_number = run_number
        if actor is not None:
            self.actor = actor
        if triggering_actor is not None:
            self.triggering_actor = triggering_actor
        if head_commit is not None:
            self.head_commit = head_commit
        if head_branch is not None:
            self.head_branch = head_branch
        if run_started_at is not None:
            self.run_started_at = run_started_at
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def name(self):
        """Gets the name of this WorkflowRun.  # noqa: E501


        :return: The name of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkflowRun.


        :param name: The name of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def display_title(self):
        """Gets the display_title of this WorkflowRun.  # noqa: E501


        :return: The display_title of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._display_title

    @display_title.setter
    def display_title(self, display_title):
        """Sets the display_title of this WorkflowRun.


        :param display_title: The display_title of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._display_title = display_title

    @property
    def html_url(self):
        """Gets the html_url of this WorkflowRun.  # noqa: E501


        :return: The html_url of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this WorkflowRun.


        :param html_url: The html_url of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._html_url = html_url

    @property
    def status(self):
        """Gets the status of this WorkflowRun.  # noqa: E501


        :return: The status of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkflowRun.


        :param status: The status of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def conclusion(self):
        """Gets the conclusion of this WorkflowRun.  # noqa: E501


        :return: The conclusion of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._conclusion

    @conclusion.setter
    def conclusion(self, conclusion):
        """Sets the conclusion of this WorkflowRun.


        :param conclusion: The conclusion of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._conclusion = conclusion

    @property
    def workflow_id(self):
        """Gets the workflow_id of this WorkflowRun.  # noqa: E501


        :return: The workflow_id of this WorkflowRun.  # noqa: E501
        :rtype: int
        """
        return self._workflow_id

    @workflow_id.setter
    def workflow_id(self, workflow_id):
        """Sets the workflow_id of this WorkflowRun.


        :param workflow_id: The workflow_id of this WorkflowRun.  # noqa: E501
        :type: int
        """

        self._workflow_id = workflow_id

    @property
    def run_number(self):
        """Gets the run_number of this WorkflowRun.  # noqa: E501


        :return: The run_number of this WorkflowRun.  # noqa: E501
        :rtype: int
        """
        return self._run_number

    @run_number.setter
    def run_number(self, run_number):
        """Sets the run_number of this WorkflowRun.


        :param run_number: The run_number of this WorkflowRun.  # noqa: E501
        :type: int
        """

        self._run_number = run_number

    @property
    def actor(self):
        """Gets the actor of this WorkflowRun.  # noqa: E501


        :return: The actor of this WorkflowRun.  # noqa: E501
        :rtype: GithubUser
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this WorkflowRun.


        :param actor: The actor of this WorkflowRun.  # noqa: E501
        :type: GithubUser
        """

        self._actor = actor

    @property
    def triggering_actor(self):
        """Gets the triggering_actor of this WorkflowRun.  # noqa: E501


        :return: The triggering_actor of this WorkflowRun.  # noqa: E501
        :rtype: GithubUser
        """
        return self._triggering_actor

    @triggering_actor.setter
    def triggering_actor(self, triggering_actor):
        """Sets the triggering_actor of this WorkflowRun.


        :param triggering_actor: The triggering_actor of this WorkflowRun.  # noqa: E501
        :type: GithubUser
        """

        self._triggering_actor = triggering_actor

    @property
    def head_commit(self):
        """Gets the head_commit of this WorkflowRun.  # noqa: E501


        :return: The head_commit of this WorkflowRun.  # noqa: E501
        :rtype: Commit
        """
        return self._head_commit

    @head_commit.setter
    def head_commit(self, head_commit):
        """Sets the head_commit of this WorkflowRun.


        :param head_commit: The head_commit of this WorkflowRun.  # noqa: E501
        :type: Commit
        """

        self._head_commit = head_commit

    @property
    def head_branch(self):
        """Gets the head_branch of this WorkflowRun.  # noqa: E501


        :return: The head_branch of this WorkflowRun.  # noqa: E501
        :rtype: str
        """
        return self._head_branch

    @head_branch.setter
    def head_branch(self, head_branch):
        """Sets the head_branch of this WorkflowRun.


        :param head_branch: The head_branch of this WorkflowRun.  # noqa: E501
        :type: str
        """

        self._head_branch = head_branch

    @property
    def run_started_at(self):
        """Gets the run_started_at of this WorkflowRun.  # noqa: E501


        :return: The run_started_at of this WorkflowRun.  # noqa: E501
        :rtype: datetime
        """
        return self._run_started_at

    @run_started_at.setter
    def run_started_at(self, run_started_at):
        """Sets the run_started_at of this WorkflowRun.


        :param run_started_at: The run_started_at of this WorkflowRun.  # noqa: E501
        :type: datetime
        """

        self._run_started_at = run_started_at

    @property
    def created_at(self):
        """Gets the created_at of this WorkflowRun.  # noqa: E501


        :return: The created_at of this WorkflowRun.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WorkflowRun.


        :param created_at: The created_at of this WorkflowRun.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this WorkflowRun.  # noqa: E501


        :return: The updated_at of this WorkflowRun.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this WorkflowRun.


        :param updated_at: The updated_at of this WorkflowRun.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WorkflowRun, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WorkflowRun):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

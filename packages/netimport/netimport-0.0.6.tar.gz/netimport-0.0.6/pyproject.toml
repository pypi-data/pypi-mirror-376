[project]
name = "netimport"
version = "0.0.6"
description = "NetImport: Python Project Architecture Analyzer via Import Graphs"
authors = [
    {name = "Beilak Aliev", email="beilak.aliev@gmail.com"}
]
license = "MIT"
readme = "README.md"
keywords = ["python", "architecture", "linter", "static analysis", "import graph", "dependencies", "visualization", "coupling", "cohesion"]
requires-python = ">=3.10"
dependencies = [
    "toml (>=0.10.2,<0.11.0)",
    "networkx (>=3.4.2,<4.0.0)",
    "matplotlib (>=3.10.3,<4.0.0)",
    "click (>=8.2.1,<9.0.0)",
    "plotly (>=6.1.2,<7.0.0)",
    "bokeh (>=3.7.3,<4.0.0)",
]
dynamic = [ "classifiers" ]


[project.scripts]
netimport = "netimport_lib.cli:main"


[project.urls]
Homepage = "https://github.com/beilak/netimport"
Repository = "https://github.com/beilak/netimport"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]

classifiers = [
    "Development Status :: 3 - Alpha", # "4 - Beta", "5 - Production/Stable"
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Utilities",
    "Environment :: Console",
    "Typing :: Typed",
]

packages = [{include = "netimport_lib"}]




[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
ruff = "^0.11.11"
pytest = "^8.4.1"


[tool.netimport]
ignored_dirs = ["venv", ".venv", "tests", "docs", "__pycache__", "node_modules", "migrations", ".git", ".hg"]
ignored_files = ["setup.py", "manage.py"]
ignore_stdlib = true
ignore_external_lib = true
ignored_nodes = []
# default_layout_algorithm = "spring"
# exclude_std_lib_from_graph = false
# exclude_external_libs_from_graph = false



[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
allow_redefinition = true
disallow_incomplete_defs = true
plugins = []

[mypy-alembic.versions]
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-x"


[tool.ruff]
exclude = [
    ".git",
    ".mypy_cache",
    ".venv",
    ".env",
    ".pytest_cache",
]
fix = true
unsafe-fixes = true
show-fixes = true
target-version = "py312"
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
ignore = ["EM", "FBT", "PLR", "TRY003", "D1", "D203", "D213", "FA", "S311", "INP001", "RET501", "TC001", "TC002","TC003", "UP040", "ANN401", "ISC001", "COM812", "RUF001"]
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*.py" = [
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN401",
    "S101",
    "PLR2004",
    "S311",
]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = []
lines-after-imports = 2
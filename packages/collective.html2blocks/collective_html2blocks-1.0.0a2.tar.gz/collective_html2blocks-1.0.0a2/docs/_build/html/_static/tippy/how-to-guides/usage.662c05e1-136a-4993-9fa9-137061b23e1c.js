selector_to_html = {"a[href=\"#dependency-to-your-code\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Dependency to your code<a class=\"headerlink\" href=\"#dependency-to-your-code\" title=\"Link to this heading\">#</a></h2><p>After installing <code class=\"docutils literal notranslate\"><span class=\"pre\">collective.html2blocks</span></code> as a dependency (add it to your <code class=\"file docutils literal notranslate\"><span class=\"pre\">pyproject.toml</span></code>, <code class=\"file docutils literal notranslate\"><span class=\"pre\">setup.py</span></code>, <code class=\"file docutils literal notranslate\"><span class=\"pre\">setup.cfg</span></code>, or <code class=\"file docutils literal notranslate\"><span class=\"pre\">requirements.txt</span></code>), you can use its conversion features directly in your Python code. This is the recommended approach for programmatic HTML-to-blocks conversion and integration with other Python projects.</p><p>First, import the <code class=\"docutils literal notranslate\"><span class=\"pre\">converter</span></code> module in your Python code or interpreter:</p>", "a[href=\"#http-server\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">HTTP server<a class=\"headerlink\" href=\"#http-server\" title=\"Link to this heading\">#</a></h2><p><code class=\"docutils literal notranslate\"><span class=\"pre\">collective.html2blocks</span></code> provides a simple HTTP server that can be used to convert HTML to Volto blocks.</p>", "a[href=\"cli.html#server\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">server</span></code><a class=\"headerlink\" href=\"#server\" title=\"Link to this heading\">#</a></h2><p>This command starts a <a class=\"reference internal\" href=\"../glossary.html#term-Uvicorn\"><span class=\"xref std std-term\">Uvicorn</span></a> server hosting the FastAPI app for converting HTML to Volto blocks. You can customize the host, port, and enable reload for development.</p>", "a[href=\"#converter-html-to-blocks\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">converter.html_to_blocks</span></code><a class=\"headerlink\" href=\"#converter-html-to-blocks\" title=\"Link to this heading\">#</a></h3><p>Converts HTML to a list of Volto blocks, which you can further process or manipulate.</p>", "a[href=\"#converter-volto-blocks\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">converter.volto_blocks</span></code><a class=\"headerlink\" href=\"#converter-volto-blocks\" title=\"Link to this heading\">#</a></h3><p>Converts HTML to a dictionary containing both <code class=\"docutils literal notranslate\"><span class=\"pre\">blocks</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">blocks_layout</span></code> keys, suitable for direct use in Volto.\nThis function also supports prepending or appending blocks to the result for advanced layout control.</p>", "a[href=\"#container-image\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Container image<a class=\"headerlink\" href=\"#container-image\" title=\"Link to this heading\">#</a></h3><p>You can quickly deploy the HTML to Volto blocks service using our official container image, <code class=\"docutils literal notranslate\"><span class=\"pre\">ghcr.io/collective/html2blocks</span></code>. This method is ideal for testing, development, or integrating the service into containerized environments. To run the latest version and expose the service on port <code class=\"docutils literal notranslate\"><span class=\"pre\">8090</span></code> of your machine, use:</p>", "a[href=\"#usage\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Usage<a class=\"headerlink\" href=\"#usage\" title=\"Link to this heading\">#</a></h1><p>This guide provides step-by-step instructions for running the HTML to Volto blocks service, using the CLI, Docker, and Python integration.</p>", "a[href=\"#html2blocks-command-line\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">html2blocks</span></code> command line<a class=\"headerlink\" href=\"#html2blocks-command-line\" title=\"Link to this heading\">#</a></h3><p>If you have installed <code class=\"docutils literal notranslate\"><span class=\"pre\">collective.html2blocks</span></code> in your project or local Python virtual environment, you can start the HTTP server directly. This is useful for local development, integration, or running the service as part of a larger application. Run:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-end', maxWidth: 500, interactive: true,

            });
        };
    };
    console.log("tippy tips loaded!");
};

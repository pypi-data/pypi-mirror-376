import argparse as ap
import pathlib
from .cfg import FileConfig as FileConfig
from .domain import AstUnionNode as AstUnionNode, Config as Config, Emitter as Emitter
from _typeshed import Incomplete as Incomplete
from typing import IO

AstNodeModel: Incomplete
AstUnionNodeModel: Incomplete

def make_parser() -> ap.ArgumentParser: ...
def prop(input: str) -> tuple[str, str]: ...
def config_from_args(args: ap.Namespace) -> Config: ...
def read_config(filename: pathlib.Path) -> Config: ...
def read_config_file(filename: pathlib.Path) -> FileConfig: ...
def load_input(stream: IO) -> tuple[Config | None, AstUnionNode]: ...
def parse_args() -> tuple[Config, AstUnionNode, Emitter]: ...

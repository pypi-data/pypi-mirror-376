#data from: https://github.com/cp2k/cp2k/blob/master/data/POTENTIAL && https://github.com/cp2k/cp2k/blob/master/data/BASIS_MOLOPT
# to do: add more functionals and atom types
def available_functionals():
    return ["PBE", "PBE_SR", "BLYP", "BLYP_SR"]

def kind_data_functionals(functional):
    if functional == 'PBE':
        return"""
#KIND DATA from kind_data.py (PBE Functional)

&KIND H
    BASIS_SET DZVP-MOLOPT-GTH-q1
    POTENTIAL GTH-PBE-q1
&END KIND

&KIND He
    BASIS_SET DZVP-MOLOPT-SR-GTH-q2
    POTENTIAL GTH-PBE-q2
&END KIND

&KIND Li
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND Be
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND B
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND C
    BASIS_SET DZVP-MOLOPT-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND N
    BASIS_SET DZVP-MOLOPT-GTH-q5
    POTENTIAL GTH-PBE-q5
&END KIND

&KIND O
    BASIS_SET DZVP-MOLOPT-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND F
    BASIS_SET DZVP-MOLOPT-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Ne
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-PBE-q8
&END KIND

&KIND Na
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND Mg
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-PBE-q10
&END KIND

&KIND Al
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND Si
    BASIS_SET DZVP-MOLOPT-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND P
    BASIS_SET DZVP-MOLOPT-GTH-q5
    POTENTIAL GTH-PBE-q5
&END KIND

&KIND S
    BASIS_SET DZVP-MOLOPT-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND Cl
    BASIS_SET DZVP-MOLOPT-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Ar
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-PBE-q8
&END KIND

&KIND K
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND Ca
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-PBE-q10
&END KIND

&KIND Sc
    BASIS_SET DZVP-MOLOPT-SR-GTH-q11
    POTENTIAL GTH-PBE-q11
&END KIND

&KIND Ti
    BASIS_SET DZVP-MOLOPT-SR-GTH-q12
    POTENTIAL GTH-PBE-q12
&END KIND

&KIND V
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-PBE-q13
&END KIND

&KIND Se
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND Br 
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Mo
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-PBE-q14
&END KIND

&KIND Cs
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND W
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-PBE-q14
&END KIND

&KIND Ga
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-PBE-q13
&END KIND

#KIND DATA from kind_data.py (PBE Functional)
        """

    elif functional == 'PBE_SR':
        return"""
#KIND DATA from kind_data.py (PBE Functional)

&KIND H
    BASIS_SET DZVP-MOLOPT-SR-GTH-q1
    POTENTIAL GTH-PBE-q1
&END KIND

&KIND He
    BASIS_SET DZVP-MOLOPT-SR-GTH-q2
    POTENTIAL GTH-PBE-q2
&END KIND

&KIND Li
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND Be
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND B
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND C
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND N
    BASIS_SET DZVP-MOLOPT-SR-GTH-q5
    POTENTIAL GTH-PBE-q5
&END KIND

&KIND O
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND F
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Ne
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-PBE-q8
&END KIND

&KIND Na
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND Mg
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-PBE-q10
&END KIND

&KIND Al
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-PBE-q3
&END KIND

&KIND Si
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-PBE-q4
&END KIND

&KIND P
    BASIS_SET DZVP-MOLOPT-SR-GTH-q5
    POTENTIAL GTH-PBE-q5
&END KIND

&KIND S
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND Cl
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Ar
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-PBE-q8
&END KIND

&KIND K
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND Ca
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-PBE-q10
&END KIND

&KIND Sc
    BASIS_SET DZVP-MOLOPT-SR-GTH-q11
    POTENTIAL GTH-PBE-q11
&END KIND

&KIND Ti
    BASIS_SET DZVP-MOLOPT-SR-GTH-q12
    POTENTIAL GTH-PBE-q12
&END KIND

&KIND V
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-PBE-q13
&END KIND

&KIND Se
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-PBE-q6
&END KIND

&KIND Br 
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-PBE-q7
&END KIND

&KIND Mo
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-PBE-q14
&END KIND

&KIND Cs
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-PBE-q9
&END KIND

&KIND W
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-PBE-q14
&END KIND

&KIND Ga
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-PBE-q13
&END KIND

#KIND DATA from kind_data.py (PBE Functional)
        """


    elif functional == 'BLYP':
        return """
#KIND DATA from kind_data.py (BLYP Functional)

&KIND H
    BASIS_SET DZVP-MOLOPT-GTH-q1
    POTENTIAL GTH-BLYP-q1
&END KIND

&KIND He
    BASIS_SET  DZVP-MOLOPT-SR-GTH-q2
    POTENTIAL GTH-BLYP-q2
&END KIND

&KIND Li
    BASIS_SET  DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND Be
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND B
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND C
    BASIS_SET DZVP-MOLOPT-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND N
    BASIS_SET DZVP-MOLOPT-GTH-q5
    POTENTIAL GTH-BLYP-q5
&END KIND

&KIND O
    BASIS_SET DZVP-MOLOPT-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND F
    BASIS_SET DZVP-MOLOPT-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Ne
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-BLYP-q8
&END KIND

&KIND Na
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND Mg
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-BLYP-q10
&END KIND

&KIND Al
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND Si
    BASIS_SET DZVP-MOLOPT-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND P
    BASIS_SET DZVP-MOLOPT-GTH-q5
    POTENTIAL GTH-BLYP-q5
&END KIND

&KIND S
    BASIS_SET DZVP-MOLOPT-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND Cl
    BASIS_SET DZVP-MOLOPT-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Ar
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-BLYP-q8
&END KIND

&KIND K
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND Ca
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-BLYP-q10
&END KIND

&KIND Sc
    BASIS_SET DZVP-MOLOPT-SR-GTH-q11
    POTENTIAL GTH-BLYP-q11
&END KIND

&KIND Ti
    BASIS_SET DZVP-MOLOPT-SR-GTH-q12
    POTENTIAL GTH-BLYP-q12
&END KIND

&KIND V
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-BLYP-q13
&END KIND

&KIND Se
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND Br 
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Mo
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-BLYP-q14
&END KIND

&KIND Cs
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND W
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-BLPY-q14
&END KIND
#KIND DATA from kind_data.py (BLYP Functional)
        """
    elif functional == 'BLYP_SR':
        return """
#KIND DATA from kind_data.py (BLYP Functional)

&KIND H
    BASIS_SET DZVP-MOLOPT-SR-GTH-q1
    POTENTIAL GTH-BLYP-q1
&END KIND

&KIND He
    BASIS_SET  DZVP-MOLOPT-SR-GTH-q2
    POTENTIAL GTH-BLYP-q2
&END KIND

&KIND Li
    BASIS_SET  DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND Be
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND B
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND C
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND N
    BASIS_SET DZVP-MOLOPT-SR-GTH-q5
    POTENTIAL GTH-BLYP-q5
&END KIND

&KIND O
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND F
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Ne
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-BLYP-q8
&END KIND

&KIND Na
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND Mg
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-BLYP-q10
&END KIND

&KIND Al
    BASIS_SET DZVP-MOLOPT-SR-GTH-q3
    POTENTIAL GTH-BLYP-q3
&END KIND

&KIND Si
    BASIS_SET DZVP-MOLOPT-SR-GTH-q4
    POTENTIAL GTH-BLYP-q4
&END KIND

&KIND P
    BASIS_SET DZVP-MOLOPT-SR-GTH-q5
    POTENTIAL GTH-BLYP-q5
&END KIND

&KIND S
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND Cl
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Ar
    BASIS_SET DZVP-MOLOPT-SR-GTH-q8
    POTENTIAL GTH-BLYP-q8
&END KIND

&KIND K
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND Ca
    BASIS_SET DZVP-MOLOPT-SR-GTH-q10
    POTENTIAL GTH-BLYP-q10
&END KIND

&KIND Sc
    BASIS_SET DZVP-MOLOPT-SR-GTH-q11
    POTENTIAL GTH-BLYP-q11
&END KIND

&KIND Ti
    BASIS_SET DZVP-MOLOPT-SR-GTH-q12
    POTENTIAL GTH-BLYP-q12
&END KIND

&KIND V
    BASIS_SET DZVP-MOLOPT-SR-GTH-q13
    POTENTIAL GTH-BLYP-q13
&END KIND

&KIND Se
    BASIS_SET DZVP-MOLOPT-SR-GTH-q6
    POTENTIAL GTH-BLYP-q6
&END KIND

&KIND Br 
    BASIS_SET DZVP-MOLOPT-SR-GTH-q7
    POTENTIAL GTH-BLYP-q7
&END KIND

&KIND Mo
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-BLYP-q14
&END KIND

&KIND Cs
    BASIS_SET DZVP-MOLOPT-SR-GTH-q9
    POTENTIAL GTH-BLYP-q9
&END KIND

&KIND W
    BASIS_SET DZVP-MOLOPT-SR-GTH-q14
    POTENTIAL GTH-BLPY-q14
&END KIND
#KIND DATA from kind_data.py (BLYP Functional)
        """

    elif functional == 'XXX':
        return """ 
#KIND DATA from kind_data.py (XXX Functional)
        """
    else:
        return """
#KIND DATA not found. Please add the functional data you want to use!
        """
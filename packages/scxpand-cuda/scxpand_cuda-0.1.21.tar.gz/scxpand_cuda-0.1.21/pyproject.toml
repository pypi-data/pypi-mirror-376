[project]
name = "scxpand-cuda"
version = "0.1.21"
requires-python = ">=3.11,<3.14"
description = "Pan-cancer detection of T-cell clonal expansion from single-cell RNA sequencing (CUDA-enabled)"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Ron Amit", email = "ron2amit@gmail.com"},
    {name = "Ofir Shorer", email = "ofirshorer@campus.technion.ac.il"}
]
keywords = ["single-cell", "RNA-seq", "T-cell", "clonal-expansion", "machine-learning", "bioinformatics", "cuda", "gpu"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "scanpy>=1.11.1",
    "plotly>=6.0.1",
    "matplotlib>=3.10.0",
    "scikit-learn>=1.5.2",
    "lightgbm>=4.6.0",
    "tensorboard>=2.19.0",
    "fire>=0.7.0",
    "optuna>=4.3.0",
    "seaborn>=0.13.2",
    "pydantic>=2.10.6",
    "anndata>=0.11.4",
    "structlog>=24.0.0",
    "igraph>=0.11.4",
    "shap>=0.48.0",
    "bbknn>=1.6.0",
    "scrublet>=0.2.3",
    "scirpy>=0.9.3",
    "tabulate>=0.9.0",
    "requests>=2.31.0",
    "tqdm>=4.66.0",
    "pooch>=1.8.0",
    # PyTorch - will use CPU/MPS on macOS/Windows, CUDA on Linux by default
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]

[project.urls]
Homepage = "https://github.com/yizhak-lab-ccg/scXpand"
Documentation = "https://scxpand.readthedocs.io"
Repository = "https://github.com/yizhak-lab-ccg/scXpand"
Issues = "https://github.com/yizhak-lab-ccg/scXpand/issues"
Logo = "https://raw.githubusercontent.com/yizhak-lab-ccg/scXpand/main/docs/images/scXpand_logo_gray.png"

[project.scripts]
scxpand = "scxpand.main:main"

[project.optional-dependencies]
# PyTorch CPU-only variant (forces CPU even on Linux)
cpu = [
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]
# PyTorch CUDA variant (for NVIDIA GPU acceleration)
cuda = [
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]
dev = [
    "vulture>=2.14",
    "pytest>=8.3.4",
    "pytest-xdist>=3.6.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.12.7",
    "pre-commit>=4.2.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "jupyter>=1.1.1",
    "jupyter-client>=8.6.3",
    "jupyter-core>=5.7.2",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-book-theme>=1.1.4",
    "myst-nb>=1.3.0",
    "sphinx-copybutton>=0.5.2",
    "myst-parser>=4.0.1",
    "docutils>=0.21.2",
    "sphinxcontrib-bibtex>=2.6.5",
    "sphinx-autodoc-typehints>=3.0.1",
    "ipython>=9.5.0",
    "sphinxext-opengraph>=0.13.0",
    "sphinx-autobuild>=2025.8.25",
    "watchdog>=6.0.0",
    "colorama>=0.4.6",
]

[build-system]
requires = ["setuptools>=77.0.3", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["scxpand*"]
exclude = ["tests*", "docs*", "notebooks*", "temp*", "data*", "results*", "_notebooks*", "examples*", "scripts*"]

[tool.uv]
preview = true

# Prevent conflicting PyTorch extras from being installed together
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cuda" },
    ],
]

# PyTorch index configuration for different backends
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

# Configure PyTorch sources for different extras
[tool.uv.sources]
torch = [
    { index = "pytorch-cu124" },
]
torchvision = [
    { index = "pytorch-cu124" },
]
torchaudio = [
    { index = "pytorch-cu124" },
]

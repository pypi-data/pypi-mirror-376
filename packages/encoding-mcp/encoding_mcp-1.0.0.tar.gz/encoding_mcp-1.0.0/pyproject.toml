[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "encoding-mcp"
dynamic = ["version"]
description = "Windows 빌드 환경에서 필요한 UTF-8 with BOM 인코딩 파일을 생성하고 관리하는 MCP 서버"
authors = [
    {name = "Encoding MCP Team", email = "whyj.park@gmail.com"}
]
maintainers = [
    {name = "Encoding MCP Team", email = "whyj.park@gmail.com"}
]
readme = "README.md"
license = "MIT"
keywords = ["mcp", "encoding", "utf8", "bom", "windows", "build", "cpp", "powershell"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Text Processing :: Markup",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "charset-normalizer>=3.0.0",
    "chardet>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/whyjp/encoding_mcp"
Documentation = "https://github.com/whyjp/encoding_mcp#readme"
Repository = "https://github.com/whyjp/encoding_mcp.git"
"Bug Tracker" = "https://github.com/whyjp/encoding_mcp/issues"
Changelog = "https://github.com/whyjp/encoding_mcp/releases"

[project.scripts]
encoding-mcp = "encoding_mcp.server:cli_main"

[tool.setuptools]
packages = ["encoding_mcp"]
include-package-data = true

[tool.setuptools.package-data]
encoding_mcp = ["*.md", "*.txt"]

[tool.setuptools_scm]
write_to = "encoding_mcp/_version.py"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
# 개발 단계에서는 매우 관대하게 설정
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
# 모든 오류 무시
ignore_missing_imports = true
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
]

[tool.coverage.run]
source = ["encoding_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

{
  "instructions": [
    {
      "id": "autonomous_decision_making",
      "version": "1.0.0",
      "tags": ["development-workflow", "autonomy", "decision-making", "reasoning", "process"],
      "content": "Make informed decisions based on available context and best practices. Document reasoning for significant decisions. When uncertain, prefer safer, more conservative approaches and seek clarification when needed.",
      "metadata": {
        "category": "development-workflow",
        "priority": 9,
        "author": "AgentSpec",
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z"
      }
    },
    {
      "id": "incremental_development",
      "version": "1.0.0",
      "tags": ["development-workflow", "development", "incremental", "validation", "process"],
      "content": "Implement features incrementally with frequent validation. Make small, focused changes that can be easily reviewed and rolled back. Validate each step before proceeding to the next.",
      "metadata": {
        "category": "development-workflow",
        "priority": 10,
        "author": "AgentSpec",
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z"
      }
    },
    {
      "id": "error_recovery",
      "version": "1.0.0",
      "tags": ["development-workflow", "error-handling", "recovery", "resilience", "process"],
      "content": "When errors occur, analyze the root cause, implement proper fixes, and add safeguards to prevent recurrence. Document error patterns and solutions for future reference.",
      "metadata": {
        "category": "development-workflow",
        "priority": 8,
        "author": "AgentSpec",
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z"
      }
    },
    {
      "id": "learning_adaptation",
      "version": "1.0.0",
      "tags": ["development-workflow", "learning", "adaptation", "improvement", "process"],
      "content": "Learn from project patterns, user feedback, and encountered issues. Adapt approaches based on project-specific requirements and constraints. Continuously improve development practices.",
      "metadata": {
        "category": "development-workflow",
        "priority": 6,
        "author": "AgentSpec",
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z"
      }
    },
    {
      "id": "incremental_complexity",
      "version": "1.0.0",
      "tags": ["development-workflow", "decomposition", "complexity", "maintainability", "process"],
      "content": "Break complex tasks into smaller, isolated chunks. Build functionality incrementally, validating each part before proceeding. Avoid overly complex prompts that lead to confused or buggy output. If AI struggles with a prompt, stop and reframe into simpler, more focused requests.",
      "metadata": {
        "category": "development-workflow",
        "priority": 8,
        "author": "Research Integration",
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z"
      }
    }
  ]
}
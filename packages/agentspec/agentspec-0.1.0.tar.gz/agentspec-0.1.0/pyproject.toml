[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentspec"
version = "0.1.0"
description = "Specification-driven development toolkit with smart context detection"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Keyur Golani", email = "keyur@keyurgolani.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Documentation",
]
keywords = ["specification", "development", "automation", "templates", "cli"]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=6.0",
    "jsonschema>=4.0.0",
    "click>=8.0.0",
    "rich>=12.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "build>=0.8.0",
    "twine>=4.0.0",
    "isort>=5.10.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "pytest-timeout>=2.1.0",
]

[project.urls]
Homepage = "https://github.com/keyurgolani/AgentSpec"
Documentation = "https://github.com/keyurgolani/AgentSpec#readme"
Repository = "https://github.com/keyurgolani/AgentSpec.git"
"Bug Tracker" = "https://github.com/keyurgolani/AgentSpec/issues"

[project.scripts]
agentspec = "agentspec.cli.main:main"

[tool.setuptools.packages.find]
include = ["agentspec*"]

[tool.setuptools.package-data]
agentspec = [
    "data/instructions/*.json",
    "data/templates/*.json", 
    "data/schemas/*.json",
    "config/*.yaml",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = "\\.pyi?$"
extend-exclude = """
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
"""

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=agentspec --cov-report=term-missing --cov-report=html:htmlcov --cov-report=xml:coverage.xml --cov-fail-under=85"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "network: Tests that require network access"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
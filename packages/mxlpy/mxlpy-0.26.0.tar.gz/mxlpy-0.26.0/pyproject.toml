[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{ name = "Marvin van Aalst", email = "marvin.vanaalst@gmail.com" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Operating System :: OS Independent",
]
description = "A package to build metabolic models"
keywords = ["modelling", "ode", "metabolic"]
license = "MIT"
requires-python = ">=3.12"
maintainers = [
  { name = "Marvin van Aalst", email = "marvin.vanaalst@gmail.com" },
]
name = "mxlpy"
readme = "README.md"
version = "0.26.0"
dependencies = [
  "diffrax>=0.7.0",
  "dill>=0.3.9",
  "latexify-py>=0.4.4",
  "lazy-import>=0.2.2",
  "matplotlib>=3.9.2",
  "mike>=2.1.3",
  "more-itertools>=10.5.0",
  "numpy>=2.1.2",
  "pandas>=2.2.3",
  "parameteriser>=0.1.0",
  "pebble>=5.0.7",
  "pysbml>=0.3.0",
  "python-libsbml>=5.20.4",
  "salib>=1.5.1",
  "scipy>=1.14.1",
  "seaborn>=0.13.2",
  "symbtools>=0.4.0",
  "sympy>=1.13.1",
  "tabulate>=0.9.0",
  "toml>=0.10.2",
  "tqdm>=4.66.6",
  "typing-extensions>=4.12.2",
  "wadler-lindig>=0.1.7",
]
[project.optional-dependencies]
torch = [
  "torch>=2.5.1",
]
tensorflow = [
  "tensorflow>=2.19.0",
]
keras = [
  "keras>=3.9.2",
]
equinox = [
  "equinox>=0.13",
  "optax>=0.2.5",
]

[dependency-groups]
dev = [
  "toml-sort>=0.23.1",
  "ruff>=0.12.9",
  "coverage>=7.6.4",
  "jupyter>=1.1.1",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "requests>=2.32.3",
  "mkdocs>=1.6.1",
  "mkdocs-jupyter>=0.25.1",
  "mkdocs-material>=9.5.42",
  "pre-commit>=4.0.1",
  "pyright>=1.1.403",
  "ssort>=0.13.0",
  "line-profiler>=5.0.0",
]

[tool.bandit]
skips = ["B101", "B301", "B403", "B404", "B603", "B607"]


[tool.hatchling]
from = "src"
include = ["mxlpy", "example_models"]

[tool.hatchling.extras]
examples = ["example_models"]


[tool.pyright]
pythonVersion = "3.12"
reportMissingModuleSource = "none"
include = [
  "docs",
  'publication-figures',
  "src",
  "tests",
]
exclude = [
  "**/__pycache__",
  "tmp",
  "tests/sbml/assets",
]
strict = []
deprecateTypingAliases = true

[tool.ruff]
indent-width = 4
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
  "ANN401",  # any
  "C901",    # too complex
  "COM812",  # missing trailing comma  # "D", # all of documentation
  "D105",    # magic methods
  "D203",    # blank line before docstring
  "D213",    # multi-line summary first line
  "D401",    # first line should be in imperative mood
  "E501",    # line-too-long
  "ERA001",  # commented-out code
  "FIX001",  # line contains FIXME
  "ISC001",  # single line implicit string concat
  "N806",    # non-lowercase variable
  "PGH003",  # specific rule type ignore
  "S110",    # try-except-pass
  "S301",    # pickle usage
  "TD001",   # invalid todo tag
  "TD002",   # missing todo author
  "TD003",   # missing todo link
  "TD004",   # missing todo version
  "TD005",   # missing todo date
  "TRY003",  # raise vanilla args
  "PLR0912", # too many branches
  "PLR0911", # too many statements
  "PLR0913", # max num of arguments
  "PLR0915", # too many lines
  "PD010",   # pivot table
  "PT011",   # pytest.raises is too broad
  "RUF022",  # unsorted all
  "TC006",   # cast("type")
]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
  "T201", # print statements
  "D",    # all of documentation
]
"tests/*" = [
  "S101",    # assert
  "D",       # all of documentation
  "PLR2004", # magic comparisons
  "SLF",
  "PD901",   # "df" name
]
"tmp/*" = [
  "I001", # unsorted imports
  "S101", # assert
  "D",    # all of documentation
  "N",    # all of naming
]

[tool.tomlsort]
spaces_before_inline_comment = 2
spaces_indent_inline_array = 2
trailing_comma_inline_array = true

[tool.uv]
package = true

[tool.uv.sources]
mxlpy = { workspace = true }

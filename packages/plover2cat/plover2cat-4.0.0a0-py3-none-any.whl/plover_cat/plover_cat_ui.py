# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'plover_cat.ui'
##
## Created by: Qt User Interface Compiler version 6.9.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QAbstractSpinBox, QApplication, QButtonGroup,
    QCheckBox, QComboBox, QDateTimeEdit, QDockWidget,
    QDoubleSpinBox, QFontComboBox, QFormLayout, QGroupBox,
    QHBoxLayout, QHeaderView, QLabel, QLayout,
    QLineEdit, QListView, QListWidget, QListWidgetItem,
    QMainWindow, QMenu, QMenuBar, QPlainTextEdit,
    QPushButton, QRadioButton, QScrollArea, QSizePolicy,
    QSlider, QSpacerItem, QSpinBox, QStatusBar,
    QTabWidget, QTableWidget, QTableWidgetItem, QTimeEdit,
    QToolBar, QUndoView, QVBoxLayout, QWidget)
from . import resources_rc

class Ui_PloverCAT(object):
    def setupUi(self, PloverCAT):
        if not PloverCAT.objectName():
            PloverCAT.setObjectName(u"PloverCAT")
        PloverCAT.resize(881, 705)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PloverCAT.sizePolicy().hasHeightForWidth())
        PloverCAT.setSizePolicy(sizePolicy)
        PloverCAT.setMinimumSize(QSize(32, 0))
        palette = QPalette()
        brush = QBrush(QColor(160, 160, 160, 255))
        brush.setStyle(Qt.BrushStyle.SolidPattern)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.AlternateBase, brush)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.AlternateBase, brush)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.AlternateBase, brush)
        PloverCAT.setPalette(palette)
        font = QFont()
        font.setPointSize(8)
        PloverCAT.setFont(font)
        PloverCAT.setDockNestingEnabled(True)
        self.actionOpen = QAction(PloverCAT)
        self.actionOpen.setObjectName(u"actionOpen")
        icon = QIcon()
        icon.addFile(u":/resources/folder-open-document-text.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOpen.setIcon(icon)
        self.actionSaveAs = QAction(PloverCAT)
        self.actionSaveAs.setObjectName(u"actionSaveAs")
        self.actionNew = QAction(PloverCAT)
        self.actionNew.setObjectName(u"actionNew")
        icon1 = QIcon()
        icon1.addFile(u":/resources/document.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNew.setIcon(icon1)
        self.actionSave = QAction(PloverCAT)
        self.actionSave.setObjectName(u"actionSave")
        icon2 = QIcon()
        icon2.addFile(u":/resources/disk-black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSave.setIcon(icon2)
        self.actionQuit = QAction(PloverCAT)
        self.actionQuit.setObjectName(u"actionQuit")
        self.actionClose = QAction(PloverCAT)
        self.actionClose.setObjectName(u"actionClose")
        self.actionAddCustomDict = QAction(PloverCAT)
        self.actionAddCustomDict.setObjectName(u"actionAddCustomDict")
        icon3 = QIcon()
        icon3.addFile(u":/resources/plus-button.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAddCustomDict.setIcon(icon3)
        self.actionPlainText = QAction(PloverCAT)
        self.actionPlainText.setObjectName(u"actionPlainText")
        self.actionASCII = QAction(PloverCAT)
        self.actionASCII.setObjectName(u"actionASCII")
        self.actionSubRip = QAction(PloverCAT)
        self.actionSubRip.setObjectName(u"actionSubRip")
        self.actionCut = QAction(PloverCAT)
        self.actionCut.setObjectName(u"actionCut")
        icon4 = QIcon()
        icon4.addFile(u":/resources/scissors-blue.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionCut.setIcon(icon4)
        self.actionCopy = QAction(PloverCAT)
        self.actionCopy.setObjectName(u"actionCopy")
        icon5 = QIcon()
        icon5.addFile(u":/resources/clipboard--plus.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionCopy.setIcon(icon5)
        self.actionPaste = QAction(PloverCAT)
        self.actionPaste.setObjectName(u"actionPaste")
        icon6 = QIcon()
        icon6.addFile(u":/resources/clipboard-paste-document-text.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPaste.setIcon(icon6)
        self.actionOpenAudio = QAction(PloverCAT)
        self.actionOpenAudio.setObjectName(u"actionOpenAudio")
        icon7 = QIcon()
        icon7.addFile(u":/resources/folder-open-document-music.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOpenAudio.setIcon(icon7)
        self.actionSkipBack = QAction(PloverCAT)
        self.actionSkipBack.setObjectName(u"actionSkipBack")
        self.actionSkipBack.setEnabled(False)
        icon8 = QIcon()
        icon8.addFile(u":/resources/control-skip-180.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSkipBack.setIcon(icon8)
        self.actionSkipForward = QAction(PloverCAT)
        self.actionSkipForward.setObjectName(u"actionSkipForward")
        self.actionSkipForward.setEnabled(False)
        icon9 = QIcon()
        icon9.addFile(u":/resources/control-skip.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSkipForward.setIcon(icon9)
        self.actionStopAudio = QAction(PloverCAT)
        self.actionStopAudio.setObjectName(u"actionStopAudio")
        self.actionStopAudio.setEnabled(False)
        icon10 = QIcon()
        icon10.addFile(u":/resources/control-stop-square.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionStopAudio.setIcon(icon10)
        self.actionSlowDown = QAction(PloverCAT)
        self.actionSlowDown.setObjectName(u"actionSlowDown")
        self.actionSlowDown.setEnabled(False)
        self.actionSpeedUp = QAction(PloverCAT)
        self.actionSpeedUp.setObjectName(u"actionSpeedUp")
        self.actionSpeedUp.setEnabled(False)
        self.actionPlayPause = QAction(PloverCAT)
        self.actionPlayPause.setObjectName(u"actionPlayPause")
        self.actionPlayPause.setEnabled(False)
        icon11 = QIcon()
        icon11.addFile(u":/resources/control-stop.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPlayPause.setIcon(icon11)
        self.actionMergeParagraphs = QAction(PloverCAT)
        self.actionMergeParagraphs.setObjectName(u"actionMergeParagraphs")
        icon12 = QIcon()
        icon12.addFile(u":/resources/arrow-join.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionMergeParagraphs.setIcon(icon12)
        self.actionSplitParagraph = QAction(PloverCAT)
        self.actionSplitParagraph.setObjectName(u"actionSplitParagraph")
        icon13 = QIcon()
        icon13.addFile(u":/resources/arrow-split.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSplitParagraph.setIcon(icon13)
        self.actionWindowFont = QAction(PloverCAT)
        self.actionWindowFont.setObjectName(u"actionWindowFont")
        icon14 = QIcon()
        icon14.addFile(u":/resources/edit.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionWindowFont.setIcon(icon14)
        self.actionODT = QAction(PloverCAT)
        self.actionODT.setObjectName(u"actionODT")
        self.actionNormalCopy = QAction(PloverCAT)
        self.actionNormalCopy.setObjectName(u"actionNormalCopy")
        icon15 = QIcon()
        icon15.addFile(u":/resources/clipboard.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNormalCopy.setIcon(icon15)
        self.actionFindReplacePane = QAction(PloverCAT)
        self.actionFindReplacePane.setObjectName(u"actionFindReplacePane")
        icon16 = QIcon()
        icon16.addFile(u":/resources/magnifier.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionFindReplacePane.setIcon(icon16)
        self.actionOpenTranscriptFolder = QAction(PloverCAT)
        self.actionOpenTranscriptFolder.setObjectName(u"actionOpenTranscriptFolder")
        self.actionOpenTranscriptFolder.setEnabled(False)
        self.actionRecordPause = QAction(PloverCAT)
        self.actionRecordPause.setObjectName(u"actionRecordPause")
        icon17 = QIcon()
        icon17.addFile(u":/resources/microphone.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionRecordPause.setIcon(icon17)
        self.actionStopRecording = QAction(PloverCAT)
        self.actionStopRecording.setObjectName(u"actionStopRecording")
        self.actionStopRecording.setEnabled(False)
        self.actionShowVideo = QAction(PloverCAT)
        self.actionShowVideo.setObjectName(u"actionShowVideo")
        self.actionShowVideo.setEnabled(False)
        self.actionRemoveTranscriptDict = QAction(PloverCAT)
        self.actionRemoveTranscriptDict.setObjectName(u"actionRemoveTranscriptDict")
        icon18 = QIcon()
        icon18.addFile(u":/resources/minus-button.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionRemoveTranscriptDict.setIcon(icon18)
        self.actionImportRTF = QAction(PloverCAT)
        self.actionImportRTF.setObjectName(u"actionImportRTF")
        self.actionCursorAtEnd = QAction(PloverCAT)
        self.actionCursorAtEnd.setObjectName(u"actionCursorAtEnd")
        self.actionCursorAtEnd.setCheckable(True)
        icon19 = QIcon()
        icon19.addFile(u":/resources/lock.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionCursorAtEnd.setIcon(icon19)
        self.actionCaptureAllOutput = QAction(PloverCAT)
        self.actionCaptureAllOutput.setObjectName(u"actionCaptureAllOutput")
        self.actionCaptureAllOutput.setCheckable(True)
        self.actionUserManual = QAction(PloverCAT)
        self.actionUserManual.setObjectName(u"actionUserManual")
        icon20 = QIcon()
        icon20.addFile(u":/resources/book-question.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionUserManual.setIcon(icon20)
        self.actionAcknowledgements = QAction(PloverCAT)
        self.actionAcknowledgements.setObjectName(u"actionAcknowledgements")
        self.actionPaperTape = QAction(PloverCAT)
        self.actionPaperTape.setObjectName(u"actionPaperTape")
        self.actionPaperTape.setCheckable(True)
        self.actionPaperTape.setChecked(True)
        self.actionSuggestions = QAction(PloverCAT)
        self.actionSuggestions.setObjectName(u"actionSuggestions")
        self.actionSuggestions.setCheckable(True)
        self.actionSuggestions.setChecked(True)
        self.actionHistory = QAction(PloverCAT)
        self.actionHistory.setObjectName(u"actionHistory")
        self.actionHistory.setCheckable(True)
        self.actionHistory.setChecked(True)
        self.actionRevealSteno = QAction(PloverCAT)
        self.actionRevealSteno.setObjectName(u"actionRevealSteno")
        self.actionRevealSteno.setCheckable(True)
        self.actionRevealSteno.setChecked(True)
        self.actionAudioControls = QAction(PloverCAT)
        self.actionAudioControls.setObjectName(u"actionAudioControls")
        self.actionAudioControls.setCheckable(True)
        self.actionAudioControls.setChecked(True)
        self.actionAudioControls.setEnabled(True)
        self.actionToolbox = QAction(PloverCAT)
        self.actionToolbox.setObjectName(u"actionToolbox")
        self.actionToolbox.setCheckable(True)
        self.actionToolbox.setChecked(True)
        self.actionClearParagraph = QAction(PloverCAT)
        self.actionClearParagraph.setObjectName(u"actionClearParagraph")
        icon21 = QIcon()
        icon21.addFile(u":/resources/cross.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionClearParagraph.setIcon(icon21)
        self.actionRetroactiveDefine = QAction(PloverCAT)
        self.actionRetroactiveDefine.setObjectName(u"actionRetroactiveDefine")
        icon22 = QIcon()
        icon22.addFile(u":/resources/card--plus.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionRetroactiveDefine.setIcon(icon22)
        self.actionDefineLast = QAction(PloverCAT)
        self.actionDefineLast.setObjectName(u"actionDefineLast")
        icon23 = QIcon()
        icon23.addFile(u":/resources/arrow-stop-180.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDefineLast.setIcon(icon23)
        self.actionAbout = QAction(PloverCAT)
        self.actionAbout.setObjectName(u"actionAbout")
        icon24 = QIcon()
        icon24.addFile(u":/resources/information.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAbout.setIcon(icon24)
        self.actionAutocompletion = QAction(PloverCAT)
        self.actionAutocompletion.setObjectName(u"actionAutocompletion")
        self.actionAutocompletion.setCheckable(True)
        icon25 = QIcon()
        icon25.addFile(u":/resources/wand.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAutocompletion.setIcon(icon25)
        self.actionPaperTapeFont = QAction(PloverCAT)
        self.actionPaperTapeFont.setObjectName(u"actionPaperTapeFont")
        self.actionStyleFileSelect = QAction(PloverCAT)
        self.actionStyleFileSelect.setObjectName(u"actionStyleFileSelect")
        self.actionGenerateStyleFromTemplate = QAction(PloverCAT)
        self.actionGenerateStyleFromTemplate.setObjectName(u"actionGenerateStyleFromTemplate")
        self.actionGenerateStyleFromTemplate.setEnabled(True)
        self.actionCreateNewStyle = QAction(PloverCAT)
        self.actionCreateNewStyle.setObjectName(u"actionCreateNewStyle")
        self.actionCreateNewStyle.setEnabled(False)
        self.actionRefreshEditor = QAction(PloverCAT)
        self.actionRefreshEditor.setObjectName(u"actionRefreshEditor")
        self.actionInsertNormalText = QAction(PloverCAT)
        self.actionInsertNormalText.setObjectName(u"actionInsertNormalText")
        icon26 = QIcon()
        icon26.addFile(u":/resources/control-cursor.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionInsertNormalText.setIcon(icon26)
        self.actionShowAllCharacters = QAction(PloverCAT)
        self.actionShowAllCharacters.setObjectName(u"actionShowAllCharacters")
        self.actionShowAllCharacters.setCheckable(True)
        icon27 = QIcon()
        icon27.addFile(u":/resources/edit-pilcrow.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionShowAllCharacters.setIcon(icon27)
        self.actionPlainASCII = QAction(PloverCAT)
        self.actionPlainASCII.setObjectName(u"actionPlainASCII")
        self.actionHTML = QAction(PloverCAT)
        self.actionHTML.setObjectName(u"actionHTML")
        self.actionAddAutocompletionTerm = QAction(PloverCAT)
        self.actionAddAutocompletionTerm.setObjectName(u"actionAddAutocompletionTerm")
        icon28 = QIcon()
        icon28.addFile(u":/resources/lightning.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAddAutocompletionTerm.setIcon(icon28)
        self.actionJumpToParagraph = QAction(PloverCAT)
        self.actionJumpToParagraph.setObjectName(u"actionJumpToParagraph")
        self.actionTranslateTape = QAction(PloverCAT)
        self.actionTranslateTape.setObjectName(u"actionTranslateTape")
        self.actionRTF = QAction(PloverCAT)
        self.actionRTF.setObjectName(u"actionRTF")
        self.actionInsertImage = QAction(PloverCAT)
        self.actionInsertImage.setObjectName(u"actionInsertImage")
        icon29 = QIcon()
        icon29.addFile(u":/resources/image--plus.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionInsertImage.setIcon(icon29)
        self.actionBackgroundColor = QAction(PloverCAT)
        self.actionBackgroundColor.setObjectName(u"actionBackgroundColor")
        icon30 = QIcon()
        icon30.addFile(u":/resources/palette.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionBackgroundColor.setIcon(icon30)
        self.actionNavigation = QAction(PloverCAT)
        self.actionNavigation.setObjectName(u"actionNavigation")
        self.actionNavigation.setCheckable(True)
        self.actionNavigation.setChecked(True)
        self.actionDeleteLast = QAction(PloverCAT)
        self.actionDeleteLast.setObjectName(u"actionDeleteLast")
        self.actionAutomaticAffixes = QAction(PloverCAT)
        self.actionAutomaticAffixes.setObjectName(u"actionAutomaticAffixes")
        self.actionAutomaticAffixes.setCheckable(True)
        self.actionAutomaticAffixes.setEnabled(True)
        self.actionEditFields = QAction(PloverCAT)
        self.actionEditFields.setObjectName(u"actionEditFields")
        self.actionEnableAutosave = QAction(PloverCAT)
        self.actionEnableAutosave.setObjectName(u"actionEnableAutosave")
        self.actionEnableAutosave.setCheckable(True)
        self.actionEnableAutosave.setChecked(True)
        self.actionEditAffixes = QAction(PloverCAT)
        self.actionEditAffixes.setObjectName(u"actionEditAffixes")
        self.actionEditAffixes.setEnabled(False)
        self.actionSetAutosaveTime = QAction(PloverCAT)
        self.actionSetAutosaveTime.setObjectName(u"actionSetAutosaveTime")
        self.actionEditMenuShortcuts = QAction(PloverCAT)
        self.actionEditMenuShortcuts.setObjectName(u"actionEditMenuShortcuts")
        self.actionEditIndices = QAction(PloverCAT)
        self.actionEditIndices.setObjectName(u"actionEditIndices")
        self.actionTranscriptSuggestions = QAction(PloverCAT)
        self.actionTranscriptSuggestions.setObjectName(u"actionTranscriptSuggestions")
        self.actionRedact = QAction(PloverCAT)
        self.actionRedact.setObjectName(u"actionRedact")
        self.actionRedact.setEnabled(False)
        self.actionCaptioning = QAction(PloverCAT)
        self.actionCaptioning.setObjectName(u"actionCaptioning")
        self.actionCaptioning.setCheckable(True)
        self.actionFlushCaption = QAction(PloverCAT)
        self.actionFlushCaption.setObjectName(u"actionFlushCaption")
        self.actionMassTimestampChange = QAction(PloverCAT)
        self.actionMassTimestampChange.setObjectName(u"actionMassTimestampChange")
        self.actionMassTimestampChange.setEnabled(False)
        self.actionAddChangeAudioTimestamps = QAction(PloverCAT)
        self.actionAddChangeAudioTimestamps.setObjectName(u"actionAddChangeAudioTimestamps")
        self.actionAddChangeAudioTimestamps.setEnabled(False)
        self.actionTape = QAction(PloverCAT)
        self.actionTape.setObjectName(u"actionTape")
        self.actionSpellcheck = QAction(PloverCAT)
        self.actionSpellcheck.setObjectName(u"actionSpellcheck")
        icon31 = QIcon()
        icon31.addFile(u":/resources/spell-check.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSpellcheck.setIcon(icon31)
        self.actionStenoSearch = QAction(PloverCAT)
        self.actionStenoSearch.setObjectName(u"actionStenoSearch")
        icon32 = QIcon()
        icon32.addFile(u":/resources/spell-check-error.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionStenoSearch.setIcon(icon32)
        self.actionStyling = QAction(PloverCAT)
        self.actionStyling.setObjectName(u"actionStyling")
        icon33 = QIcon()
        icon33.addFile(u":/resources/edit-style.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionStyling.setIcon(icon33)
        self.actionPageFormat = QAction(PloverCAT)
        self.actionPageFormat.setObjectName(u"actionPageFormat")
        icon34 = QIcon()
        icon34.addFile(u":/resources/document-resize-actual.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPageFormat.setIcon(icon34)
        self.actionParagraph = QAction(PloverCAT)
        self.actionParagraph.setObjectName(u"actionParagraph")
        self.actionParagraph.setIcon(icon27)
        self.actionSearchWikipedia = QAction(PloverCAT)
        self.actionSearchWikipedia.setObjectName(u"actionSearchWikipedia")
        self.actionSearchGoogle = QAction(PloverCAT)
        self.actionSearchGoogle.setObjectName(u"actionSearchGoogle")
        self.actionSearchDuckDuckGo = QAction(PloverCAT)
        self.actionSearchDuckDuckGo.setObjectName(u"actionSearchDuckDuckGo")
        self.actionSearchMerriamWebster = QAction(PloverCAT)
        self.actionSearchMerriamWebster.setObjectName(u"actionSearchMerriamWebster")
        self.actionSearchOED = QAction(PloverCAT)
        self.actionSearchOED.setObjectName(u"actionSearchOED")
        self.actionRevertTranscript = QAction(PloverCAT)
        self.actionRevertTranscript.setObjectName(u"actionRevertTranscript")
        self.actionViewPloverLog = QAction(PloverCAT)
        self.actionViewPloverLog.setObjectName(u"actionViewPloverLog")
        self.actionRunTests = QAction(PloverCAT)
        self.actionRunTests.setObjectName(u"actionRunTests")
        self.actionColorSteno = QAction(PloverCAT)
        self.actionColorSteno.setObjectName(u"actionColorSteno")
        self.actionColorText = QAction(PloverCAT)
        self.actionColorText.setObjectName(u"actionColorText")
        self.actionColorAutomatic = QAction(PloverCAT)
        self.actionColorAutomatic.setObjectName(u"actionColorAutomatic")
        self.actionColorField = QAction(PloverCAT)
        self.actionColorField.setObjectName(u"actionColorField")
        self.actionColorIndex = QAction(PloverCAT)
        self.actionColorIndex.setObjectName(u"actionColorIndex")
        self.centralwidget = QWidget(PloverCAT)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout_24 = QVBoxLayout(self.centralwidget)
        self.verticalLayout_24.setObjectName(u"verticalLayout_24")
        self.mainTabs = QTabWidget(self.centralwidget)
        self.mainTabs.setObjectName(u"mainTabs")
        self.mainTabs.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.mainTabs.setTabPosition(QTabWidget.TabPosition.North)
        self.mainTabs.setTabShape(QTabWidget.TabShape.Rounded)
        self.mainTabs.setDocumentMode(True)
        self.mainTabs.setTabsClosable(True)
        self.mainTabs.setTabBarAutoHide(False)
        self.homeTab = QWidget()
        self.homeTab.setObjectName(u"homeTab")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.homeTab.sizePolicy().hasHeightForWidth())
        self.homeTab.setSizePolicy(sizePolicy1)
        self.verticalLayout_21 = QVBoxLayout(self.homeTab)
        self.verticalLayout_21.setObjectName(u"verticalLayout_21")
        self.flowparent = QVBoxLayout()
        self.flowparent.setObjectName(u"flowparent")
        self.label_39 = QLabel(self.homeTab)
        self.label_39.setObjectName(u"label_39")
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.label_39.sizePolicy().hasHeightForWidth())
        self.label_39.setSizePolicy(sizePolicy2)
        self.label_39.setTextFormat(Qt.TextFormat.PlainText)
        self.label_39.setWordWrap(True)

        self.flowparent.addWidget(self.label_39)

        self.recentfileflow = QHBoxLayout()
        self.recentfileflow.setObjectName(u"recentfileflow")
        self.recentfileflow.setSizeConstraint(QLayout.SizeConstraint.SetDefaultConstraint)

        self.flowparent.addLayout(self.recentfileflow)


        self.verticalLayout_21.addLayout(self.flowparent)

        self.mainTabs.addTab(self.homeTab, "")

        self.verticalLayout_24.addWidget(self.mainTabs)

        PloverCAT.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(PloverCAT)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 881, 33))
        self.menubar.setNativeMenuBar(False)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuFile.setToolTipsVisible(True)
        self.menuExport_as = QMenu(self.menuFile)
        self.menuExport_as.setObjectName(u"menuExport_as")
        self.menuExport_as.setToolTipsVisible(True)
        self.menuRecentFiles = QMenu(self.menuFile)
        self.menuRecentFiles.setObjectName(u"menuRecentFiles")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuEdit.setToolTipsVisible(True)
        self.menuClipboard = QMenu(self.menuEdit)
        self.menuClipboard.setObjectName(u"menuClipboard")
        self.menuAudio = QMenu(self.menubar)
        self.menuAudio.setObjectName(u"menuAudio")
        self.menuAudio.setToolTipsVisible(True)
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        self.menuView.setToolTipsVisible(True)
        self.menuDocks = QMenu(self.menuView)
        self.menuDocks.setObjectName(u"menuDocks")
        self.menuHighlightColors = QMenu(self.menuView)
        self.menuHighlightColors.setObjectName(u"menuHighlightColors")
        self.menuDictionary = QMenu(self.menubar)
        self.menuDictionary.setObjectName(u"menuDictionary")
        self.menuDictionary.setToolTipsVisible(True)
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menuHelp.setToolTipsVisible(True)
        self.menuDiagnostics = QMenu(self.menuHelp)
        self.menuDiagnostics.setObjectName(u"menuDiagnostics")
        self.menuSteno_Actions = QMenu(self.menubar)
        self.menuSteno_Actions.setObjectName(u"menuSteno_Actions")
        self.menuSteno_Actions.setToolTipsVisible(True)
        self.menuStyling = QMenu(self.menubar)
        self.menuStyling.setObjectName(u"menuStyling")
        self.menuStyling.setToolTipsVisible(True)
        self.menuParagraphStyle = QMenu(self.menuStyling)
        self.menuParagraphStyle.setObjectName(u"menuParagraphStyle")
        self.menuInsert = QMenu(self.menubar)
        self.menuInsert.setObjectName(u"menuInsert")
        self.menuInsert.setToolTipsVisible(True)
        self.menuField = QMenu(self.menuInsert)
        self.menuField.setObjectName(u"menuField")
        self.menuIndexEntry = QMenu(self.menuInsert)
        self.menuIndexEntry.setObjectName(u"menuIndexEntry")
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName(u"menuTools")
        self.menuTools.setToolTipsVisible(True)
        PloverCAT.setMenuBar(self.menubar)
        self.statusBar = QStatusBar(PloverCAT)
        self.statusBar.setObjectName(u"statusBar")
        PloverCAT.setStatusBar(self.statusBar)
        self.toolbarFile = QToolBar(PloverCAT)
        self.toolbarFile.setObjectName(u"toolbarFile")
        PloverCAT.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolbarFile)
        self.dockPaper = QDockWidget(PloverCAT)
        self.dockPaper.setObjectName(u"dockPaper")
        self.dockPaper.setMinimumSize(QSize(100, 142))
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.verticalLayout_4 = QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.strokeList = QPlainTextEdit(self.dockWidgetContents)
        self.strokeList.setObjectName(u"strokeList")
        self.strokeList.setMinimumSize(QSize(0, 0))
        font1 = QFont()
        font1.setFamilies([u"Courier New"])
        font1.setPointSize(8)
        self.strokeList.setFont(font1)
        self.strokeList.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.strokeList.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.strokeList.setUndoRedoEnabled(False)
        self.strokeList.setLineWrapMode(QPlainTextEdit.LineWrapMode.NoWrap)
        self.strokeList.setReadOnly(True)
        self.strokeList.setTabStopDistance(50.000000000000000)
        self.strokeList.setTextInteractionFlags(Qt.TextInteractionFlag.TextSelectableByKeyboard|Qt.TextInteractionFlag.TextSelectableByMouse)

        self.verticalLayout_4.addWidget(self.strokeList)

        self.horizontalLayout_9 = QHBoxLayout()
        self.horizontalLayout_9.setObjectName(u"horizontalLayout_9")
        self.strokeLocate = QPushButton(self.dockWidgetContents)
        self.strokeLocate.setObjectName(u"strokeLocate")
        self.strokeLocate.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.strokeLocate.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)

        self.horizontalLayout_9.addWidget(self.strokeLocate)


        self.verticalLayout_4.addLayout(self.horizontalLayout_9)

        self.dockPaper.setWidget(self.dockWidgetContents)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, self.dockPaper)
        self.dockSuggest = QDockWidget(PloverCAT)
        self.dockSuggest.setObjectName(u"dockSuggest")
        self.dockSuggest.setMinimumSize(QSize(187, 139))
        self.dockWidgetContents_3 = QWidget()
        self.dockWidgetContents_3.setObjectName(u"dockWidgetContents_3")
        self.verticalLayout_2 = QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.horizontalLayout_18 = QHBoxLayout()
        self.horizontalLayout_18.setObjectName(u"horizontalLayout_18")
        self.suggest_source = QComboBox(self.dockWidgetContents_3)
        self.suggest_source.addItem("")
        self.suggest_source.addItem("")
        self.suggest_source.setObjectName(u"suggest_source")
        self.suggest_source.setMinimumSize(QSize(80, 0))
        self.suggest_source.setMaximumSize(QSize(100, 16777215))
        self.suggest_source.setMouseTracking(True)

        self.horizontalLayout_18.addWidget(self.suggest_source)

        self.suggest_sort = QRadioButton(self.dockWidgetContents_3)
        self.suggest_sort.setObjectName(u"suggest_sort")
        self.suggest_sort.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_18.addWidget(self.suggest_sort)


        self.verticalLayout_2.addLayout(self.horizontalLayout_18)

        self.suggestTable = QTableWidget(self.dockWidgetContents_3)
        self.suggestTable.setObjectName(u"suggestTable")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy3.setHorizontalStretch(1)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.suggestTable.sizePolicy().hasHeightForWidth())
        self.suggestTable.setSizePolicy(sizePolicy3)
        font2 = QFont()
        font2.setFamilies([u"Consolas"])
        font2.setPointSize(8)
        self.suggestTable.setFont(font2)
        self.suggestTable.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.suggestTable.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.suggestTable.setRowCount(0)
        self.suggestTable.horizontalHeader().setVisible(False)
        self.suggestTable.horizontalHeader().setProperty(u"showSortIndicator", False)
        self.suggestTable.verticalHeader().setVisible(False)

        self.verticalLayout_2.addWidget(self.suggestTable)

        self.dockSuggest.setWidget(self.dockWidgetContents_3)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, self.dockSuggest)
        self.dockAudio = QDockWidget(PloverCAT)
        self.dockAudio.setObjectName(u"dockAudio")
        self.dockAudio.setMinimumSize(QSize(324, 124))
        self.dockAudio.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.dockWidgetContents_4 = QWidget()
        self.dockWidgetContents_4.setObjectName(u"dockWidgetContents_4")
        self.verticalLayout_6 = QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.audio_label = QLabel(self.dockWidgetContents_4)
        self.audio_label.setObjectName(u"audio_label")

        self.verticalLayout_6.addWidget(self.audio_label)

        self.horizontalLayout_7 = QHBoxLayout()
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.playRate = QDoubleSpinBox(self.dockWidgetContents_4)
        self.playRate.setObjectName(u"playRate")
        self.playRate.setEnabled(False)
        sizePolicy4 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.playRate.sizePolicy().hasHeightForWidth())
        self.playRate.setSizePolicy(sizePolicy4)
        self.playRate.setMinimumSize(QSize(0, 0))
        self.playRate.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.playRate.setMinimum(0.050000000000000)
        self.playRate.setMaximum(2.000000000000000)
        self.playRate.setSingleStep(0.050000000000000)
        self.playRate.setValue(1.000000000000000)

        self.horizontalLayout_7.addWidget(self.playRate)

        self.audioDelay = QSpinBox(self.dockWidgetContents_4)
        self.audioDelay.setObjectName(u"audioDelay")
        self.audioDelay.setEnabled(False)
        self.audioDelay.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.audioDelay.setMinimum(-10000)
        self.audioDelay.setMaximum(10000)
        self.audioDelay.setSingleStep(100)

        self.horizontalLayout_7.addWidget(self.audioDelay)

        self.audio_curr_pos = QLabel(self.dockWidgetContents_4)
        self.audio_curr_pos.setObjectName(u"audio_curr_pos")

        self.horizontalLayout_7.addWidget(self.audio_curr_pos)

        self.audio_seeker = QSlider(self.dockWidgetContents_4)
        self.audio_seeker.setObjectName(u"audio_seeker")
        self.audio_seeker.setEnabled(False)
        self.audio_seeker.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.audio_seeker.setOrientation(Qt.Orientation.Horizontal)

        self.horizontalLayout_7.addWidget(self.audio_seeker)

        self.audio_duration = QLabel(self.dockWidgetContents_4)
        self.audio_duration.setObjectName(u"audio_duration")

        self.horizontalLayout_7.addWidget(self.audio_duration)


        self.verticalLayout_6.addLayout(self.horizontalLayout_7)

        self.audio_output = QComboBox(self.dockWidgetContents_4)
        self.audio_output.setObjectName(u"audio_output")
        self.audio_output.setEnabled(False)

        self.verticalLayout_6.addWidget(self.audio_output)

        self.verticalSpacer_6 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_6.addItem(self.verticalSpacer_6)

        self.videoLayout = QVBoxLayout()
        self.videoLayout.setObjectName(u"videoLayout")

        self.verticalLayout_6.addLayout(self.videoLayout)

        self.dockAudio.setWidget(self.dockWidgetContents_4)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.BottomDockWidgetArea, self.dockAudio)
        self.dockProp = QDockWidget(PloverCAT)
        self.dockProp.setObjectName(u"dockProp")
        self.dockProp.setEnabled(True)
        self.dockProp.setMinimumSize(QSize(386, 309))
        self.dockProp.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.dockProp.setFloating(False)
        self.dockWidgetContents_5 = QWidget()
        self.dockWidgetContents_5.setObjectName(u"dockWidgetContents_5")
        self.verticalLayout = QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.tabWidget = QTabWidget(self.dockWidgetContents_5)
        self.tabWidget.setObjectName(u"tabWidget")
        self.tabWidget.setEnabled(True)
        sizePolicy1.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy1)
        self.tabWidget.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.tabWidget.setTabPosition(QTabWidget.TabPosition.East)
        self.tabWidget.setElideMode(Qt.TextElideMode.ElideNone)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.styling_pane = QWidget()
        self.styling_pane.setObjectName(u"styling_pane")
        self.verticalLayout_25 = QVBoxLayout(self.styling_pane)
        self.verticalLayout_25.setObjectName(u"verticalLayout_25")
        self.scrollArea = QScrollArea(self.styling_pane)
        self.scrollArea.setObjectName(u"scrollArea")
        self.scrollArea.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QWidget()
        self.scrollAreaWidgetContents.setObjectName(u"scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setGeometry(QRect(0, 0, 351, 472))
        self.verticalLayout_26 = QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_26.setObjectName(u"verticalLayout_26")
        self.style_file_path = QLabel(self.scrollAreaWidgetContents)
        self.style_file_path.setObjectName(u"style_file_path")

        self.verticalLayout_26.addWidget(self.style_file_path)

        self.label_3 = QLabel(self.scrollAreaWidgetContents)
        self.label_3.setObjectName(u"label_3")

        self.verticalLayout_26.addWidget(self.label_3)

        self.style_selector = QComboBox(self.scrollAreaWidgetContents)
        self.style_selector.setObjectName(u"style_selector")
        self.style_selector.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_26.addWidget(self.style_selector)

        self.style_controls = QGroupBox(self.scrollAreaWidgetContents)
        self.style_controls.setObjectName(u"style_controls")
        self.style_controls.setEnabled(False)
        self.verticalLayout_20 = QVBoxLayout(self.style_controls)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.horizontalLayout_12 = QHBoxLayout()
        self.horizontalLayout_12.setObjectName(u"horizontalLayout_12")
        self.blockFont = QFontComboBox(self.style_controls)
        self.blockFont.setObjectName(u"blockFont")
        self.blockFont.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        font3 = QFont()
        font3.setFamilies([u"Courier New"])
        font3.setPointSize(12)
        self.blockFont.setCurrentFont(font3)

        self.horizontalLayout_12.addWidget(self.blockFont)

        self.blockFontSize = QSpinBox(self.style_controls)
        self.blockFontSize.setObjectName(u"blockFontSize")
        self.blockFontSize.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockFontSize.setValue(12)

        self.horizontalLayout_12.addWidget(self.blockFontSize)


        self.verticalLayout_20.addLayout(self.horizontalLayout_12)

        self.horizontalLayout_15 = QHBoxLayout()
        self.horizontalLayout_15.setObjectName(u"horizontalLayout_15")
        self.blockFontBold = QPushButton(self.style_controls)
        self.blockFontBold.setObjectName(u"blockFontBold")
        self.blockFontBold.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon35 = QIcon()
        icon35.addFile(u":/resources/edit-bold.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockFontBold.setIcon(icon35)
        self.blockFontBold.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockFontBold)

        self.blockFontItalic = QPushButton(self.style_controls)
        self.blockFontItalic.setObjectName(u"blockFontItalic")
        self.blockFontItalic.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon36 = QIcon()
        icon36.addFile(u":/resources/edit-italic.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockFontItalic.setIcon(icon36)
        self.blockFontItalic.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockFontItalic)

        self.blockFontUnderline = QPushButton(self.style_controls)
        self.blockFontUnderline.setObjectName(u"blockFontUnderline")
        self.blockFontUnderline.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon37 = QIcon()
        icon37.addFile(u":/resources/edit-underline.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockFontUnderline.setIcon(icon37)
        self.blockFontUnderline.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockFontUnderline)

        self.blockLeftAlign = QPushButton(self.style_controls)
        self.blockAlignment = QButtonGroup(PloverCAT)
        self.blockAlignment.setObjectName(u"blockAlignment")
        self.blockAlignment.addButton(self.blockLeftAlign)
        self.blockLeftAlign.setObjectName(u"blockLeftAlign")
        self.blockLeftAlign.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon38 = QIcon()
        icon38.addFile(u":/resources/edit-alignment.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockLeftAlign.setIcon(icon38)
        self.blockLeftAlign.setCheckable(True)
        self.blockLeftAlign.setChecked(True)

        self.horizontalLayout_15.addWidget(self.blockLeftAlign)

        self.blockCenterAlign = QPushButton(self.style_controls)
        self.blockAlignment.addButton(self.blockCenterAlign)
        self.blockCenterAlign.setObjectName(u"blockCenterAlign")
        self.blockCenterAlign.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon39 = QIcon()
        icon39.addFile(u":/resources/edit-alignment-center.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockCenterAlign.setIcon(icon39)
        self.blockCenterAlign.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockCenterAlign)

        self.blockRightAlign = QPushButton(self.style_controls)
        self.blockAlignment.addButton(self.blockRightAlign)
        self.blockRightAlign.setObjectName(u"blockRightAlign")
        self.blockRightAlign.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon40 = QIcon()
        icon40.addFile(u":/resources/edit-alignment-right.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockRightAlign.setIcon(icon40)
        self.blockRightAlign.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockRightAlign)

        self.blockJustify = QPushButton(self.style_controls)
        self.blockAlignment.addButton(self.blockJustify)
        self.blockJustify.setObjectName(u"blockJustify")
        self.blockJustify.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon41 = QIcon()
        icon41.addFile(u":/resources/edit-alignment-justify-distribute.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.blockJustify.setIcon(icon41)
        self.blockJustify.setCheckable(True)

        self.horizontalLayout_15.addWidget(self.blockJustify)

        self.blockLineSpace = QSpinBox(self.style_controls)
        self.blockLineSpace.setObjectName(u"blockLineSpace")
        self.blockLineSpace.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.blockLineSpace.setMaximum(1000)
        self.blockLineSpace.setValue(100)

        self.horizontalLayout_15.addWidget(self.blockLineSpace)

        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_15.addItem(self.horizontalSpacer_2)


        self.verticalLayout_20.addLayout(self.horizontalLayout_15)

        self.formLayout_4 = QFormLayout()
        self.formLayout_4.setObjectName(u"formLayout_4")
        self.label_30 = QLabel(self.style_controls)
        self.label_30.setObjectName(u"label_30")

        self.formLayout_4.setWidget(0, QFormLayout.ItemRole.LabelRole, self.label_30)

        self.fontspaceInInch = QDoubleSpinBox(self.style_controls)
        self.fontspaceInInch.setObjectName(u"fontspaceInInch")
        self.fontspaceInInch.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.fontspaceInInch.setReadOnly(True)
        self.fontspaceInInch.setButtonSymbols(QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.fontspaceInInch.setKeyboardTracking(True)

        self.formLayout_4.setWidget(0, QFormLayout.ItemRole.FieldRole, self.fontspaceInInch)

        self.label_28 = QLabel(self.style_controls)
        self.label_28.setObjectName(u"label_28")

        self.formLayout_4.setWidget(1, QFormLayout.ItemRole.LabelRole, self.label_28)

        self.blockTextIndent = QDoubleSpinBox(self.style_controls)
        self.blockTextIndent.setObjectName(u"blockTextIndent")
        self.blockTextIndent.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockTextIndent.setKeyboardTracking(True)
        self.blockTextIndent.setMinimum(0.000000000000000)
        self.blockTextIndent.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(1, QFormLayout.ItemRole.FieldRole, self.blockTextIndent)

        self.label_29 = QLabel(self.style_controls)
        self.label_29.setObjectName(u"label_29")

        self.formLayout_4.setWidget(2, QFormLayout.ItemRole.LabelRole, self.label_29)

        self.blockTabStop = QDoubleSpinBox(self.style_controls)
        self.blockTabStop.setObjectName(u"blockTabStop")
        self.blockTabStop.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockTabStop.setKeyboardTracking(True)
        self.blockTabStop.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(2, QFormLayout.ItemRole.FieldRole, self.blockTabStop)

        self.label_24 = QLabel(self.style_controls)
        self.label_24.setObjectName(u"label_24")

        self.formLayout_4.setWidget(3, QFormLayout.ItemRole.LabelRole, self.label_24)

        self.blockLeftMargin = QDoubleSpinBox(self.style_controls)
        self.blockLeftMargin.setObjectName(u"blockLeftMargin")
        self.blockLeftMargin.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockLeftMargin.setKeyboardTracking(True)
        self.blockLeftMargin.setMinimum(0.000000000000000)
        self.blockLeftMargin.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(3, QFormLayout.ItemRole.FieldRole, self.blockLeftMargin)

        self.label_25 = QLabel(self.style_controls)
        self.label_25.setObjectName(u"label_25")

        self.formLayout_4.setWidget(4, QFormLayout.ItemRole.LabelRole, self.label_25)

        self.blockRightMargin = QDoubleSpinBox(self.style_controls)
        self.blockRightMargin.setObjectName(u"blockRightMargin")
        self.blockRightMargin.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockRightMargin.setKeyboardTracking(True)
        self.blockRightMargin.setMinimum(0.000000000000000)
        self.blockRightMargin.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(4, QFormLayout.ItemRole.FieldRole, self.blockRightMargin)

        self.label_26 = QLabel(self.style_controls)
        self.label_26.setObjectName(u"label_26")

        self.formLayout_4.setWidget(5, QFormLayout.ItemRole.LabelRole, self.label_26)

        self.blockTopMargin = QDoubleSpinBox(self.style_controls)
        self.blockTopMargin.setObjectName(u"blockTopMargin")
        self.blockTopMargin.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockTopMargin.setKeyboardTracking(True)
        self.blockTopMargin.setMinimum(0.000000000000000)
        self.blockTopMargin.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(5, QFormLayout.ItemRole.FieldRole, self.blockTopMargin)

        self.label_27 = QLabel(self.style_controls)
        self.label_27.setObjectName(u"label_27")

        self.formLayout_4.setWidget(6, QFormLayout.ItemRole.LabelRole, self.label_27)

        self.blockBottomMargin = QDoubleSpinBox(self.style_controls)
        self.blockBottomMargin.setObjectName(u"blockBottomMargin")
        self.blockBottomMargin.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.blockBottomMargin.setReadOnly(False)
        self.blockBottomMargin.setKeyboardTracking(True)
        self.blockBottomMargin.setSingleStep(0.050000000000000)

        self.formLayout_4.setWidget(6, QFormLayout.ItemRole.FieldRole, self.blockBottomMargin)

        self.label_31 = QLabel(self.style_controls)
        self.label_31.setObjectName(u"label_31")

        self.formLayout_4.setWidget(7, QFormLayout.ItemRole.LabelRole, self.label_31)

        self.blockParentStyle = QComboBox(self.style_controls)
        self.blockParentStyle.setObjectName(u"blockParentStyle")
        self.blockParentStyle.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.formLayout_4.setWidget(7, QFormLayout.ItemRole.FieldRole, self.blockParentStyle)

        self.label_32 = QLabel(self.style_controls)
        self.label_32.setObjectName(u"label_32")

        self.formLayout_4.setWidget(8, QFormLayout.ItemRole.LabelRole, self.label_32)

        self.blockNextStyle = QComboBox(self.style_controls)
        self.blockNextStyle.setObjectName(u"blockNextStyle")
        self.blockNextStyle.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.formLayout_4.setWidget(8, QFormLayout.ItemRole.FieldRole, self.blockNextStyle)

        self.label_33 = QLabel(self.style_controls)
        self.label_33.setObjectName(u"label_33")

        self.formLayout_4.setWidget(9, QFormLayout.ItemRole.LabelRole, self.label_33)

        self.blockHeadingLevel = QComboBox(self.style_controls)
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.setObjectName(u"blockHeadingLevel")
        self.blockHeadingLevel.setEnabled(False)
        self.blockHeadingLevel.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.formLayout_4.setWidget(9, QFormLayout.ItemRole.FieldRole, self.blockHeadingLevel)

        self.editCurrentStyle = QPushButton(self.style_controls)
        self.editCurrentStyle.setObjectName(u"editCurrentStyle")
        self.editCurrentStyle.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.formLayout_4.setWidget(10, QFormLayout.ItemRole.FieldRole, self.editCurrentStyle)


        self.verticalLayout_20.addLayout(self.formLayout_4)

        self.verticalSpacer_5 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_20.addItem(self.verticalSpacer_5)


        self.verticalLayout_26.addWidget(self.style_controls)

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.verticalLayout_25.addWidget(self.scrollArea)

        self.tabWidget.addTab(self.styling_pane, icon33, "")
        self.page_format_pane = QWidget()
        self.page_format_pane.setObjectName(u"page_format_pane")
        self.verticalLayout_27 = QVBoxLayout(self.page_format_pane)
        self.verticalLayout_27.setObjectName(u"verticalLayout_27")
        self.scrollArea_2 = QScrollArea(self.page_format_pane)
        self.scrollArea_2.setObjectName(u"scrollArea_2")
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollAreaWidgetContents_2 = QWidget()
        self.scrollAreaWidgetContents_2.setObjectName(u"scrollAreaWidgetContents_2")
        self.scrollAreaWidgetContents_2.setGeometry(QRect(0, 0, 351, 396))
        self.verticalLayout_28 = QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_28.setObjectName(u"verticalLayout_28")
        self.formLayout_3 = QFormLayout()
        self.formLayout_3.setObjectName(u"formLayout_3")
        self.label_8 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_8.setObjectName(u"label_8")

        self.formLayout_3.setWidget(0, QFormLayout.ItemRole.LabelRole, self.label_8)

        self.page_width = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_width.setObjectName(u"page_width")
        self.page_width.setKeyboardTracking(False)
        self.page_width.setValue(8.500000000000000)

        self.formLayout_3.setWidget(0, QFormLayout.ItemRole.FieldRole, self.page_width)

        self.label_9 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_9.setObjectName(u"label_9")

        self.formLayout_3.setWidget(1, QFormLayout.ItemRole.LabelRole, self.label_9)

        self.page_height = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_height.setObjectName(u"page_height")
        self.page_height.setKeyboardTracking(False)
        self.page_height.setValue(11.000000000000000)

        self.formLayout_3.setWidget(1, QFormLayout.ItemRole.FieldRole, self.page_height)

        self.label_10 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_10.setObjectName(u"label_10")

        self.formLayout_3.setWidget(2, QFormLayout.ItemRole.LabelRole, self.label_10)

        self.page_left_margin = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_left_margin.setObjectName(u"page_left_margin")
        self.page_left_margin.setKeyboardTracking(False)
        self.page_left_margin.setDecimals(4)
        self.page_left_margin.setValue(1.750000000000000)

        self.formLayout_3.setWidget(2, QFormLayout.ItemRole.FieldRole, self.page_left_margin)

        self.label_11 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_11.setObjectName(u"label_11")

        self.formLayout_3.setWidget(3, QFormLayout.ItemRole.LabelRole, self.label_11)

        self.page_top_margin = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_top_margin.setObjectName(u"page_top_margin")
        self.page_top_margin.setKeyboardTracking(False)
        self.page_top_margin.setDecimals(4)
        self.page_top_margin.setValue(0.787400000000000)

        self.formLayout_3.setWidget(3, QFormLayout.ItemRole.FieldRole, self.page_top_margin)

        self.label_12 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_12.setObjectName(u"label_12")

        self.formLayout_3.setWidget(4, QFormLayout.ItemRole.LabelRole, self.label_12)

        self.page_right_margin = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_right_margin.setObjectName(u"page_right_margin")
        self.page_right_margin.setKeyboardTracking(False)
        self.page_right_margin.setDecimals(4)
        self.page_right_margin.setValue(0.379900000000000)

        self.formLayout_3.setWidget(4, QFormLayout.ItemRole.FieldRole, self.page_right_margin)

        self.label_13 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_13.setObjectName(u"label_13")

        self.formLayout_3.setWidget(5, QFormLayout.ItemRole.LabelRole, self.label_13)

        self.page_bottom_margin = QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_bottom_margin.setObjectName(u"page_bottom_margin")
        self.page_bottom_margin.setKeyboardTracking(False)
        self.page_bottom_margin.setDecimals(4)
        self.page_bottom_margin.setValue(0.787400000000000)

        self.formLayout_3.setWidget(5, QFormLayout.ItemRole.FieldRole, self.page_bottom_margin)

        self.label_15 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_15.setObjectName(u"label_15")

        self.formLayout_3.setWidget(6, QFormLayout.ItemRole.LabelRole, self.label_15)

        self.page_max_char = QSpinBox(self.scrollAreaWidgetContents_2)
        self.page_max_char.setObjectName(u"page_max_char")
        self.page_max_char.setKeyboardTracking(False)

        self.formLayout_3.setWidget(6, QFormLayout.ItemRole.FieldRole, self.page_max_char)

        self.label_14 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_14.setObjectName(u"label_14")

        self.formLayout_3.setWidget(7, QFormLayout.ItemRole.LabelRole, self.label_14)

        self.page_max_lines = QSpinBox(self.scrollAreaWidgetContents_2)
        self.page_max_lines.setObjectName(u"page_max_lines")
        self.page_max_lines.setKeyboardTracking(False)

        self.formLayout_3.setWidget(7, QFormLayout.ItemRole.FieldRole, self.page_max_lines)

        self.label_35 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_35.setObjectName(u"label_35")

        self.formLayout_3.setWidget(8, QFormLayout.ItemRole.LabelRole, self.label_35)

        self.enable_line_num = QCheckBox(self.scrollAreaWidgetContents_2)
        self.enable_line_num.setObjectName(u"enable_line_num")

        self.formLayout_3.setWidget(8, QFormLayout.ItemRole.FieldRole, self.enable_line_num)

        self.label_34 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_34.setObjectName(u"label_34")

        self.formLayout_3.setWidget(9, QFormLayout.ItemRole.LabelRole, self.label_34)

        self.line_num_freq = QSpinBox(self.scrollAreaWidgetContents_2)
        self.line_num_freq.setObjectName(u"line_num_freq")
        self.line_num_freq.setKeyboardTracking(False)
        self.line_num_freq.setMinimum(1)

        self.formLayout_3.setWidget(9, QFormLayout.ItemRole.FieldRole, self.line_num_freq)

        self.label_36 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_36.setObjectName(u"label_36")

        self.formLayout_3.setWidget(10, QFormLayout.ItemRole.LabelRole, self.label_36)

        self.enable_timestamp = QCheckBox(self.scrollAreaWidgetContents_2)
        self.enable_timestamp.setObjectName(u"enable_timestamp")

        self.formLayout_3.setWidget(10, QFormLayout.ItemRole.FieldRole, self.enable_timestamp)


        self.verticalLayout_28.addLayout(self.formLayout_3)

        self.label_37 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_37.setObjectName(u"label_37")

        self.verticalLayout_28.addWidget(self.label_37)

        self.horizontalLayout_5 = QHBoxLayout()
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.header_left = QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_left.setObjectName(u"header_left")
        self.header_left.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_5.addWidget(self.header_left)

        self.header_center = QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_center.setObjectName(u"header_center")
        self.header_center.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_5.addWidget(self.header_center)

        self.header_right = QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_right.setObjectName(u"header_right")
        self.header_right.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_5.addWidget(self.header_right)


        self.verticalLayout_28.addLayout(self.horizontalLayout_5)

        self.label_38 = QLabel(self.scrollAreaWidgetContents_2)
        self.label_38.setObjectName(u"label_38")

        self.verticalLayout_28.addWidget(self.label_38)

        self.horizontalLayout_17 = QHBoxLayout()
        self.horizontalLayout_17.setObjectName(u"horizontalLayout_17")
        self.footer_left = QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_left.setObjectName(u"footer_left")
        self.footer_left.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_17.addWidget(self.footer_left)

        self.footer_center = QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_center.setObjectName(u"footer_center")
        self.footer_center.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_17.addWidget(self.footer_center)

        self.footer_right = QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_right.setObjectName(u"footer_right")
        self.footer_right.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_17.addWidget(self.footer_right)


        self.verticalLayout_28.addLayout(self.horizontalLayout_17)

        self.verticalSpacer_2 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_28.addItem(self.verticalSpacer_2)

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)

        self.verticalLayout_27.addWidget(self.scrollArea_2)

        self.tabWidget.addTab(self.page_format_pane, icon34, "")
        self.find_replace_pane = QWidget()
        self.find_replace_pane.setObjectName(u"find_replace_pane")
        self.verticalLayout_29 = QVBoxLayout(self.find_replace_pane)
        self.verticalLayout_29.setObjectName(u"verticalLayout_29")
        self.scrollArea_3 = QScrollArea(self.find_replace_pane)
        self.scrollArea_3.setObjectName(u"scrollArea_3")
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollAreaWidgetContents_3 = QWidget()
        self.scrollAreaWidgetContents_3.setObjectName(u"scrollAreaWidgetContents_3")
        self.scrollAreaWidgetContents_3.setGeometry(QRect(0, 0, 351, 254))
        self.verticalLayout_30 = QVBoxLayout(self.scrollAreaWidgetContents_3)
        self.verticalLayout_30.setObjectName(u"verticalLayout_30")
        self.groupBox_2 = QGroupBox(self.scrollAreaWidgetContents_3)
        self.groupBox_2.setObjectName(u"groupBox_2")
        self.horizontalLayout = QHBoxLayout(self.groupBox_2)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.search_text = QRadioButton(self.groupBox_2)
        self.search_text.setObjectName(u"search_text")
        self.search_text.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.search_text.setChecked(True)

        self.horizontalLayout.addWidget(self.search_text)

        self.search_untrans = QRadioButton(self.groupBox_2)
        self.search_untrans.setObjectName(u"search_untrans")
        self.search_untrans.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout.addWidget(self.search_untrans)

        self.search_steno = QRadioButton(self.groupBox_2)
        self.search_steno.setObjectName(u"search_steno")
        self.search_steno.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout.addWidget(self.search_steno)


        self.verticalLayout_30.addWidget(self.groupBox_2)

        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.search_term = QLineEdit(self.scrollAreaWidgetContents_3)
        self.search_term.setObjectName(u"search_term")

        self.horizontalLayout_2.addWidget(self.search_term)


        self.verticalLayout_30.addLayout(self.horizontalLayout_2)

        self.horizontalLayout_13 = QHBoxLayout()
        self.horizontalLayout_13.setObjectName(u"horizontalLayout_13")
        self.search_backward = QPushButton(self.scrollAreaWidgetContents_3)
        self.search_backward.setObjectName(u"search_backward")
        self.search_backward.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon42 = QIcon()
        icon42.addFile(u":/resources/arrow-skip-180.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.search_backward.setIcon(icon42)

        self.horizontalLayout_13.addWidget(self.search_backward)

        self.search_forward = QPushButton(self.scrollAreaWidgetContents_3)
        self.search_forward.setObjectName(u"search_forward")
        self.search_forward.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon43 = QIcon()
        icon43.addFile(u":/resources/arrow-skip.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.search_forward.setIcon(icon43)

        self.horizontalLayout_13.addWidget(self.search_forward)

        self.find_all = QPushButton(self.scrollAreaWidgetContents_3)
        self.find_all.setObjectName(u"find_all")
        self.find_all.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_13.addWidget(self.find_all)


        self.verticalLayout_30.addLayout(self.horizontalLayout_13)

        self.horizontalLayout_4 = QHBoxLayout()
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.search_case = QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_case.setObjectName(u"search_case")
        self.search_case.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_4.addWidget(self.search_case)

        self.search_whole = QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_whole.setObjectName(u"search_whole")
        self.search_whole.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_4.addWidget(self.search_whole)

        self.search_wrap = QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_wrap.setObjectName(u"search_wrap")
        self.search_wrap.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_4.addWidget(self.search_wrap)


        self.verticalLayout_30.addLayout(self.horizontalLayout_4)

        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.replace_term = QLineEdit(self.scrollAreaWidgetContents_3)
        self.replace_term.setObjectName(u"replace_term")

        self.horizontalLayout_3.addWidget(self.replace_term)

        self.replace_selected = QPushButton(self.scrollAreaWidgetContents_3)
        self.replace_selected.setObjectName(u"replace_selected")
        self.replace_selected.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_3.addWidget(self.replace_selected)

        self.replace_all = QPushButton(self.scrollAreaWidgetContents_3)
        self.replace_all.setObjectName(u"replace_all")
        self.replace_all.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_3.addWidget(self.replace_all)


        self.verticalLayout_30.addLayout(self.horizontalLayout_3)

        self.searchResults = QListWidget(self.scrollAreaWidgetContents_3)
        self.searchResults.setObjectName(u"searchResults")

        self.verticalLayout_30.addWidget(self.searchResults)

        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents_3)

        self.verticalLayout_29.addWidget(self.scrollArea_3)

        self.tabWidget.addTab(self.find_replace_pane, icon16, "")
        self.paragraph_pane = QWidget()
        self.paragraph_pane.setObjectName(u"paragraph_pane")
        self.verticalLayout_31 = QVBoxLayout(self.paragraph_pane)
        self.verticalLayout_31.setObjectName(u"verticalLayout_31")
        self.scrollArea_4 = QScrollArea(self.paragraph_pane)
        self.scrollArea_4.setObjectName(u"scrollArea_4")
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollAreaWidgetContents_4 = QWidget()
        self.scrollAreaWidgetContents_4.setObjectName(u"scrollAreaWidgetContents_4")
        self.scrollAreaWidgetContents_4.setGeometry(QRect(0, 0, 363, 247))
        self.verticalLayout_32 = QVBoxLayout(self.scrollAreaWidgetContents_4)
        self.verticalLayout_32.setObjectName(u"verticalLayout_32")
        self.formLayout_2 = QFormLayout()
        self.formLayout_2.setObjectName(u"formLayout_2")
        self.label_2 = QLabel(self.scrollAreaWidgetContents_4)
        self.label_2.setObjectName(u"label_2")

        self.formLayout_2.setWidget(0, QFormLayout.ItemRole.LabelRole, self.label_2)

        self.editorParagraphLabel = QLabel(self.scrollAreaWidgetContents_4)
        self.editorParagraphLabel.setObjectName(u"editorParagraphLabel")

        self.formLayout_2.setWidget(0, QFormLayout.ItemRole.FieldRole, self.editorParagraphLabel)

        self.label = QLabel(self.scrollAreaWidgetContents_4)
        self.label.setObjectName(u"label")

        self.formLayout_2.setWidget(1, QFormLayout.ItemRole.LabelRole, self.label)

        self.editorCreationTime = QDateTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorCreationTime.setObjectName(u"editorCreationTime")
        self.editorCreationTime.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.editorCreationTime.setKeyboardTracking(False)

        self.formLayout_2.setWidget(1, QFormLayout.ItemRole.FieldRole, self.editorCreationTime)

        self.label_6 = QLabel(self.scrollAreaWidgetContents_4)
        self.label_6.setObjectName(u"label_6")

        self.formLayout_2.setWidget(2, QFormLayout.ItemRole.LabelRole, self.label_6)

        self.editorEditTime = QDateTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorEditTime.setObjectName(u"editorEditTime")
        self.editorEditTime.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.editorEditTime.setReadOnly(True)
        self.editorEditTime.setKeyboardTracking(False)

        self.formLayout_2.setWidget(2, QFormLayout.ItemRole.FieldRole, self.editorEditTime)

        self.label_4 = QLabel(self.scrollAreaWidgetContents_4)
        self.label_4.setObjectName(u"label_4")

        self.formLayout_2.setWidget(3, QFormLayout.ItemRole.LabelRole, self.label_4)

        self.editorAudioStart = QTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorAudioStart.setObjectName(u"editorAudioStart")
        self.editorAudioStart.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.editorAudioStart.setKeyboardTracking(False)
        self.editorAudioStart.setCurrentSection(QDateTimeEdit.Section.HourSection)

        self.formLayout_2.setWidget(3, QFormLayout.ItemRole.FieldRole, self.editorAudioStart)

        self.label_5 = QLabel(self.scrollAreaWidgetContents_4)
        self.label_5.setObjectName(u"label_5")

        self.formLayout_2.setWidget(4, QFormLayout.ItemRole.LabelRole, self.label_5)

        self.editorAudioEnd = QTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorAudioEnd.setObjectName(u"editorAudioEnd")
        self.editorAudioEnd.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.editorAudioEnd.setKeyboardTracking(False)

        self.formLayout_2.setWidget(4, QFormLayout.ItemRole.FieldRole, self.editorAudioEnd)

        self.label_7 = QLabel(self.scrollAreaWidgetContents_4)
        self.label_7.setObjectName(u"label_7")

        self.formLayout_2.setWidget(5, QFormLayout.ItemRole.LabelRole, self.label_7)

        self.editorNotes = QLineEdit(self.scrollAreaWidgetContents_4)
        self.editorNotes.setObjectName(u"editorNotes")
        self.editorNotes.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.formLayout_2.setWidget(5, QFormLayout.ItemRole.FieldRole, self.editorNotes)


        self.verticalLayout_32.addLayout(self.formLayout_2)

        self.submitEdited = QPushButton(self.scrollAreaWidgetContents_4)
        self.submitEdited.setObjectName(u"submitEdited")
        self.submitEdited.setEnabled(False)
        self.submitEdited.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_32.addWidget(self.submitEdited)

        self.verticalSpacer_7 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_32.addItem(self.verticalSpacer_7)

        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_4)

        self.verticalLayout_31.addWidget(self.scrollArea_4)

        self.tabWidget.addTab(self.paragraph_pane, icon27, "")
        self.spellcheck_pane = QWidget()
        self.spellcheck_pane.setObjectName(u"spellcheck_pane")
        self.verticalLayout_35 = QVBoxLayout(self.spellcheck_pane)
        self.verticalLayout_35.setObjectName(u"verticalLayout_35")
        self.scrollArea_6 = QScrollArea(self.spellcheck_pane)
        self.scrollArea_6.setObjectName(u"scrollArea_6")
        self.scrollArea_6.setWidgetResizable(True)
        self.scrollAreaWidgetContents_6 = QWidget()
        self.scrollAreaWidgetContents_6.setObjectName(u"scrollAreaWidgetContents_6")
        self.scrollAreaWidgetContents_6.setGeometry(QRect(0, 0, 363, 247))
        self.verticalLayout_36 = QVBoxLayout(self.scrollAreaWidgetContents_6)
        self.verticalLayout_36.setObjectName(u"verticalLayout_36")
        self.horizontalLayout_10 = QHBoxLayout()
        self.horizontalLayout_10.setObjectName(u"horizontalLayout_10")
        self.verticalLayout_18 = QVBoxLayout()
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.dict_selection = QComboBox(self.scrollAreaWidgetContents_6)
        self.dict_selection.setObjectName(u"dict_selection")

        self.verticalLayout_18.addWidget(self.dict_selection)

        self.spell_search = QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_search.setObjectName(u"spell_search")
        self.spell_search.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_18.addWidget(self.spell_search)

        self.spell_skip = QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_skip.setObjectName(u"spell_skip")
        self.spell_skip.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_18.addWidget(self.spell_skip)

        self.spell_ignore_all = QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_ignore_all.setObjectName(u"spell_ignore_all")
        self.spell_ignore_all.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_18.addWidget(self.spell_ignore_all)

        self.spell_change = QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_change.setObjectName(u"spell_change")
        self.spell_change.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_18.addWidget(self.spell_change)

        self.verticalSpacer_4 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_18.addItem(self.verticalSpacer_4)


        self.horizontalLayout_10.addLayout(self.verticalLayout_18)

        self.verticalLayout_19 = QVBoxLayout()
        self.verticalLayout_19.setObjectName(u"verticalLayout_19")
        self.horizontalLayout_11 = QHBoxLayout()
        self.horizontalLayout_11.setObjectName(u"horizontalLayout_11")
        self.label_21 = QLabel(self.scrollAreaWidgetContents_6)
        self.label_21.setObjectName(u"label_21")

        self.horizontalLayout_11.addWidget(self.label_21)

        self.spellcheck_result = QLineEdit(self.scrollAreaWidgetContents_6)
        self.spellcheck_result.setObjectName(u"spellcheck_result")

        self.horizontalLayout_11.addWidget(self.spellcheck_result)


        self.verticalLayout_19.addLayout(self.horizontalLayout_11)

        self.spellcheck_suggestions = QListWidget(self.scrollAreaWidgetContents_6)
        self.spellcheck_suggestions.setObjectName(u"spellcheck_suggestions")
        self.spellcheck_suggestions.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.spellcheck_suggestions.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.spellcheck_suggestions.setEditTriggers(QAbstractItemView.EditTrigger.DoubleClicked)
        self.spellcheck_suggestions.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectColumns)

        self.verticalLayout_19.addWidget(self.spellcheck_suggestions)


        self.horizontalLayout_10.addLayout(self.verticalLayout_19)


        self.verticalLayout_36.addLayout(self.horizontalLayout_10)

        self.scrollArea_6.setWidget(self.scrollAreaWidgetContents_6)

        self.verticalLayout_35.addWidget(self.scrollArea_6)

        self.tabWidget.addTab(self.spellcheck_pane, icon31, "")
        self.stenospell_pane = QWidget()
        self.stenospell_pane.setObjectName(u"stenospell_pane")
        self.horizontalLayout_14 = QHBoxLayout(self.stenospell_pane)
        self.horizontalLayout_14.setObjectName(u"horizontalLayout_14")
        self.scrollArea_7 = QScrollArea(self.stenospell_pane)
        self.scrollArea_7.setObjectName(u"scrollArea_7")
        self.scrollArea_7.setWidgetResizable(True)
        self.scrollAreaWidgetContents_7 = QWidget()
        self.scrollAreaWidgetContents_7.setObjectName(u"scrollAreaWidgetContents_7")
        self.scrollAreaWidgetContents_7.setGeometry(QRect(0, 0, 363, 247))
        self.verticalLayout_3 = QVBoxLayout(self.scrollAreaWidgetContents_7)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.horizontalLayout_16 = QHBoxLayout()
        self.horizontalLayout_16.setObjectName(u"horizontalLayout_16")
        self.label_40 = QLabel(self.scrollAreaWidgetContents_7)
        self.label_40.setObjectName(u"label_40")

        self.horizontalLayout_16.addWidget(self.label_40)

        self.steno_outline = QLineEdit(self.scrollAreaWidgetContents_7)
        self.steno_outline.setObjectName(u"steno_outline")
        self.steno_outline.setFocusPolicy(Qt.FocusPolicy.ClickFocus)

        self.horizontalLayout_16.addWidget(self.steno_outline)

        self.steno_spellcheck = QPushButton(self.scrollAreaWidgetContents_7)
        self.steno_spellcheck.setObjectName(u"steno_spellcheck")
        self.steno_spellcheck.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.horizontalLayout_16.addWidget(self.steno_spellcheck)


        self.verticalLayout_3.addLayout(self.horizontalLayout_16)

        self.stenospell_res = QListWidget(self.scrollAreaWidgetContents_7)
        self.stenospell_res.setObjectName(u"stenospell_res")
        self.stenospell_res.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.verticalLayout_3.addWidget(self.stenospell_res)

        self.scrollArea_7.setWidget(self.scrollAreaWidgetContents_7)

        self.horizontalLayout_14.addWidget(self.scrollArea_7)

        self.tabWidget.addTab(self.stenospell_pane, icon32, "")
        self.tts_pane = QWidget()
        self.tts_pane.setObjectName(u"tts_pane")
        self.tts_pane.setEnabled(False)
        self.verticalLayout_8 = QVBoxLayout(self.tts_pane)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.tts_settings_group = QGroupBox(self.tts_pane)
        self.tts_settings_group.setObjectName(u"tts_settings_group")
        self.tts_settings_group.setEnabled(False)
        self.verticalLayout_9 = QVBoxLayout(self.tts_settings_group)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.formLayout = QFormLayout()
        self.formLayout.setObjectName(u"formLayout")
        self.tts_locale = QComboBox(self.tts_settings_group)
        self.tts_locale.setObjectName(u"tts_locale")

        self.formLayout.setWidget(1, QFormLayout.ItemRole.FieldRole, self.tts_locale)

        self.label_16 = QLabel(self.tts_settings_group)
        self.label_16.setObjectName(u"label_16")

        self.formLayout.setWidget(1, QFormLayout.ItemRole.LabelRole, self.label_16)

        self.label_17 = QLabel(self.tts_settings_group)
        self.label_17.setObjectName(u"label_17")

        self.formLayout.setWidget(2, QFormLayout.ItemRole.LabelRole, self.label_17)

        self.tts_voice = QComboBox(self.tts_settings_group)
        self.tts_voice.setObjectName(u"tts_voice")

        self.formLayout.setWidget(2, QFormLayout.ItemRole.FieldRole, self.tts_voice)

        self.label_18 = QLabel(self.tts_settings_group)
        self.label_18.setObjectName(u"label_18")

        self.formLayout.setWidget(0, QFormLayout.ItemRole.LabelRole, self.label_18)

        self.tts_engine = QComboBox(self.tts_settings_group)
        self.tts_engine.setObjectName(u"tts_engine")

        self.formLayout.setWidget(0, QFormLayout.ItemRole.FieldRole, self.tts_engine)

        self.label_19 = QLabel(self.tts_settings_group)
        self.label_19.setObjectName(u"label_19")

        self.formLayout.setWidget(3, QFormLayout.ItemRole.LabelRole, self.label_19)

        self.tts_volume = QSlider(self.tts_settings_group)
        self.tts_volume.setObjectName(u"tts_volume")
        self.tts_volume.setMinimum(0)
        self.tts_volume.setMaximum(10)
        self.tts_volume.setValue(7)
        self.tts_volume.setSliderPosition(7)
        self.tts_volume.setOrientation(Qt.Orientation.Horizontal)

        self.formLayout.setWidget(3, QFormLayout.ItemRole.FieldRole, self.tts_volume)

        self.label_20 = QLabel(self.tts_settings_group)
        self.label_20.setObjectName(u"label_20")

        self.formLayout.setWidget(4, QFormLayout.ItemRole.LabelRole, self.label_20)

        self.tts_rate = QSlider(self.tts_settings_group)
        self.tts_rate.setObjectName(u"tts_rate")
        self.tts_rate.setMinimum(-10)
        self.tts_rate.setMaximum(10)
        self.tts_rate.setOrientation(Qt.Orientation.Horizontal)

        self.formLayout.setWidget(4, QFormLayout.ItemRole.FieldRole, self.tts_rate)

        self.label_22 = QLabel(self.tts_settings_group)
        self.label_22.setObjectName(u"label_22")

        self.formLayout.setWidget(5, QFormLayout.ItemRole.LabelRole, self.label_22)

        self.tts_pitch = QSlider(self.tts_settings_group)
        self.tts_pitch.setObjectName(u"tts_pitch")
        self.tts_pitch.setMinimum(-10)
        self.tts_pitch.setMaximum(10)
        self.tts_pitch.setOrientation(Qt.Orientation.Horizontal)

        self.formLayout.setWidget(5, QFormLayout.ItemRole.FieldRole, self.tts_pitch)


        self.verticalLayout_9.addLayout(self.formLayout)


        self.verticalLayout_8.addWidget(self.tts_settings_group)

        self.horizontalLayout_19 = QHBoxLayout()
        self.horizontalLayout_19.setObjectName(u"horizontalLayout_19")
        self.tts_play = QPushButton(self.tts_pane)
        self.tts_play.setObjectName(u"tts_play")

        self.horizontalLayout_19.addWidget(self.tts_play)

        self.tts_pause = QPushButton(self.tts_pane)
        self.tts_pause.setObjectName(u"tts_pause")

        self.horizontalLayout_19.addWidget(self.tts_pause)

        self.tts_resume = QPushButton(self.tts_pane)
        self.tts_resume.setObjectName(u"tts_resume")

        self.horizontalLayout_19.addWidget(self.tts_resume)

        self.tts_stop = QPushButton(self.tts_pane)
        self.tts_stop.setObjectName(u"tts_stop")

        self.horizontalLayout_19.addWidget(self.tts_stop)


        self.verticalLayout_8.addLayout(self.horizontalLayout_19)

        self.tabWidget.addTab(self.tts_pane, "")

        self.verticalLayout.addWidget(self.tabWidget)

        self.dockProp.setWidget(self.dockWidgetContents_5)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.dockProp)
        self.toolbarSteno = QToolBar(PloverCAT)
        self.toolbarSteno.setObjectName(u"toolbarSteno")
        PloverCAT.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolbarSteno)
        self.toolbarAudio = QToolBar(PloverCAT)
        self.toolbarAudio.setObjectName(u"toolbarAudio")
        PloverCAT.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolbarAudio)
        self.dockHistoryStack = QDockWidget(PloverCAT)
        self.dockHistoryStack.setObjectName(u"dockHistoryStack")
        self.dockHistoryStack.setMinimumSize(QSize(100, 210))
        self.dockHistoryStack.setFont(font)
        self.dockWidgetContents_6 = QWidget()
        self.dockWidgetContents_6.setObjectName(u"dockWidgetContents_6")
        self.horizontalLayout_6 = QHBoxLayout(self.dockWidgetContents_6)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.verticalLayout_17 = QVBoxLayout()
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.undoView = QUndoView(self.dockWidgetContents_6)
        self.undoView.setObjectName(u"undoView")
        self.undoView.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.undoView.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)

        self.verticalLayout_17.addWidget(self.undoView)


        self.horizontalLayout_6.addLayout(self.verticalLayout_17)

        self.dockHistoryStack.setWidget(self.dockWidgetContents_6)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, self.dockHistoryStack)
        self.dockStenoData = QDockWidget(PloverCAT)
        self.dockStenoData.setObjectName(u"dockStenoData")
        self.dockStenoData.setMinimumSize(QSize(127, 113))
        self.dockWidgetContents_7 = QWidget()
        self.dockWidgetContents_7.setObjectName(u"dockWidgetContents_7")
        self.horizontalLayout_8 = QHBoxLayout(self.dockWidgetContents_7)
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.parSteno = QListWidget(self.dockWidgetContents_7)
        self.parSteno.setObjectName(u"parSteno")
        self.parSteno.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.parSteno.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.parSteno.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.parSteno.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.parSteno.setAlternatingRowColors(True)
        self.parSteno.setFlow(QListView.Flow.LeftToRight)
        self.parSteno.setProperty(u"isWrapping", True)
        self.parSteno.setItemAlignment(Qt.AlignmentFlag.AlignLeading)

        self.horizontalLayout_8.addWidget(self.parSteno)

        self.verticalLayout_22 = QVBoxLayout()
        self.verticalLayout_22.setObjectName(u"verticalLayout_22")
        self.downgradeRevealStenoEl = QPushButton(self.dockWidgetContents_7)
        self.downgradeRevealStenoEl.setObjectName(u"downgradeRevealStenoEl")
        self.downgradeRevealStenoEl.setEnabled(False)
        icon44 = QIcon()
        icon44.addFile(u":/resources/arrow-270-medium.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.downgradeRevealStenoEl.setIcon(icon44)

        self.verticalLayout_22.addWidget(self.downgradeRevealStenoEl)

        self.reveal_steno_refresh = QPushButton(self.dockWidgetContents_7)
        self.reveal_steno_refresh.setObjectName(u"reveal_steno_refresh")
        self.reveal_steno_refresh.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        icon45 = QIcon()
        icon45.addFile(u":/resources/arrow-circle-double-135.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.reveal_steno_refresh.setIcon(icon45)

        self.verticalLayout_22.addWidget(self.reveal_steno_refresh)


        self.horizontalLayout_8.addLayout(self.verticalLayout_22)

        self.dockStenoData.setWidget(self.dockWidgetContents_7)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.BottomDockWidgetArea, self.dockStenoData)
        self.toolbarEdit = QToolBar(PloverCAT)
        self.toolbarEdit.setObjectName(u"toolbarEdit")
        PloverCAT.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolbarEdit)
        self.dockNavigation = QDockWidget(PloverCAT)
        self.dockNavigation.setObjectName(u"dockNavigation")
        self.dockNavigation.setMinimumSize(QSize(100, 113))
        self.dockWidgetContents_2 = QWidget()
        self.dockWidgetContents_2.setObjectName(u"dockWidgetContents_2")
        self.verticalLayout_12 = QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.navigationList = QListWidget(self.dockWidgetContents_2)
        self.navigationList.setObjectName(u"navigationList")
        self.navigationList.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.navigationList.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.navigationList.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.navigationList.setTextElideMode(Qt.TextElideMode.ElideRight)

        self.verticalLayout_12.addWidget(self.navigationList)

        self.dockNavigation.setWidget(self.dockWidgetContents_2)
        PloverCAT.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.dockNavigation)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuSteno_Actions.menuAction())
        self.menubar.addAction(self.menuInsert.menuAction())
        self.menubar.addAction(self.menuAudio.menuAction())
        self.menubar.addAction(self.menuStyling.menuAction())
        self.menubar.addAction(self.menuDictionary.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuRecentFiles.menuAction())
        self.menuFile.addAction(self.actionImportRTF)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addAction(self.menuExport_as.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpenTranscriptFolder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionQuit)
        self.menuExport_as.addAction(self.actionPlainText)
        self.menuExport_as.addAction(self.actionPlainASCII)
        self.menuExport_as.addAction(self.actionASCII)
        self.menuExport_as.addAction(self.actionHTML)
        self.menuExport_as.addAction(self.actionSubRip)
        self.menuExport_as.addAction(self.actionODT)
        self.menuExport_as.addAction(self.actionRTF)
        self.menuExport_as.addAction(self.actionTape)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionNormalCopy)
        self.menuEdit.addAction(self.menuClipboard.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionJumpToParagraph)
        self.menuEdit.addAction(self.actionClearParagraph)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionEnableAutosave)
        self.menuEdit.addAction(self.actionSetAutosaveTime)
        self.menuEdit.addAction(self.actionRevertTranscript)
        self.menuAudio.addAction(self.actionOpenAudio)
        self.menuAudio.addAction(self.actionPlayPause)
        self.menuAudio.addAction(self.actionStopAudio)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionSkipForward)
        self.menuAudio.addAction(self.actionSkipBack)
        self.menuAudio.addAction(self.actionSpeedUp)
        self.menuAudio.addAction(self.actionSlowDown)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionShowVideo)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionRecordPause)
        self.menuAudio.addAction(self.actionStopRecording)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionCaptioning)
        self.menuAudio.addAction(self.actionFlushCaption)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionAddChangeAudioTimestamps)
        self.menuView.addAction(self.actionShowAllCharacters)
        self.menuView.addAction(self.actionWindowFont)
        self.menuView.addAction(self.actionBackgroundColor)
        self.menuView.addAction(self.menuHighlightColors.menuAction())
        self.menuView.addAction(self.actionPaperTapeFont)
        self.menuView.addAction(self.menuDocks.menuAction())
        self.menuView.addAction(self.actionEditMenuShortcuts)
        self.menuDocks.addAction(self.actionPaperTape)
        self.menuDocks.addAction(self.actionSuggestions)
        self.menuDocks.addAction(self.actionHistory)
        self.menuDocks.addAction(self.actionRevealSteno)
        self.menuDocks.addAction(self.actionAudioControls)
        self.menuDocks.addAction(self.actionToolbox)
        self.menuDocks.addAction(self.actionNavigation)
        self.menuDictionary.addAction(self.actionAddCustomDict)
        self.menuDictionary.addAction(self.actionRemoveTranscriptDict)
        self.menuDictionary.addAction(self.actionTranscriptSuggestions)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionUserManual)
        self.menuHelp.addAction(self.actionAcknowledgements)
        self.menuHelp.addAction(self.menuDiagnostics.menuAction())
        self.menuDiagnostics.addAction(self.actionViewPloverLog)
        self.menuDiagnostics.addAction(self.actionRunTests)
        self.menuSteno_Actions.addAction(self.actionMergeParagraphs)
        self.menuSteno_Actions.addAction(self.actionSplitParagraph)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionAutocompletion)
        self.menuSteno_Actions.addAction(self.actionAddAutocompletionTerm)
        self.menuSteno_Actions.addAction(self.actionRetroactiveDefine)
        self.menuSteno_Actions.addAction(self.actionDefineLast)
        self.menuSteno_Actions.addAction(self.actionDeleteLast)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionCursorAtEnd)
        self.menuSteno_Actions.addAction(self.actionCaptureAllOutput)
        self.menuSteno_Actions.addAction(self.actionTranslateTape)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionMassTimestampChange)
        self.menuStyling.addAction(self.actionStyleFileSelect)
        self.menuStyling.addAction(self.actionCreateNewStyle)
        self.menuStyling.addAction(self.actionGenerateStyleFromTemplate)
        self.menuStyling.addAction(self.menuParagraphStyle.menuAction())
        self.menuStyling.addAction(self.actionRefreshEditor)
        self.menuStyling.addSeparator()
        self.menuStyling.addAction(self.actionAutomaticAffixes)
        self.menuStyling.addAction(self.actionEditAffixes)
        self.menuInsert.addAction(self.menuField.menuAction())
        self.menuInsert.addAction(self.menuIndexEntry.menuAction())
        self.menuInsert.addAction(self.actionInsertImage)
        self.menuInsert.addAction(self.actionInsertNormalText)
        self.menuInsert.addAction(self.actionRedact)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionEditFields)
        self.menuInsert.addAction(self.actionEditIndices)
        self.menuTools.addAction(self.actionStyling)
        self.menuTools.addAction(self.actionPageFormat)
        self.menuTools.addAction(self.actionFindReplacePane)
        self.menuTools.addAction(self.actionParagraph)
        self.menuTools.addAction(self.actionSpellcheck)
        self.menuTools.addAction(self.actionStenoSearch)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionSearchWikipedia)
        self.menuTools.addAction(self.actionSearchMerriamWebster)
        self.menuTools.addAction(self.actionSearchOED)
        self.menuTools.addAction(self.actionSearchGoogle)
        self.menuTools.addAction(self.actionSearchDuckDuckGo)
        self.toolbarFile.addAction(self.actionNew)
        self.toolbarFile.addAction(self.actionOpen)
        self.toolbarFile.addAction(self.actionSave)
        self.toolbarSteno.addAction(self.actionAddCustomDict)
        self.toolbarSteno.addAction(self.actionMergeParagraphs)
        self.toolbarSteno.addAction(self.actionSplitParagraph)
        self.toolbarSteno.addAction(self.actionAddAutocompletionTerm)
        self.toolbarSteno.addAction(self.actionRetroactiveDefine)
        self.toolbarSteno.addAction(self.actionDefineLast)
        self.toolbarAudio.addAction(self.actionPlayPause)
        self.toolbarAudio.addAction(self.actionStopAudio)
        self.toolbarAudio.addAction(self.actionRecordPause)
        self.toolbarEdit.addAction(self.actionCut)
        self.toolbarEdit.addAction(self.actionCopy)
        self.toolbarEdit.addAction(self.actionPaste)
        self.toolbarEdit.addAction(self.actionInsertNormalText)

        self.retranslateUi(PloverCAT)
        self.actionSpeedUp.triggered.connect(self.playRate.stepUp)
        self.actionSlowDown.triggered.connect(self.playRate.stepDown)
        self.actionPaperTape.triggered["bool"].connect(self.dockPaper.setVisible)
        self.actionSuggestions.triggered["bool"].connect(self.dockSuggest.setVisible)
        self.actionHistory.triggered["bool"].connect(self.dockHistoryStack.setVisible)
        self.actionRevealSteno.triggered["bool"].connect(self.dockStenoData.setVisible)
        self.actionAudioControls.triggered["bool"].connect(self.dockAudio.setVisible)
        self.actionToolbox.triggered["bool"].connect(self.dockProp.setVisible)
        self.dockAudio.visibilityChanged.connect(self.actionAudioControls.setChecked)
        self.dockHistoryStack.visibilityChanged.connect(self.actionHistory.setChecked)
        self.dockPaper.visibilityChanged.connect(self.actionPaperTape.setChecked)
        self.dockProp.visibilityChanged.connect(self.actionToolbox.setChecked)
        self.dockStenoData.visibilityChanged.connect(self.actionRevealSteno.setChecked)
        self.dockSuggest.visibilityChanged.connect(self.actionSuggestions.setChecked)
        self.actionNavigation.triggered["bool"].connect(self.dockNavigation.setVisible)
        self.actionAutomaticAffixes.toggled.connect(self.actionEditAffixes.setEnabled)

        self.mainTabs.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(5)


        QMetaObject.connectSlotsByName(PloverCAT)
    # setupUi

    def retranslateUi(self, PloverCAT):
        PloverCAT.setWindowTitle(QCoreApplication.translate("PloverCAT", u"MainWindow", None))
        self.actionOpen.setText(QCoreApplication.translate("PloverCAT", u"Open...", None))
#if QT_CONFIG(tooltip)
        self.actionOpen.setToolTip(QCoreApplication.translate("PloverCAT", u"Open existing transcript folder", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOpen.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSaveAs.setText(QCoreApplication.translate("PloverCAT", u"Save Transcript Data at...", None))
#if QT_CONFIG(tooltip)
        self.actionSaveAs.setToolTip(QCoreApplication.translate("PloverCAT", u"Save transcript data to another location", None))
#endif // QT_CONFIG(tooltip)
        self.actionNew.setText(QCoreApplication.translate("PloverCAT", u"New", None))
#if QT_CONFIG(tooltip)
        self.actionNew.setToolTip(QCoreApplication.translate("PloverCAT", u"Create new transcript", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionNew.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("PloverCAT", u"Save", None))
#if QT_CONFIG(tooltip)
        self.actionSave.setToolTip(QCoreApplication.translate("PloverCAT", u"Save transcript and paper tape contents", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionQuit.setText(QCoreApplication.translate("PloverCAT", u"Quit", None))
#if QT_CONFIG(tooltip)
        self.actionQuit.setToolTip(QCoreApplication.translate("PloverCAT", u"Exit the editor", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionQuit.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionClose.setText(QCoreApplication.translate("PloverCAT", u"Close", None))
#if QT_CONFIG(tooltip)
        self.actionClose.setToolTip(QCoreApplication.translate("PloverCAT", u"Close the transcript", None))
#endif // QT_CONFIG(tooltip)
        self.actionAddCustomDict.setText(QCoreApplication.translate("PloverCAT", u"Add Custom Dict", None))
#if QT_CONFIG(tooltip)
        self.actionAddCustomDict.setToolTip(QCoreApplication.translate("PloverCAT", u"Select a custom dictionary to use for the transcript", None))
#endif // QT_CONFIG(tooltip)
        self.actionPlainText.setText(QCoreApplication.translate("PloverCAT", u"Plain Text (.txt)", None))
#if QT_CONFIG(tooltip)
        self.actionPlainText.setToolTip(QCoreApplication.translate("PloverCAT", u"Export only the text from the transcript", None))
#endif // QT_CONFIG(tooltip)
        self.actionASCII.setText(QCoreApplication.translate("PloverCAT", u"ASCII (.txt)", None))
#if QT_CONFIG(tooltip)
        self.actionASCII.setToolTip(QCoreApplication.translate("PloverCAT", u"Export transcript in ASCII transcript format", None))
#endif // QT_CONFIG(tooltip)
        self.actionSubRip.setText(QCoreApplication.translate("PloverCAT", u"SubRip (.srt)", None))
#if QT_CONFIG(tooltip)
        self.actionSubRip.setToolTip(QCoreApplication.translate("PloverCAT", u"Export transcript as a SubRip caption file", None))
#endif // QT_CONFIG(tooltip)
        self.actionCut.setText(QCoreApplication.translate("PloverCAT", u"Cut", None))
#if QT_CONFIG(tooltip)
        self.actionCut.setToolTip(QCoreApplication.translate("PloverCAT", u"Cut text and associated steno data", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionCut.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.actionCopy.setText(QCoreApplication.translate("PloverCAT", u"Copy", None))
#if QT_CONFIG(tooltip)
        self.actionCopy.setToolTip(QCoreApplication.translate("PloverCAT", u"Copy text and associated steno data", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionCopy.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionPaste.setText(QCoreApplication.translate("PloverCAT", u"Paste", None))
#if QT_CONFIG(tooltip)
        self.actionPaste.setToolTip(QCoreApplication.translate("PloverCAT", u"Paste text and associated steno data", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPaste.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionOpenAudio.setText(QCoreApplication.translate("PloverCAT", u"Open Media", None))
#if QT_CONFIG(tooltip)
        self.actionOpenAudio.setToolTip(QCoreApplication.translate("PloverCAT", u"Select an audiovisual file on computer to play", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOpenAudio.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSkipBack.setText(QCoreApplication.translate("PloverCAT", u"Skip Back", None))
#if QT_CONFIG(tooltip)
        self.actionSkipBack.setToolTip(QCoreApplication.translate("PloverCAT", u"Skip back in audio/video", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSkipBack.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+J", None))
#endif // QT_CONFIG(shortcut)
        self.actionSkipForward.setText(QCoreApplication.translate("PloverCAT", u"Skip Forward", None))
#if QT_CONFIG(tooltip)
        self.actionSkipForward.setToolTip(QCoreApplication.translate("PloverCAT", u"Skip forward in audio/video", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSkipForward.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+L", None))
#endif // QT_CONFIG(shortcut)
        self.actionStopAudio.setText(QCoreApplication.translate("PloverCAT", u"Stop", None))
#if QT_CONFIG(tooltip)
        self.actionStopAudio.setToolTip(QCoreApplication.translate("PloverCAT", u"Stop selected audio/video being played", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionStopAudio.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.actionSlowDown.setText(QCoreApplication.translate("PloverCAT", u"Slow Down", None))
#if QT_CONFIG(tooltip)
        self.actionSlowDown.setToolTip(QCoreApplication.translate("PloverCAT", u"Slow down playback", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSlowDown.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionSpeedUp.setText(QCoreApplication.translate("PloverCAT", u"Speed Up", None))
#if QT_CONFIG(tooltip)
        self.actionSpeedUp.setToolTip(QCoreApplication.translate("PloverCAT", u"Speed up playback", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSpeedUp.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+G", None))
#endif // QT_CONFIG(shortcut)
        self.actionPlayPause.setText(QCoreApplication.translate("PloverCAT", u"Play/Pause", None))
#if QT_CONFIG(tooltip)
        self.actionPlayPause.setToolTip(QCoreApplication.translate("PloverCAT", u"Play or pause selected audio/video", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPlayPause.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionMergeParagraphs.setText(QCoreApplication.translate("PloverCAT", u"Merge Paragraphs", None))
#if QT_CONFIG(tooltip)
        self.actionMergeParagraphs.setToolTip(QCoreApplication.translate("PloverCAT", u"Merge two paragraphs by selecting across two paragraphs, or place cursor in second of paragraphs to merge", None))
#endif // QT_CONFIG(tooltip)
        self.actionSplitParagraph.setText(QCoreApplication.translate("PloverCAT", u"Split Paragraph", None))
#if QT_CONFIG(tooltip)
        self.actionSplitParagraph.setToolTip(QCoreApplication.translate("PloverCAT", u"Split paragraph by placing cursor at position to split", None))
#endif // QT_CONFIG(tooltip)
        self.actionWindowFont.setText(QCoreApplication.translate("PloverCAT", u"Window Font", None))
#if QT_CONFIG(tooltip)
        self.actionWindowFont.setToolTip(QCoreApplication.translate("PloverCAT", u"Set font and size for window", None))
#endif // QT_CONFIG(tooltip)
        self.actionODT.setText(QCoreApplication.translate("PloverCAT", u"OpenDocumentText(.odt)", None))
#if QT_CONFIG(tooltip)
        self.actionODT.setToolTip(QCoreApplication.translate("PloverCAT", u"Export transcript as OpenDocumentText", None))
#endif // QT_CONFIG(tooltip)
        self.actionNormalCopy.setText(QCoreApplication.translate("PloverCAT", u"Normal Copy", None))
#if QT_CONFIG(tooltip)
        self.actionNormalCopy.setToolTip(QCoreApplication.translate("PloverCAT", u"Copy the text, but not steno data, for use in other applications", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionNormalCopy.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionFindReplacePane.setText(QCoreApplication.translate("PloverCAT", u"Find/Replace", None))
#if QT_CONFIG(tooltip)
        self.actionFindReplacePane.setToolTip(QCoreApplication.translate("PloverCAT", u"Open Find/Replace Pane if hidden", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionFindReplacePane.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+F", None))
#endif // QT_CONFIG(shortcut)
        self.actionOpenTranscriptFolder.setText(QCoreApplication.translate("PloverCAT", u"Open Transcript Folder", None))
#if QT_CONFIG(tooltip)
        self.actionOpenTranscriptFolder.setToolTip(QCoreApplication.translate("PloverCAT", u"Open the transcript folder in the system file explorer", None))
#endif // QT_CONFIG(tooltip)
        self.actionRecordPause.setText(QCoreApplication.translate("PloverCAT", u"Record/Pause", None))
#if QT_CONFIG(tooltip)
        self.actionRecordPause.setToolTip(QCoreApplication.translate("PloverCAT", u"Start or pause the recording of audio", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionRecordPause.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionStopRecording.setText(QCoreApplication.translate("PloverCAT", u"Stop Recording", None))
#if QT_CONFIG(tooltip)
        self.actionStopRecording.setToolTip(QCoreApplication.translate("PloverCAT", u"Stop recording audio", None))
#endif // QT_CONFIG(tooltip)
        self.actionShowVideo.setText(QCoreApplication.translate("PloverCAT", u"Show/Hide Video", None))
#if QT_CONFIG(tooltip)
        self.actionShowVideo.setToolTip(QCoreApplication.translate("PloverCAT", u"Display or hide video window", None))
#endif // QT_CONFIG(tooltip)
        self.actionRemoveTranscriptDict.setText(QCoreApplication.translate("PloverCAT", u"Remove Transcript Dict", None))
#if QT_CONFIG(tooltip)
        self.actionRemoveTranscriptDict.setToolTip(QCoreApplication.translate("PloverCAT", u"Remove a transcript dictionary", None))
#endif // QT_CONFIG(tooltip)
        self.actionImportRTF.setText(QCoreApplication.translate("PloverCAT", u"Import RTF/CRE", None))
#if QT_CONFIG(tooltip)
        self.actionImportRTF.setToolTip(QCoreApplication.translate("PloverCAT", u"Import RTF file as a transcript", None))
#endif // QT_CONFIG(tooltip)
        self.actionCursorAtEnd.setText(QCoreApplication.translate("PloverCAT", u"Lock Cursor At End", None))
#if QT_CONFIG(tooltip)
        self.actionCursorAtEnd.setToolTip(QCoreApplication.translate("PloverCAT", u"Keep cursor at end of document for writing", None))
#endif // QT_CONFIG(tooltip)
        self.actionCaptureAllOutput.setText(QCoreApplication.translate("PloverCAT", u"Capture All Steno Output", None))
#if QT_CONFIG(tooltip)
        self.actionCaptureAllOutput.setToolTip(QCoreApplication.translate("PloverCAT", u"Record steno output even if window is not in focus", None))
#endif // QT_CONFIG(tooltip)
        self.actionUserManual.setText(QCoreApplication.translate("PloverCAT", u"Online User Manual", None))
#if QT_CONFIG(tooltip)
        self.actionUserManual.setToolTip(QCoreApplication.translate("PloverCAT", u"Open online user manual on GitHub", None))
#endif // QT_CONFIG(tooltip)
        self.actionAcknowledgements.setText(QCoreApplication.translate("PloverCAT", u"Acknowledgements", None))
        self.actionPaperTape.setText(QCoreApplication.translate("PloverCAT", u"Paper Tape", None))
        self.actionSuggestions.setText(QCoreApplication.translate("PloverCAT", u"Suggestions", None))
        self.actionHistory.setText(QCoreApplication.translate("PloverCAT", u"History", None))
        self.actionRevealSteno.setText(QCoreApplication.translate("PloverCAT", u"Reveal Steno", None))
        self.actionAudioControls.setText(QCoreApplication.translate("PloverCAT", u"Audio Controls", None))
        self.actionToolbox.setText(QCoreApplication.translate("PloverCAT", u"Toolbox", None))
        self.actionClearParagraph.setText(QCoreApplication.translate("PloverCAT", u"Reset Paragraph", None))
#if QT_CONFIG(tooltip)
        self.actionClearParagraph.setToolTip(QCoreApplication.translate("PloverCAT", u"Reset paragraph by clearing all data and text", None))
#endif // QT_CONFIG(tooltip)
        self.actionRetroactiveDefine.setText(QCoreApplication.translate("PloverCAT", u"Retroactive Define", None))
#if QT_CONFIG(tooltip)
        self.actionRetroactiveDefine.setToolTip(QCoreApplication.translate("PloverCAT", u"Set new translation for strokes under selected text, replaces all occurrences of text", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionRetroactiveDefine.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionDefineLast.setText(QCoreApplication.translate("PloverCAT", u"Define Last Untrans", None))
#if QT_CONFIG(tooltip)
        self.actionDefineLast.setToolTip(QCoreApplication.translate("PloverCAT", u"Scan to find last untranslate, and define it for past and future occurrences", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionDefineLast.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Shift+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionAbout.setText(QCoreApplication.translate("PloverCAT", u"About", None))
#if QT_CONFIG(tooltip)
        self.actionAbout.setToolTip(QCoreApplication.translate("PloverCAT", u"Show version information", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAbout.setShortcut(QCoreApplication.translate("PloverCAT", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.actionAutocompletion.setText(QCoreApplication.translate("PloverCAT", u"Autocompletion", None))
#if QT_CONFIG(tooltip)
        self.actionAutocompletion.setToolTip(QCoreApplication.translate("PloverCAT", u"Toggle to enable autocomplete", None))
#endif // QT_CONFIG(tooltip)
        self.actionPaperTapeFont.setText(QCoreApplication.translate("PloverCAT", u"Paper Tape Font", None))
#if QT_CONFIG(tooltip)
        self.actionPaperTapeFont.setToolTip(QCoreApplication.translate("PloverCAT", u"Set font for Paper Tape dock", None))
#endif // QT_CONFIG(tooltip)
        self.actionStyleFileSelect.setText(QCoreApplication.translate("PloverCAT", u"Select Style File...", None))
#if QT_CONFIG(tooltip)
        self.actionStyleFileSelect.setToolTip(QCoreApplication.translate("PloverCAT", u"Select style file (JSON or ODF)", None))
#endif // QT_CONFIG(tooltip)
        self.actionGenerateStyleFromTemplate.setText(QCoreApplication.translate("PloverCAT", u"Generate Style File From Template", None))
#if QT_CONFIG(tooltip)
        self.actionGenerateStyleFromTemplate.setToolTip(QCoreApplication.translate("PloverCAT", u"Select template file (ODT) and generate style json with supported formatting only.", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreateNewStyle.setText(QCoreApplication.translate("PloverCAT", u"Create New Style", None))
#if QT_CONFIG(tooltip)
        self.actionCreateNewStyle.setToolTip(QCoreApplication.translate("PloverCAT", u"Create new style based on existing style", None))
#endif // QT_CONFIG(tooltip)
        self.actionRefreshEditor.setText(QCoreApplication.translate("PloverCAT", u"Refresh Editor", None))
#if QT_CONFIG(tooltip)
        self.actionRefreshEditor.setToolTip(QCoreApplication.translate("PloverCAT", u"Refresh formatting for entire editor", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionRefreshEditor.setShortcut(QCoreApplication.translate("PloverCAT", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionInsertNormalText.setText(QCoreApplication.translate("PloverCAT", u"Normal Text", None))
#if QT_CONFIG(tooltip)
        self.actionInsertNormalText.setToolTip(QCoreApplication.translate("PloverCAT", u"Insert normal text through dialog", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionInsertNormalText.setShortcut(QCoreApplication.translate("PloverCAT", u"Ins", None))
#endif // QT_CONFIG(shortcut)
        self.actionShowAllCharacters.setText(QCoreApplication.translate("PloverCAT", u"Show All Characters", None))
#if QT_CONFIG(tooltip)
        self.actionShowAllCharacters.setToolTip(QCoreApplication.translate("PloverCAT", u"Show all characters, including invisible ones", None))
#endif // QT_CONFIG(tooltip)
        self.actionPlainASCII.setText(QCoreApplication.translate("PloverCAT", u"Plain ASCII (.txt)", None))
#if QT_CONFIG(tooltip)
        self.actionPlainASCII.setToolTip(QCoreApplication.translate("PloverCAT", u"Export transcript in simple ASCII transcript format with line numbers and page number, but no other formatting", None))
#endif // QT_CONFIG(tooltip)
        self.actionHTML.setText(QCoreApplication.translate("PloverCAT", u"HTML (.html)", None))
#if QT_CONFIG(tooltip)
        self.actionHTML.setToolTip(QCoreApplication.translate("PloverCAT", u"Export transcript as HTML", None))
#endif // QT_CONFIG(tooltip)
        self.actionAddAutocompletionTerm.setText(QCoreApplication.translate("PloverCAT", u"Add Autocompletion Term", None))
#if QT_CONFIG(tooltip)
        self.actionAddAutocompletionTerm.setToolTip(QCoreApplication.translate("PloverCAT", u"Store text to use in autocompletion", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAddAutocompletionTerm.setShortcut(QCoreApplication.translate("PloverCAT", u"Ctrl+Alt+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionJumpToParagraph.setText(QCoreApplication.translate("PloverCAT", u"Jump to Paragraph ...", None))
#if QT_CONFIG(tooltip)
        self.actionJumpToParagraph.setToolTip(QCoreApplication.translate("PloverCAT", u"Jump to paragraph by paragraph number", None))
#endif // QT_CONFIG(tooltip)
        self.actionTranslateTape.setText(QCoreApplication.translate("PloverCAT", u"Translate Tape", None))
#if QT_CONFIG(tooltip)
        self.actionTranslateTape.setToolTip(QCoreApplication.translate("PloverCAT", u"Import tape file to translate to editor", None))
#endif // QT_CONFIG(tooltip)
        self.actionRTF.setText(QCoreApplication.translate("PloverCAT", u"RTF/CRE (*.rtf)", None))
        self.actionInsertImage.setText(QCoreApplication.translate("PloverCAT", u"Image", None))
#if QT_CONFIG(tooltip)
        self.actionInsertImage.setToolTip(QCoreApplication.translate("PloverCAT", u"Insert image object", None))
#endif // QT_CONFIG(tooltip)
        self.actionBackgroundColor.setText(QCoreApplication.translate("PloverCAT", u"Background Color", None))
#if QT_CONFIG(tooltip)
        self.actionBackgroundColor.setToolTip(QCoreApplication.translate("PloverCAT", u"Set background color of editor window", None))
#endif // QT_CONFIG(tooltip)
        self.actionNavigation.setText(QCoreApplication.translate("PloverCAT", u"Navigation", None))
        self.actionDeleteLast.setText(QCoreApplication.translate("PloverCAT", u"Delete Last Untrans", None))
#if QT_CONFIG(tooltip)
        self.actionDeleteLast.setToolTip(QCoreApplication.translate("PloverCAT", u"Scan to find last untranslate, and delete it", None))
#endif // QT_CONFIG(tooltip)
        self.actionAutomaticAffixes.setText(QCoreApplication.translate("PloverCAT", u"Automatic Paragraph Affixes", None))
#if QT_CONFIG(tooltip)
        self.actionAutomaticAffixes.setToolTip(QCoreApplication.translate("PloverCAT", u"Automatically end paragraphs with appropriate punctuation for style.", None))
#endif // QT_CONFIG(tooltip)
        self.actionEditFields.setText(QCoreApplication.translate("PloverCAT", u"Edit Fields", None))
#if QT_CONFIG(tooltip)
        self.actionEditFields.setToolTip(QCoreApplication.translate("PloverCAT", u"Edit fields values", None))
#endif // QT_CONFIG(tooltip)
        self.actionEnableAutosave.setText(QCoreApplication.translate("PloverCAT", u"Autosave", None))
#if QT_CONFIG(tooltip)
        self.actionEnableAutosave.setToolTip(QCoreApplication.translate("PloverCAT", u"Enable autosave to backup file at defined time intervals", None))
#endif // QT_CONFIG(tooltip)
        self.actionEditAffixes.setText(QCoreApplication.translate("PloverCAT", u"Edit Paragraph Affixes", None))
#if QT_CONFIG(tooltip)
        self.actionEditAffixes.setToolTip(QCoreApplication.translate("PloverCAT", u"Add and edit paragraph affixes for styles", None))
#endif // QT_CONFIG(tooltip)
        self.actionSetAutosaveTime.setText(QCoreApplication.translate("PloverCAT", u"Set Autosave Time", None))
#if QT_CONFIG(tooltip)
        self.actionSetAutosaveTime.setToolTip(QCoreApplication.translate("PloverCAT", u"Set time intervals for autosave", None))
#endif // QT_CONFIG(tooltip)
        self.actionEditMenuShortcuts.setText(QCoreApplication.translate("PloverCAT", u"Edit Menu Shortcuts", None))
#if QT_CONFIG(tooltip)
        self.actionEditMenuShortcuts.setToolTip(QCoreApplication.translate("PloverCAT", u"Customize shortcuts for menu items", None))
#endif // QT_CONFIG(tooltip)
        self.actionEditIndices.setText(QCoreApplication.translate("PloverCAT", u"Edit Indices", None))
#if QT_CONFIG(tooltip)
        self.actionEditIndices.setToolTip(QCoreApplication.translate("PloverCAT", u"Add and edit index and index entries", None))
#endif // QT_CONFIG(tooltip)
        self.actionTranscriptSuggestions.setText(QCoreApplication.translate("PloverCAT", u"Transcript Suggestions", None))
#if QT_CONFIG(tooltip)
        self.actionTranscriptSuggestions.setToolTip(QCoreApplication.translate("PloverCAT", u"Analyze transcript for common words/n-grams to add to dictionary", None))
#endif // QT_CONFIG(tooltip)
        self.actionRedact.setText(QCoreApplication.translate("PloverCAT", u"Redact Text", None))
        self.actionCaptioning.setText(QCoreApplication.translate("PloverCAT", u"Captioning", None))
        self.actionFlushCaption.setText(QCoreApplication.translate("PloverCAT", u"Flush Caption", None))
        self.actionMassTimestampChange.setText(QCoreApplication.translate("PloverCAT", u"Mass Timestamp Change", None))
        self.actionAddChangeAudioTimestamps.setText(QCoreApplication.translate("PloverCAT", u"Add/Change All Audio Timestamps", None))
        self.actionTape.setText(QCoreApplication.translate("PloverCAT", u"Paper Tape (*.tape)", None))
#if QT_CONFIG(tooltip)
        self.actionTape.setToolTip(QCoreApplication.translate("PloverCAT", u"Exports only the strokes from paper tape", None))
#endif // QT_CONFIG(tooltip)
        self.actionSpellcheck.setText(QCoreApplication.translate("PloverCAT", u"Spellcheck", None))
#if QT_CONFIG(tooltip)
        self.actionSpellcheck.setToolTip(QCoreApplication.translate("PloverCAT", u"Open Spellcheck Pane if hidden", None))
#endif // QT_CONFIG(tooltip)
        self.actionStenoSearch.setText(QCoreApplication.translate("PloverCAT", u"Steno Search", None))
#if QT_CONFIG(tooltip)
        self.actionStenoSearch.setToolTip(QCoreApplication.translate("PloverCAT", u"Open Steno Search pane if hidden", None))
#endif // QT_CONFIG(tooltip)
        self.actionStyling.setText(QCoreApplication.translate("PloverCAT", u"Styling", None))
#if QT_CONFIG(tooltip)
        self.actionStyling.setToolTip(QCoreApplication.translate("PloverCAT", u"Open style pane if hidden", None))
#endif // QT_CONFIG(tooltip)
        self.actionPageFormat.setText(QCoreApplication.translate("PloverCAT", u"Page Format", None))
#if QT_CONFIG(tooltip)
        self.actionPageFormat.setToolTip(QCoreApplication.translate("PloverCAT", u"Open page format pane if hidden", None))
#endif // QT_CONFIG(tooltip)
        self.actionParagraph.setText(QCoreApplication.translate("PloverCAT", u"Paragraph", None))
#if QT_CONFIG(tooltip)
        self.actionParagraph.setToolTip(QCoreApplication.translate("PloverCAT", u"Show paragraph attributes if hidden", None))
#endif // QT_CONFIG(tooltip)
        self.actionSearchWikipedia.setText(QCoreApplication.translate("PloverCAT", u"Wikipedia", None))
#if QT_CONFIG(tooltip)
        self.actionSearchWikipedia.setToolTip(QCoreApplication.translate("PloverCAT", u"Search selected text on Wikipedia in default browser", None))
#endif // QT_CONFIG(tooltip)
        self.actionSearchGoogle.setText(QCoreApplication.translate("PloverCAT", u"Google", None))
#if QT_CONFIG(tooltip)
        self.actionSearchGoogle.setToolTip(QCoreApplication.translate("PloverCAT", u"Search selected text on Google in default browser", None))
#endif // QT_CONFIG(tooltip)
        self.actionSearchDuckDuckGo.setText(QCoreApplication.translate("PloverCAT", u"DuckDuckGo", None))
#if QT_CONFIG(tooltip)
        self.actionSearchDuckDuckGo.setToolTip(QCoreApplication.translate("PloverCAT", u"Search selected text on DuckDuckGo in default browser", None))
#endif // QT_CONFIG(tooltip)
        self.actionSearchMerriamWebster.setText(QCoreApplication.translate("PloverCAT", u"Merriam-Webster", None))
#if QT_CONFIG(tooltip)
        self.actionSearchMerriamWebster.setToolTip(QCoreApplication.translate("PloverCAT", u"Search selected text on Merriam-Webster in default browser", None))
#endif // QT_CONFIG(tooltip)
        self.actionSearchOED.setText(QCoreApplication.translate("PloverCAT", u"OED", None))
#if QT_CONFIG(tooltip)
        self.actionSearchOED.setToolTip(QCoreApplication.translate("PloverCAT", u"Search selected text on Oxford English Dictionary in default browser", None))
#endif // QT_CONFIG(tooltip)
        self.actionRevertTranscript.setText(QCoreApplication.translate("PloverCAT", u"Revert Transcript", None))
#if QT_CONFIG(tooltip)
        self.actionRevertTranscript.setToolTip(QCoreApplication.translate("PloverCAT", u"Revert transcript to previously saved version", None))
#endif // QT_CONFIG(tooltip)
        self.actionViewPloverLog.setText(QCoreApplication.translate("PloverCAT", u"View Plover Log", None))
        self.actionRunTests.setText(QCoreApplication.translate("PloverCAT", u"Run Tests", None))
        self.actionColorSteno.setText(QCoreApplication.translate("PloverCAT", u"Steno", None))
        self.actionColorText.setText(QCoreApplication.translate("PloverCAT", u"Typed Text", None))
        self.actionColorAutomatic.setText(QCoreApplication.translate("PloverCAT", u"Automatic", None))
        self.actionColorField.setText(QCoreApplication.translate("PloverCAT", u"Field", None))
        self.actionColorIndex.setText(QCoreApplication.translate("PloverCAT", u"Index", None))
        self.label_39.setText(QCoreApplication.translate("PloverCAT", u"Welcome to Plover2CAT. Create a new transcript or select a recent transcript below.", None))
        self.mainTabs.setTabText(self.mainTabs.indexOf(self.homeTab), QCoreApplication.translate("PloverCAT", u"Recent Files", None))
        self.menuFile.setTitle(QCoreApplication.translate("PloverCAT", u"File", None))
        self.menuExport_as.setTitle(QCoreApplication.translate("PloverCAT", u"Export as...", None))
        self.menuRecentFiles.setTitle(QCoreApplication.translate("PloverCAT", u"Recent Files", None))
        self.menuEdit.setTitle(QCoreApplication.translate("PloverCAT", u"Edit", None))
        self.menuClipboard.setTitle(QCoreApplication.translate("PloverCAT", u"Clipboard", None))
        self.menuAudio.setTitle(QCoreApplication.translate("PloverCAT", u"Media", None))
        self.menuView.setTitle(QCoreApplication.translate("PloverCAT", u"Preferences", None))
        self.menuDocks.setTitle(QCoreApplication.translate("PloverCAT", u"Docks", None))
        self.menuHighlightColors.setTitle(QCoreApplication.translate("PloverCAT", u"Highlight Colors", None))
        self.menuDictionary.setTitle(QCoreApplication.translate("PloverCAT", u"Dictionary", None))
        self.menuHelp.setTitle(QCoreApplication.translate("PloverCAT", u"Help", None))
        self.menuDiagnostics.setTitle(QCoreApplication.translate("PloverCAT", u"Diagnostics", None))
        self.menuSteno_Actions.setTitle(QCoreApplication.translate("PloverCAT", u"Steno Actions", None))
        self.menuStyling.setTitle(QCoreApplication.translate("PloverCAT", u"Styling", None))
        self.menuParagraphStyle.setTitle(QCoreApplication.translate("PloverCAT", u"Set Paragraph Style", None))
        self.menuInsert.setTitle(QCoreApplication.translate("PloverCAT", u"Insert", None))
        self.menuField.setTitle(QCoreApplication.translate("PloverCAT", u"Field...", None))
        self.menuIndexEntry.setTitle(QCoreApplication.translate("PloverCAT", u"Index Entry", None))
        self.menuTools.setTitle(QCoreApplication.translate("PloverCAT", u"Tools", None))
        self.toolbarFile.setWindowTitle(QCoreApplication.translate("PloverCAT", u"File Toolbar", None))
#if QT_CONFIG(tooltip)
        self.toolbarFile.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(accessibility)
        self.toolbarFile.setAccessibleName(QCoreApplication.translate("PloverCAT", u"File Toolbar", None))
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(tooltip)
        self.dockPaper.setToolTip(QCoreApplication.translate("PloverCAT", u"Displays steno notes, time of\n"
"stroke, audio time, and cursor\n"
"position.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.dockPaper.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.dockPaper.setAccessibleName(QCoreApplication.translate("PloverCAT", u"Paper Tape", None))
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(accessibility)
        self.dockPaper.setAccessibleDescription("")
#endif // QT_CONFIG(accessibility)
        self.dockPaper.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Paper Tape", None))
        self.strokeList.setPlainText("")
#if QT_CONFIG(tooltip)
        self.strokeLocate.setToolTip(QCoreApplication.translate("PloverCAT", u"Select stroke and locate in editor text", None))
#endif // QT_CONFIG(tooltip)
        self.strokeLocate.setText(QCoreApplication.translate("PloverCAT", u"Locate", None))
#if QT_CONFIG(tooltip)
        self.dockSuggest.setToolTip(QCoreApplication.translate("PloverCAT", u"Displays suggestions from Tapey Tape", None))
#endif // QT_CONFIG(tooltip)
        self.dockSuggest.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Suggestions", None))
        self.suggest_source.setItemText(0, QCoreApplication.translate("PloverCAT", u"tapey-tape", None))
        self.suggest_source.setItemText(1, QCoreApplication.translate("PloverCAT", u"clippy_2", None))

#if QT_CONFIG(tooltip)
        self.suggest_source.setToolTip(QCoreApplication.translate("PloverCAT", u"Selects which plugin provides suggestions.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.suggest_sort.setToolTip(QCoreApplication.translate("PloverCAT", u"Enable to sort by most recent", None))
#endif // QT_CONFIG(tooltip)
        self.suggest_sort.setText(QCoreApplication.translate("PloverCAT", u"By Recency", None))
#if QT_CONFIG(tooltip)
        self.dockAudio.setToolTip(QCoreApplication.translate("PloverCAT", u"Audio seeker and other controls", None))
#endif // QT_CONFIG(tooltip)
        self.dockAudio.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Audio Controls", None))
        self.audio_label.setText(QCoreApplication.translate("PloverCAT", u"Select file to play audio", None))
#if QT_CONFIG(tooltip)
        self.playRate.setToolTip(QCoreApplication.translate("PloverCAT", u"Playback rate", None))
#endif // QT_CONFIG(tooltip)
        self.playRate.setSuffix(QCoreApplication.translate("PloverCAT", u"x", None))
#if QT_CONFIG(tooltip)
        self.audioDelay.setToolTip(QCoreApplication.translate("PloverCAT", u"Millisecond adjustment between actual timestamp and audio and steno timestamps.", None))
#endif // QT_CONFIG(tooltip)
        self.audioDelay.setSuffix(QCoreApplication.translate("PloverCAT", u"ms", None))
#if QT_CONFIG(tooltip)
        self.audio_curr_pos.setToolTip(QCoreApplication.translate("PloverCAT", u"Current time", None))
#endif // QT_CONFIG(tooltip)
        self.audio_curr_pos.setText(QCoreApplication.translate("PloverCAT", u"00:00:00", None))
#if QT_CONFIG(tooltip)
        self.audio_seeker.setToolTip(QCoreApplication.translate("PloverCAT", u"Track for media presently playing", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.audio_duration.setToolTip(QCoreApplication.translate("PloverCAT", u"Duration of track", None))
#endif // QT_CONFIG(tooltip)
        self.audio_duration.setText(QCoreApplication.translate("PloverCAT", u"00:00:00", None))
#if QT_CONFIG(tooltip)
        self.audio_output.setToolTip(QCoreApplication.translate("PloverCAT", u"Select output device", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.dockProp.setToolTip(QCoreApplication.translate("PloverCAT", u"Contains various controls", None))
#endif // QT_CONFIG(tooltip)
        self.dockProp.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Toolbox", None))
#if QT_CONFIG(tooltip)
        self.style_file_path.setToolTip(QCoreApplication.translate("PloverCAT", u"Name of current style file", None))
#endif // QT_CONFIG(tooltip)
        self.style_file_path.setText(QCoreApplication.translate("PloverCAT", u"Style file location", None))
        self.label_3.setText(QCoreApplication.translate("PloverCAT", u"Current Paragraph Style:", None))
        self.style_controls.setTitle(QCoreApplication.translate("PloverCAT", u"Style Settings", None))
        self.blockFontSize.setSuffix(QCoreApplication.translate("PloverCAT", u"pt", None))
#if QT_CONFIG(tooltip)
        self.blockFontBold.setToolTip(QCoreApplication.translate("PloverCAT", u"Set text italic for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockFontBold.setText("")
#if QT_CONFIG(tooltip)
        self.blockFontItalic.setToolTip(QCoreApplication.translate("PloverCAT", u"Set text italicized for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockFontItalic.setText("")
#if QT_CONFIG(tooltip)
        self.blockFontUnderline.setToolTip(QCoreApplication.translate("PloverCAT", u"Set text underlined for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockFontUnderline.setText("")
#if QT_CONFIG(tooltip)
        self.blockLeftAlign.setToolTip(QCoreApplication.translate("PloverCAT", u"Set alignment left for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockLeftAlign.setText("")
#if QT_CONFIG(tooltip)
        self.blockCenterAlign.setToolTip(QCoreApplication.translate("PloverCAT", u"Set alignment center for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockCenterAlign.setText("")
#if QT_CONFIG(tooltip)
        self.blockRightAlign.setToolTip(QCoreApplication.translate("PloverCAT", u"Set alignment right for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockRightAlign.setText("")
#if QT_CONFIG(tooltip)
        self.blockJustify.setToolTip(QCoreApplication.translate("PloverCAT", u"Set alignment justified for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockJustify.setText("")
#if QT_CONFIG(tooltip)
        self.blockLineSpace.setToolTip(QCoreApplication.translate("PloverCAT", u"Set line spacing as proportion of font height (ie 200% for double space)", None))
#endif // QT_CONFIG(tooltip)
        self.blockLineSpace.setSuffix(QCoreApplication.translate("PloverCAT", u"%", None))
        self.label_30.setText(QCoreApplication.translate("PloverCAT", u"Average Char Width ", None))
#if QT_CONFIG(tooltip)
        self.fontspaceInInch.setToolTip(QCoreApplication.translate("PloverCAT", u"Average character width of font, use this to estimate indent and margin positions. Less accurate with proportional fonts.", None))
#endif // QT_CONFIG(tooltip)
        self.fontspaceInInch.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_28.setText(QCoreApplication.translate("PloverCAT", u"First Line Indent", None))
#if QT_CONFIG(tooltip)
        self.blockTextIndent.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify text indent in inches relative to page margin", None))
#endif // QT_CONFIG(tooltip)
        self.blockTextIndent.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_29.setText(QCoreApplication.translate("PloverCAT", u"Tab Stop Distance", None))
#if QT_CONFIG(tooltip)
        self.blockTabStop.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify position of tab stop", None))
#endif // QT_CONFIG(tooltip)
        self.blockTabStop.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_24.setText(QCoreApplication.translate("PloverCAT", u"Left Margin (Indent)", None))
#if QT_CONFIG(tooltip)
        self.blockLeftMargin.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify paragraph margin relative to left page margin", None))
#endif // QT_CONFIG(tooltip)
        self.blockLeftMargin.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_25.setText(QCoreApplication.translate("PloverCAT", u"Right Margin (Indent)", None))
#if QT_CONFIG(tooltip)
        self.blockRightMargin.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify right margin relative to right page margin", None))
#endif // QT_CONFIG(tooltip)
        self.blockRightMargin.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_26.setText(QCoreApplication.translate("PloverCAT", u"Top Margin (Padding)", None))
#if QT_CONFIG(tooltip)
        self.blockTopMargin.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify padding for top of paragraph", None))
#endif // QT_CONFIG(tooltip)
        self.blockTopMargin.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_27.setText(QCoreApplication.translate("PloverCAT", u"Bottom Margin (Padding)", None))
#if QT_CONFIG(tooltip)
        self.blockBottomMargin.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify padding for bottom of paragraph", None))
#endif // QT_CONFIG(tooltip)
        self.blockBottomMargin.setSuffix(QCoreApplication.translate("PloverCAT", u"in", None))
        self.label_31.setText(QCoreApplication.translate("PloverCAT", u"Parent Style", None))
#if QT_CONFIG(tooltip)
        self.blockParentStyle.setToolTip(QCoreApplication.translate("PloverCAT", u"Select parent style for style", None))
#endif // QT_CONFIG(tooltip)
        self.blockParentStyle.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"(None)", None))
        self.label_32.setText(QCoreApplication.translate("PloverCAT", u"Next Style", None))
#if QT_CONFIG(tooltip)
        self.blockNextStyle.setToolTip(QCoreApplication.translate("PloverCAT", u"Select style of next paragraph", None))
#endif // QT_CONFIG(tooltip)
        self.label_33.setText(QCoreApplication.translate("PloverCAT", u"Heading Level", None))
        self.blockHeadingLevel.setItemText(0, "")
        self.blockHeadingLevel.setItemText(1, QCoreApplication.translate("PloverCAT", u"1", None))
        self.blockHeadingLevel.setItemText(2, QCoreApplication.translate("PloverCAT", u"2", None))
        self.blockHeadingLevel.setItemText(3, QCoreApplication.translate("PloverCAT", u"3", None))
        self.blockHeadingLevel.setItemText(4, QCoreApplication.translate("PloverCAT", u"4", None))
        self.blockHeadingLevel.setItemText(5, QCoreApplication.translate("PloverCAT", u"5", None))
        self.blockHeadingLevel.setItemText(6, QCoreApplication.translate("PloverCAT", u"6", None))
        self.blockHeadingLevel.setItemText(7, QCoreApplication.translate("PloverCAT", u"7", None))
        self.blockHeadingLevel.setItemText(8, QCoreApplication.translate("PloverCAT", u"8", None))
        self.blockHeadingLevel.setItemText(9, QCoreApplication.translate("PloverCAT", u"9", None))
        self.blockHeadingLevel.setItemText(10, QCoreApplication.translate("PloverCAT", u"10", None))

#if QT_CONFIG(tooltip)
        self.blockHeadingLevel.setToolTip(QCoreApplication.translate("PloverCAT", u"Specify heading level of style", None))
#endif // QT_CONFIG(tooltip)
        self.editCurrentStyle.setText(QCoreApplication.translate("PloverCAT", u"Modify Current Style", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.styling_pane), QCoreApplication.translate("PloverCAT", u"Style", None))
#if QT_CONFIG(tooltip)
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.styling_pane), QCoreApplication.translate("PloverCAT", u"Set style for current paragraph or load styles for export", None))
#endif // QT_CONFIG(tooltip)
        self.label_8.setText(QCoreApplication.translate("PloverCAT", u"Page Width", None))
#if QT_CONFIG(tooltip)
        self.page_width.setToolTip(QCoreApplication.translate("PloverCAT", u"Paper width", None))
#endif // QT_CONFIG(tooltip)
        self.page_width.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_9.setText(QCoreApplication.translate("PloverCAT", u"Page Height", None))
#if QT_CONFIG(tooltip)
        self.page_height.setToolTip(QCoreApplication.translate("PloverCAT", u"Page height", None))
#endif // QT_CONFIG(tooltip)
        self.page_height.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_10.setText(QCoreApplication.translate("PloverCAT", u"Left Margin", None))
#if QT_CONFIG(tooltip)
        self.page_left_margin.setToolTip(QCoreApplication.translate("PloverCAT", u"Page left margin", None))
#endif // QT_CONFIG(tooltip)
        self.page_left_margin.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_11.setText(QCoreApplication.translate("PloverCAT", u"Top Margin", None))
#if QT_CONFIG(tooltip)
        self.page_top_margin.setToolTip(QCoreApplication.translate("PloverCAT", u"Page top margin", None))
#endif // QT_CONFIG(tooltip)
        self.page_top_margin.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_12.setText(QCoreApplication.translate("PloverCAT", u"Right Margin", None))
#if QT_CONFIG(tooltip)
        self.page_right_margin.setToolTip(QCoreApplication.translate("PloverCAT", u"Page right margin", None))
#endif // QT_CONFIG(tooltip)
        self.page_right_margin.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_13.setText(QCoreApplication.translate("PloverCAT", u"Bottom Margin", None))
#if QT_CONFIG(tooltip)
        self.page_bottom_margin.setToolTip(QCoreApplication.translate("PloverCAT", u"Page bottom margin", None))
#endif // QT_CONFIG(tooltip)
        self.page_bottom_margin.setSuffix(QCoreApplication.translate("PloverCAT", u"in.", None))
        self.label_15.setText(QCoreApplication.translate("PloverCAT", u"Max Char per Line", None))
#if QT_CONFIG(tooltip)
        self.page_max_char.setToolTip(QCoreApplication.translate("PloverCAT", u"Each line can contain at most n char, excluding line number and timestamps", None))
#endif // QT_CONFIG(tooltip)
        self.page_max_char.setSpecialValueText(QCoreApplication.translate("PloverCAT", u"Automatic", None))
        self.label_14.setText(QCoreApplication.translate("PloverCAT", u"Max Lines per Page", None))
        self.page_max_lines.setSpecialValueText(QCoreApplication.translate("PloverCAT", u"Automatic", None))
        self.label_35.setText(QCoreApplication.translate("PloverCAT", u"Line Numbering", None))
#if QT_CONFIG(tooltip)
        self.enable_line_num.setToolTip(QCoreApplication.translate("PloverCAT", u"Enable line number in applicable formats", None))
#endif // QT_CONFIG(tooltip)
        self.enable_line_num.setText("")
        self.label_34.setText(QCoreApplication.translate("PloverCAT", u"Frequency", None))
#if QT_CONFIG(tooltip)
        self.line_num_freq.setToolTip(QCoreApplication.translate("PloverCAT", u"Show line number every nth line for ODF", None))
#endif // QT_CONFIG(tooltip)
        self.label_36.setText(QCoreApplication.translate("PloverCAT", u"Line Timestamp", None))
        self.enable_timestamp.setText("")
        self.label_37.setText(QCoreApplication.translate("PloverCAT", u"Header:", None))
#if QT_CONFIG(tooltip)
        self.header_left.setToolTip(QCoreApplication.translate("PloverCAT", u"Header text to be aligned left. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.header_left.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Left", None))
#if QT_CONFIG(tooltip)
        self.header_center.setToolTip(QCoreApplication.translate("PloverCAT", u"Header text to be centered. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.header_center.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Center", None))
#if QT_CONFIG(tooltip)
        self.header_right.setToolTip(QCoreApplication.translate("PloverCAT", u"Header text to be aligned right. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.header_right.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Right", None))
        self.label_38.setText(QCoreApplication.translate("PloverCAT", u"Footer:", None))
#if QT_CONFIG(tooltip)
        self.footer_left.setToolTip(QCoreApplication.translate("PloverCAT", u"Footer text to be aligned left. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.footer_left.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Left", None))
#if QT_CONFIG(tooltip)
        self.footer_center.setToolTip(QCoreApplication.translate("PloverCAT", u"Footer text to be aligned center. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.footer_center.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Center", None))
#if QT_CONFIG(tooltip)
        self.footer_right.setToolTip(QCoreApplication.translate("PloverCAT", u"Footer text to be aligned right. Use %p for page number.", None))
#endif // QT_CONFIG(tooltip)
        self.footer_right.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Right", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.page_format_pane), QCoreApplication.translate("PloverCAT", u"Page Format", None))
#if QT_CONFIG(tooltip)
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.page_format_pane), QCoreApplication.translate("PloverCAT", u"Set page format", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_2.setTitle(QCoreApplication.translate("PloverCAT", u"Search Types", None))
#if QT_CONFIG(tooltip)
        self.search_text.setToolTip(QCoreApplication.translate("PloverCAT", u"Search visible text for match", None))
#endif // QT_CONFIG(tooltip)
        self.search_text.setText(QCoreApplication.translate("PloverCAT", u"Text", None))
#if QT_CONFIG(tooltip)
        self.search_untrans.setToolTip(QCoreApplication.translate("PloverCAT", u"Search what appears to be untranslated chords in visible text", None))
#endif // QT_CONFIG(tooltip)
        self.search_untrans.setText(QCoreApplication.translate("PloverCAT", u"Untrans", None))
#if QT_CONFIG(tooltip)
        self.search_steno.setToolTip(QCoreApplication.translate("PloverCAT", u"Search strokes, find text has to match stroke completely", None))
#endif // QT_CONFIG(tooltip)
        self.search_steno.setText(QCoreApplication.translate("PloverCAT", u"Underlying Steno", None))
#if QT_CONFIG(tooltip)
        self.search_term.setToolTip(QCoreApplication.translate("PloverCAT", u"Text to search for", None))
#endif // QT_CONFIG(tooltip)
        self.search_term.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Find", None))
#if QT_CONFIG(tooltip)
        self.search_backward.setToolTip(QCoreApplication.translate("PloverCAT", u"Search backwards", None))
#endif // QT_CONFIG(tooltip)
        self.search_backward.setText(QCoreApplication.translate("PloverCAT", u"Previous", None))
#if QT_CONFIG(tooltip)
        self.search_forward.setToolTip(QCoreApplication.translate("PloverCAT", u"Search forward", None))
#endif // QT_CONFIG(tooltip)
        self.search_forward.setText(QCoreApplication.translate("PloverCAT", u"Next", None))
#if QT_CONFIG(tooltip)
        self.find_all.setToolTip(QCoreApplication.translate("PloverCAT", u"Find all matches", None))
#endif // QT_CONFIG(tooltip)
        self.find_all.setText(QCoreApplication.translate("PloverCAT", u"Find All", None))
#if QT_CONFIG(tooltip)
        self.search_case.setToolTip(QCoreApplication.translate("PloverCAT", u"Case sensitive search", None))
#endif // QT_CONFIG(tooltip)
        self.search_case.setText(QCoreApplication.translate("PloverCAT", u"Match Case", None))
#if QT_CONFIG(tooltip)
        self.search_whole.setToolTip(QCoreApplication.translate("PloverCAT", u"Text in find has to match text as a whole word/stroke", None))
#endif // QT_CONFIG(tooltip)
        self.search_whole.setText(QCoreApplication.translate("PloverCAT", u"Whole Word/Stroke", None))
#if QT_CONFIG(tooltip)
        self.search_wrap.setToolTip(QCoreApplication.translate("PloverCAT", u"Search will continue from top/bottom if a match is not found in forward/back search", None))
#endif // QT_CONFIG(tooltip)
        self.search_wrap.setText(QCoreApplication.translate("PloverCAT", u"Wrap", None))
#if QT_CONFIG(tooltip)
        self.replace_term.setToolTip(QCoreApplication.translate("PloverCAT", u"The text to replace the match found in search", None))
#endif // QT_CONFIG(tooltip)
        self.replace_term.setPlaceholderText(QCoreApplication.translate("PloverCAT", u"Replace", None))
#if QT_CONFIG(tooltip)
        self.replace_selected.setToolTip(QCoreApplication.translate("PloverCAT", u"Replace the found match with the text in the replace textbox", None))
#endif // QT_CONFIG(tooltip)
        self.replace_selected.setText(QCoreApplication.translate("PloverCAT", u"Once", None))
#if QT_CONFIG(tooltip)
        self.replace_all.setToolTip(QCoreApplication.translate("PloverCAT", u"Replace all matches with text in replace textbox", None))
#endif // QT_CONFIG(tooltip)
        self.replace_all.setText(QCoreApplication.translate("PloverCAT", u"All", None))
#if QT_CONFIG(tooltip)
        self.searchResults.setToolTip(QCoreApplication.translate("PloverCAT", u"Displays search results", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.find_replace_pane), QCoreApplication.translate("PloverCAT", u"Find and Replace", None))
#if QT_CONFIG(tooltip)
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.find_replace_pane), QCoreApplication.translate("PloverCAT", u"Find and replace", None))
#endif // QT_CONFIG(tooltip)
        self.label_2.setText(QCoreApplication.translate("PloverCAT", u"Paragraph", None))
#if QT_CONFIG(tooltip)
        self.editorParagraphLabel.setToolTip(QCoreApplication.translate("PloverCAT", u"Paragraph number", None))
#endif // QT_CONFIG(tooltip)
        self.editorParagraphLabel.setText(QCoreApplication.translate("PloverCAT", u"0", None))
        self.label.setText(QCoreApplication.translate("PloverCAT", u"Creation Time", None))
#if QT_CONFIG(tooltip)
        self.editorCreationTime.setToolTip(QCoreApplication.translate("PloverCAT", u"Modifies creation time of paragraph", None))
#endif // QT_CONFIG(tooltip)
        self.editorCreationTime.setDisplayFormat(QCoreApplication.translate("PloverCAT", u"yyyy-MM-dd hh:mm:ss.zzz", None))
        self.label_6.setText(QCoreApplication.translate("PloverCAT", u"Edit Time", None))
#if QT_CONFIG(tooltip)
        self.editorEditTime.setToolTip(QCoreApplication.translate("PloverCAT", u"Read only. Displays edit time of paragraph. Will change upon any cursor movement.", None))
#endif // QT_CONFIG(tooltip)
        self.editorEditTime.setDisplayFormat(QCoreApplication.translate("PloverCAT", u"yyyy-MM-dd hh:mm:ss.zzz", None))
        self.label_4.setText(QCoreApplication.translate("PloverCAT", u"Audio Start Time", None))
#if QT_CONFIG(tooltip)
        self.editorAudioStart.setToolTip(QCoreApplication.translate("PloverCAT", u"Modifies audio start time of paragraph.", None))
#endif // QT_CONFIG(tooltip)
        self.editorAudioStart.setDisplayFormat(QCoreApplication.translate("PloverCAT", u"hh:mm:ss.zzz", None))
        self.label_5.setText(QCoreApplication.translate("PloverCAT", u"Audio End Time", None))
#if QT_CONFIG(tooltip)
        self.editorAudioEnd.setToolTip(QCoreApplication.translate("PloverCAT", u"Sets audio end time for this paragraph. ", None))
#endif // QT_CONFIG(tooltip)
        self.editorAudioEnd.setDisplayFormat(QCoreApplication.translate("PloverCAT", u"hh:mm:ss.zzz", None))
        self.label_7.setText(QCoreApplication.translate("PloverCAT", u"Notes", None))
#if QT_CONFIG(tooltip)
        self.editorNotes.setToolTip(QCoreApplication.translate("PloverCAT", u"Custom notes attached to paragraph", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.submitEdited.setToolTip(QCoreApplication.translate("PloverCAT", u"Enable with checkbox in order to submit edits", None))
#endif // QT_CONFIG(tooltip)
        self.submitEdited.setText(QCoreApplication.translate("PloverCAT", u"Edit Paragraph Properties", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.paragraph_pane), QCoreApplication.translate("PloverCAT", u"Paragraph", None))
#if QT_CONFIG(tooltip)
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.paragraph_pane), QCoreApplication.translate("PloverCAT", u"Edit paragraph properties", None))
#endif // QT_CONFIG(tooltip)
        self.spell_search.setText(QCoreApplication.translate("PloverCAT", u"Search", None))
        self.spell_skip.setText(QCoreApplication.translate("PloverCAT", u"Skip", None))
        self.spell_ignore_all.setText(QCoreApplication.translate("PloverCAT", u"Ignore All", None))
        self.spell_change.setText(QCoreApplication.translate("PloverCAT", u"Change", None))
        self.label_21.setText(QCoreApplication.translate("PloverCAT", u"Detected:", None))
#if QT_CONFIG(tooltip)
        self.spellcheck_suggestions.setToolTip(QCoreApplication.translate("PloverCAT", u"Double click on choice to replace", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.spellcheck_pane), QCoreApplication.translate("PloverCAT", u"Spellcheck", None))
#if QT_CONFIG(tooltip)
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.spellcheck_pane), QCoreApplication.translate("PloverCAT", u"Spellcheck editor transcript", None))
#endif // QT_CONFIG(tooltip)
        self.label_40.setText(QCoreApplication.translate("PloverCAT", u"Outline:", None))
        self.steno_spellcheck.setText(QCoreApplication.translate("PloverCAT", u"Search", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.stenospell_pane), QCoreApplication.translate("PloverCAT", u"Steno Search", None))
        self.tts_settings_group.setTitle(QCoreApplication.translate("PloverCAT", u"Text to Speech Settings", None))
        self.label_16.setText(QCoreApplication.translate("PloverCAT", u"Language:", None))
        self.label_17.setText(QCoreApplication.translate("PloverCAT", u"Voice:", None))
        self.label_18.setText(QCoreApplication.translate("PloverCAT", u"Engine:", None))
        self.label_19.setText(QCoreApplication.translate("PloverCAT", u"Volume:", None))
        self.label_20.setText(QCoreApplication.translate("PloverCAT", u"Rate:", None))
        self.label_22.setText(QCoreApplication.translate("PloverCAT", u"Pitch:", None))
        self.tts_play.setText(QCoreApplication.translate("PloverCAT", u"Play", None))
        self.tts_pause.setText(QCoreApplication.translate("PloverCAT", u"Pause", None))
        self.tts_resume.setText(QCoreApplication.translate("PloverCAT", u"Resume", None))
        self.tts_stop.setText(QCoreApplication.translate("PloverCAT", u"Stop", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tts_pane), QCoreApplication.translate("PloverCAT", u"Text to Speech", None))
        self.toolbarSteno.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Steno Actions Toolbar", None))
#if QT_CONFIG(accessibility)
        self.toolbarSteno.setAccessibleName(QCoreApplication.translate("PloverCAT", u"Editing Toolbar", None))
#endif // QT_CONFIG(accessibility)
        self.toolbarAudio.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Audio Toolbar", None))
#if QT_CONFIG(accessibility)
        self.toolbarAudio.setAccessibleName(QCoreApplication.translate("PloverCAT", u"Audiovisual Toolbar", None))
#endif // QT_CONFIG(accessibility)
        self.dockHistoryStack.setWindowTitle(QCoreApplication.translate("PloverCAT", u"History", None))
#if QT_CONFIG(tooltip)
        self.undoView.setToolTip(QCoreApplication.translate("PloverCAT", u"Session actions for undo/redo", None))
#endif // QT_CONFIG(tooltip)
        self.dockStenoData.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Reveal Steno", None))
#if QT_CONFIG(tooltip)
        self.downgradeRevealStenoEl.setToolTip(QCoreApplication.translate("PloverCAT", u"Downgrades selected element", None))
#endif // QT_CONFIG(tooltip)
        self.downgradeRevealStenoEl.setText("")
#if QT_CONFIG(tooltip)
        self.reveal_steno_refresh.setToolTip(QCoreApplication.translate("PloverCAT", u"Refresh reveal steno display", None))
#endif // QT_CONFIG(tooltip)
        self.reveal_steno_refresh.setText("")
        self.toolbarEdit.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Edit Toolbar", None))
        self.dockNavigation.setWindowTitle(QCoreApplication.translate("PloverCAT", u"Navigation", None))
    # retranslateUi


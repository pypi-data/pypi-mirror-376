name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.10
    
    - name: Install dependencies
      run: |
        uv sync --group dev
    
    - name: Run ruff (linter)
      run: |
        uv run ruff check laneful/
    
    - name: Run ruff (formatter)
      run: |
        uv run ruff format --check laneful/
    
    - name: Run mypy
      run: |
        uv run mypy laneful/

  test:
    name: Test Python ${{ matrix.python-version }} - ${{ matrix.deps }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        deps: ["sync-only", "async-only", "all"]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies (sync-only)
      if: matrix.deps == 'sync-only'
      run: |
        uv sync --python ${{ matrix.python-version }}
        uv add --dev pytest pytest-cov
        uv pip install -e .
    
    - name: Install dependencies (async-only)
      if: matrix.deps == 'async-only'
      run: |
        uv sync --python ${{ matrix.python-version }}
        uv add --dev pytest pytest-cov pytest-asyncio
        uv pip install -e .[async-only]
    
    - name: Install dependencies (all)
      if: matrix.deps == 'all'
      run: |
        uv sync --python ${{ matrix.python-version }} --group dev
    
    - name: Run tests (async-only)
      if: matrix.deps == 'async-only'
      run: |
        uv run pytest tests/test_async_client.py tests/test_models.py -v --cov=laneful --cov-report=xml
    
    - name: Run tests (all)
      if: matrix.deps == 'all'
      run: |
        uv run pytest tests/ -v --cov=laneful --cov-report=xml
    
    # - name: Upload coverage to Codecov
    #   if: matrix.deps == 'all' && matrix.python-version == '3.10'
    #   uses: codecov/codecov-action@v4
    #   with:
    #     file: ./coverage.xml
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.10
    
    - name: Install dependencies
      run: |
        uv sync --group dev
    
#    - name: Run safety check
#      run: |
#        uv add --dev safety
#        uv run safety check --json || true
    
    - name: Run bandit security linter
      run: |
        uv add --dev bandit
        uv run bandit -r laneful/ -f json || true

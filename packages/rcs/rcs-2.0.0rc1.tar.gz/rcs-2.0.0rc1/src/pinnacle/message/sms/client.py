# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...types.sms_validation_result import SmsValidationResult
from .raw_client import AsyncRawSmsClient, RawSmsClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class SmsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawSmsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawSmsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawSmsClient
        """
        return self._raw_client

    def validate(self, *, text: str, request_options: typing.Optional[RequestOptions] = None) -> SmsValidationResult:
        """
        Validate SMS message content without sending it.

        Parameters
        ----------
        text : str
            Message content.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SmsValidationResult
            Returns the validation results.

        Examples
        --------
        from pinnacle import Pinnacle

        client = Pinnacle(
            api_key="YOUR_API_KEY",
        )
        client.message.sms.validate(
            text="Hello from Pinnacle",
        )
        """
        _response = self._raw_client.validate(text=text, request_options=request_options)
        return _response.data


class AsyncSmsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawSmsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawSmsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawSmsClient
        """
        return self._raw_client

    async def validate(
        self, *, text: str, request_options: typing.Optional[RequestOptions] = None
    ) -> SmsValidationResult:
        """
        Validate SMS message content without sending it.

        Parameters
        ----------
        text : str
            Message content.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SmsValidationResult
            Returns the validation results.

        Examples
        --------
        import asyncio

        from pinnacle import AsyncPinnacle

        client = AsyncPinnacle(
            api_key="YOUR_API_KEY",
        )


        async def main() -> None:
            await client.message.sms.validate(
                text="Hello from Pinnacle",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.validate(text=text, request_options=request_options)
        return _response.data

# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .rcs_autofill_response import RcsAutofillResponse
    from .upsert_rcs_schema_agent import UpsertRcsSchemaAgent
    from .upsert_rcs_schema_agent_emails_item import UpsertRcsSchemaAgentEmailsItem
    from .upsert_rcs_schema_agent_phones_item import UpsertRcsSchemaAgentPhonesItem
    from .upsert_rcs_schema_agent_websites_item import UpsertRcsSchemaAgentWebsitesItem
    from .upsert_rcs_schema_links import UpsertRcsSchemaLinks
    from .upsert_rcs_schema_opt_in import UpsertRcsSchemaOptIn
    from .upsert_rcs_schema_opt_out import UpsertRcsSchemaOptOut
    from .upsert_rcs_schema_use_case import UpsertRcsSchemaUseCase
_dynamic_imports: typing.Dict[str, str] = {
    "RcsAutofillResponse": ".rcs_autofill_response",
    "UpsertRcsSchemaAgent": ".upsert_rcs_schema_agent",
    "UpsertRcsSchemaAgentEmailsItem": ".upsert_rcs_schema_agent_emails_item",
    "UpsertRcsSchemaAgentPhonesItem": ".upsert_rcs_schema_agent_phones_item",
    "UpsertRcsSchemaAgentWebsitesItem": ".upsert_rcs_schema_agent_websites_item",
    "UpsertRcsSchemaLinks": ".upsert_rcs_schema_links",
    "UpsertRcsSchemaOptIn": ".upsert_rcs_schema_opt_in",
    "UpsertRcsSchemaOptOut": ".upsert_rcs_schema_opt_out",
    "UpsertRcsSchemaUseCase": ".upsert_rcs_schema_use_case",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "RcsAutofillResponse",
    "UpsertRcsSchemaAgent",
    "UpsertRcsSchemaAgentEmailsItem",
    "UpsertRcsSchemaAgentPhonesItem",
    "UpsertRcsSchemaAgentWebsitesItem",
    "UpsertRcsSchemaLinks",
    "UpsertRcsSchemaOptIn",
    "UpsertRcsSchemaOptOut",
    "UpsertRcsSchemaUseCase",
]

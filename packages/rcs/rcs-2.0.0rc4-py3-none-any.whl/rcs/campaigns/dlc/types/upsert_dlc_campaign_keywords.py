# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .upsert_dlc_campaign_help_keyword import UpsertDlcCampaignHelpKeyword
from .upsert_dlc_campaign_opt_in_keyword import UpsertDlcCampaignOptInKeyword
from .upsert_dlc_campaign_opt_out_keyword import UpsertDlcCampaignOptOutKeyword


class UpsertDlcCampaignKeywords(UniversalBaseModel):
    """
    Keyword response configuration.
    """

    help: typing_extensions.Annotated[typing.Optional[UpsertDlcCampaignHelpKeyword], FieldMetadata(alias="HELP")] = (
        pydantic.Field(default=None)
    )
    """
    Help keyword settings.
    """

    opt_in: typing_extensions.Annotated[
        typing.Optional[UpsertDlcCampaignOptInKeyword], FieldMetadata(alias="OPT_IN")
    ] = pydantic.Field(default=None)
    """
    Opt-in keyword settings.
    """

    opt_out: typing_extensions.Annotated[
        typing.Optional[UpsertDlcCampaignOptOutKeyword], FieldMetadata(alias="OPT_OUT")
    ] = pydantic.Field(default=None)
    """
    Opt-out keyword settings.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

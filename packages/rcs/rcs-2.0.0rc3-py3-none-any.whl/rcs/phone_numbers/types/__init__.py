# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .phone_details_schema_level import PhoneDetailsSchemaLevel
    from .phone_details_schema_options import PhoneDetailsSchemaOptions
    from .phone_details_schema_options_enhanced_contact_info import PhoneDetailsSchemaOptionsEnhancedContactInfo
    from .phone_numbers_get_response import PhoneNumbersGetResponse
    from .search_schema_location import SearchSchemaLocation
    from .search_schema_number import SearchSchemaNumber
    from .search_schema_options import SearchSchemaOptions
_dynamic_imports: typing.Dict[str, str] = {
    "PhoneDetailsSchemaLevel": ".phone_details_schema_level",
    "PhoneDetailsSchemaOptions": ".phone_details_schema_options",
    "PhoneDetailsSchemaOptionsEnhancedContactInfo": ".phone_details_schema_options_enhanced_contact_info",
    "PhoneNumbersGetResponse": ".phone_numbers_get_response",
    "SearchSchemaLocation": ".search_schema_location",
    "SearchSchemaNumber": ".search_schema_number",
    "SearchSchemaOptions": ".search_schema_options",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "PhoneDetailsSchemaLevel",
    "PhoneDetailsSchemaOptions",
    "PhoneDetailsSchemaOptionsEnhancedContactInfo",
    "PhoneNumbersGetResponse",
    "SearchSchemaLocation",
    "SearchSchemaNumber",
    "SearchSchemaOptions",
]

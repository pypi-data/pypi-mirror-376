[project]
name = "nonebot-plugin-quark-autosave"
version = "0.1.8"
description = "配合 quark-auto-save(https://github.com/Cp0204/quark-auto-save) 使用, 支持添加，删除，列出，运行任务"
readme = "README.md"
authors = [{ name = "fllesser", email = "fllessive@gmail.com" }]
urls = { Repository = "https://github.com/fllesser/nonebot-plugin-quark-autosave" }
requires-python = ">=3.10"
dependencies = [
  "nonebot2>=2.4.3,<3.0.0",
  "nonebot-plugin-alconna>=0.59.4,<1.0.0", # 跨平台命令解析拓展
  "httpx>=0.27.0,<1.0.0",
]

[dependency-groups]
dev = [
  "nonebot2[fastapi, httpx, websockets]>=2.4.2,<3.0.0",
  "ruff>=0.13.0,<1.0.0",
  "nonemoji>=0.1.4,<1.0.0",
  "pre-commit>=4.3.0",
]

test = [
  "nonebot2[fastapi, httpx, websockets]>=2.4.2,<3.0.0",
  "nonebug>=0.3.7,<1.0.0",
  "pytest-xdist>=3.8.0,<4.0.0",
  "pytest-asyncio>=1.1.0,<1.2.0",
  "poethepoet>=0.36.0",
  "nonebot-adapter-onebot>=2.4.6,<3.0.0",
  "pytest-cov>=7.0.0",
  "respx>=0.22.0",
]

telebot = ["nonebot2[httpx]", "nonebot-adapter-telegram>=0.1.0b20"]

pydantic-v1 = ["pydantic>=1.10.0,<2.0.0"]
pydantic-v2 = ["pydantic>2.0.0,<3.0.0"]


[tool.uv]
required-version = ">=0.8.14"
default-groups = ["test", "dev"]
conflicts = [
  [
    { group = "pydantic-v1" },
    { group = "pydantic-v2" },
    { group = "telebot" },
  ],
]

[tool.nonebot]
adapters = [{ name = "Telegram", module_name = "nonebot.adapters.telegram" }]
plugins = ["nonebot_plugin_quark_autosave"]

[tool.poe.tasks]
test = "pytest --cov=src --cov-report xml --junitxml=./junit.xml -n auto"
bump = "bump-my-version bump"
show-bump = "bump-my-version show-bump"
freeze = { shell = "uv sync --no-install-project --no-dev --no-group test --group telebot && uv pip freeze > requirements.txt" }

[tool.coverage.report]
show_missing = true # 相当于 --cov-report=term-missing:cite[1]
omit = [
  "src/nonebot_plugin_quark_autosave/client.py",
  "src/nonebot_plugin_quark_autosave/exception.py",
]
exclude_lines = [
  "raise NotImplementedError",
  "if TYPE_CHECKING:",
  "@overload",
  "class Addition"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
pythonpath = ["src"]
addopts = [
  "-v",                    # 详细输出
  "-s",                    # 显示打印信息
  "--tb=short",            # 简短的错误回溯
  "-ra",                   # 显示所有测试结果摘要
  "--strict-markers",      # 严格标记模式
  "--import-mode=prepend", # 导入模式
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]

ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "W191",   # indentation contains tabs
  "TID252", # relative import
]


[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.pyright]
pythonVersion = "3.10"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
executionEnvironments = [
  { root = "./tests", extraPaths = [
    "./src",
  ] },
  { root = "./src" },
]
typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true


[build-system]
requires = ["uv_build>=0.8.14,<0.9.0"]
build-backend = "uv_build"


[tool.bumpversion]
current_version = "0.1.8"
commit = true
message = "🔖 release: bump vesion from {current_version} to {new_version}"
tag = true

[[tool.bumpversion.files]]
filename = "uv.lock"
search = "name = \"nonebot-plugin-quark-autosave\"\nversion = \"{current_version}\""
replace = "name = \"nonebot-plugin-quark-autosave\"\nversion = \"{new_version}\""

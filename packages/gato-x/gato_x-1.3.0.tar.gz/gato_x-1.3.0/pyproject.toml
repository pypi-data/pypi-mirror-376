[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gato-x"
version = "1.3.0"
description = "GitHub Actions Enumeration and Attack Framework"
readme = "README.md"
authors = [
    {name = "Adnan Khan", email = "adnanthekhan@proton.me"}
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "colorama",
    "httpx[socks,http2]",
    "pyyaml",
    "cryptography",
    "networkx",
    "PyJWT[crypto]"
]

[project.optional-dependencies]
test = [
    "flake8",
    "pytest",
    "pytest-cov",
    "black",
    "pytest-asyncio",
    "ruff"
]
docs = [
    "mkdocs",
    "mkdocs-material"
]
mcp = [
    "fastmcp"
]

[tool.hatch.build.targets.wheel]
packages = [
    "gatox"
]

[tool.pytest.ini_options]
testpaths = ["unit_test"]
python_files = ["test_*.py"]
addopts = "--cov=gatox"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["gatox"]

[tool.coverage.html]
directory = "cov_html"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "E203",  # whitespace before ':', conflicts with black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["gatox"]

[project.scripts]
gato-x = "gatox.main:entry"
gatox = "gatox.main:entry"
gato-x-mcp = "gatox.mcp.mcp_server:entry"

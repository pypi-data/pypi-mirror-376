name: Publish to PyPI and Update Backend

on:
  push:
    tags:
      - 'v*'  # Triggered on version tags like v0.1.0, v1.2.3
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases
  actions: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for setuptools-scm to work
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov build twine setuptools-scm
    
    - name: Install package
      run: pip install -e .
    
    - name: Run tests
      run: |
        pytest tests/ --cov=detectors --cov-report=xml
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

  publish:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for setuptools-scm
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools-scm
    
    - name: Build package
      run: python -m build
    
    - name: Publish to TestPyPI (optional)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/* --skip-existing || true
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.BACKEND_REPO_TOKEN }}
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes
          
          See [CHANGELOG.md](CHANGELOG.md) for details.
          
          ## Installation
          
          ```bash
          pip install zero_harm_ai_detectors==${{ steps.version.outputs.VERSION }}
          ```
        draft: false
        prerelease: false

  trigger-backend-update:
    needs: publish
    runs-on: ubuntu-latest
    
    steps:
    - name: Extract version
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
    
    - name: Debug Repository Dispatch
      run: |
        echo "Triggering repository dispatch for:"
        echo "Repository: Zero-Harm-AI-LLC/zero-harm-ai-backend"
        echo "Event Type: library-updated"
        echo "Version: ${{ steps.version.outputs.VERSION }}"
        echo "Library Name: zero_harm_ai_detectors"
    
    - name: Wait for PyPI propagation
      run: |
        echo "Waiting 2 minutes for PyPI to propagate the new version..."
        sleep 120
    
    - name: Trigger Backend Update
      id: dispatch
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.BACKEND_REPO_TOKEN }}
        repository: Zero-Harm-AI-LLC/zero-harm-ai-backend
        event-type: library-updated
        client-payload: |
          {
            "library_version": "${{ steps.version.outputs.VERSION }}",
            "library_name": "zero_harm_ai_detectors"
          }
    
    - name: Verify Dispatch Success
      run: |
        echo "âœ… Repository dispatch sent successfully"
        echo "Check the backend repository Actions tab for the triggered workflow"
        echo "Backend repo: https://github.com/Zero-Harm-AI-LLC/zero-harm-ai-backend/actions"